angular.module("councilsApp",["firebase","ionic","ionic.service.core","ionic.service.deploy","angularMoment","ionic.service.push","ngCordova","ionic-datepicker"]).run(["$ionicPlatform","$rootScope","$state","$cordovaStatusbar","$timeout","Auth","User","$ionicUser","$ionicPush","$ionicDeploy",function(e,o,n,t,i,r,a,s,l,c){function u(){setTimeout(function(){l.register({canShowAlert:!0,canSetBadge:!0,canPlaySound:!0,canRunActionsOnWake:!0,onNotification:function(e){return console.log(e),!0}})},1e3)}e.ready(function(){ionic.Platform.device();window.cordova&&window.cordova.plugins.Keyboard&&cordova.plugins.Keyboard.hideKeyboardAccessoryBar(!0),r.$onAuth(function(e){e?(console.log("Logged in as:",e.uid),a.set(e.uid).then(function(e){var o=s.get();o.user_id||(o.user_id=e.$id),angular.extend(o,{fname:e.fname,lname:e.lname,homeUnitNbr:e.homeUnitNbr,individualId:e.individualId,email:e.email}),s.identify(o).then(function(){window.plugins&&window.plugins.pushNotification&&u()})})):console.log("Logged out")})}),o.$on("$cordovaPush:tokenReceived",function(e,o){a.get().then(function(e){return e.$ref().child("tokens").child(ionic.Platform.device().uuid).set(o)})}),o.$on("$stateChangeError",function(e,o,t,i,r,a){"AUTH_REQUIRED"===a&&n.go("simple.welcome")})}]),Array.prototype.contains=function(e){return-1!=this.indexOf(e)},Array.prototype.pushUnique=function(e){this.contains(e)||this.push(e)},Array.prototype.remove=function(e){if(this.contains(e)){var o=this.indexOf(e);this.splice(o,1)}},Date.prototype.addDays=function(e){var o=new Date(this.valueOf());return o.setDate(o.getDate()+e),o},Date.prototype.getMonthString=function(){var e=["January","February","March","April","May","June","July","August","September","October","November","December"];return e[this.getMonth()]},Date.prototype.getOrdinalSuffix=function(){switch(this.getDate()){case 1:case 21:case 31:suffix="st";break;case 2:case 22:suffix="nd";break;case 3:case 23:suffix="rd";break;default:suffix="th"}return suffix},function(){HTMLSelectElement.prototype.customPlaceholder=function(e){var o=document.createElement("option");o.value="",o.innerText=e,o.setAttribute("disabled",!0),o.setAttribute("selected",!0),o.style.display="none";var n=this.children[0];console.log(n),console.log(this.children),this.insertBefore(o,n)}}(),function(){HTMLTextAreaElement.prototype.autoResize=function(){var e=document.createElement("div"),o=["padding","padding-top","padding-bottom","padding-left","padding-right","font-family","font-size","line-height","font","width","min-height","word-wrap","white-space"],n=window.getComputedStyle(this,null);for(var t in o){var i=n.getPropertyValue([o[t]]);e.style[o[t]]=i}e.style.display="block",e.style.position="absolute",e.style.zIndex="-10",e.style.top="0",e.style.color="transparent",this.parentNode.appendChild(e);var r=function(){e.innerText=this.value;var o=parseInt(window.getComputedStyle(e,null).getPropertyValue("height"));o+=parseInt(e.style.lineHeight),this.style.height=o+"px"};this.addEventListener("keyup",r),r.apply(this)}}(),angular.module("councilsApp").config(["$stateProvider","$urlRouterProvider","$ionicConfigProvider",function(e,o,n){n.views.maxCache(0),o.otherwise("/menu/home");var t="views/";e.state("menu.home",{cache:!1,url:"/home",views:{menuContent:{templateUrl:t+"home.html",controller:"HomeController",resolve:{currentAuth:["Auth",function(e){return e.$requireAuth()}]}}}}),e.state("simple",{"abstract":!0,url:"/simple",views:{mainContent:{templateUrl:t+"/layouts/no_sidebar.html"}}}),e.state("menu",{"abstract":!0,url:"/menu",views:{mainContent:{templateUrl:t+"/layouts/sidebar.html"}}}),e.state("simple.welcome",{url:"/welcome",templateUrl:t+"welcome.html"}),e.state("simple.onboarding",{url:"/onboarding",templateUrl:t+"onboarding.html"}),e.state("simple.setup",{url:"/setup",templateUrl:t+"setup.html",controller:"SetupController",resolve:{currentAuth:["Auth",function(e){return e.$waitForAuth()}]}}),e.state("simple.create",{url:"/create",templateUrl:t+"create.html",controller:"CreateController",resolve:{currentAuth:["Auth",function(e){return e.$waitForAuth()}]}}),e.state("simple.login",{url:"/login",templateUrl:t+"login.html",controller:"LoginController",resolve:{currentAuth:["Auth",function(e){return e.$waitForAuth()}]}}),e.state("navigations",{url:"/navigation",templateUrl:t+"navigation.html"}),e.state("menu.directory",{url:"/directory",views:{menuContent:{templateUrl:t+"/directory.html",controller:"DirectoryController",resolve:{currentAuth:["Auth",function(e){return e.$waitForAuth(e.$requireAuth)}]}}}}),e.state("menu.council",{"abstract":!0,url:"/council",params:{council:null},views:{menuContent:{templateUrl:t+"/council/tabbed_layout.html",controller:"CouncilController",resolve:{currentAuth:["Auth",function(e){e.$waitForAuth(e.$requireAuth)}]}}}}),e.state("menu.council.discussion",{url:"/discussion",params:{currentCouncilTab:"discussions"},views:{tab:{templateUrl:t+"/council/discussion_list.html",controller:"CouncilDiscussionController"}}}),e.state("menu.council.assignment",{url:"/assignment",params:{currentCouncilTab:"assignments"},views:{tab:{templateUrl:t+"/council/assignment_list.html",controller:"CouncilAssignmentController"}}}),e.state("menu.council.agenda",{url:"/agenda",params:{currentCouncilTab:"agendas",week:{value:moment().isoWeek()}},views:{tab:{templateUrl:t+"/council/agenda.html",controller:"AgendaDetailController"}}}),e.state("menu.council.discussion.new",{url:"/new",views:{modal:{templateUrl:t+"/council/discussion_new.html"}}}),e.state("menu.council.assignment.new",{url:"/new",views:{modal:{templateUrl:t+"/council/assignment_new.html"}}}),e.state("menu.council.edit",{url:"edit",views:{councilContent:{templateUrl:t+"/council/edit.html"}}}),e.state("menu.agenda",{"abstract":!0,url:"/agenda",views:{menuContent:{templateUrl:t+"/agenda/wrapper.html",controller:"AgendaController"}}}),e.state("menu.agenda.list",{url:"/list",views:{agendaContent:{templateUrl:t+"/agenda/list.html"}}})}]),angular.module("councilsApp").controller("ApplicationController",["MODALS","$ionicHistory","$scope","$ionicModal","$ionicSideMenuDelegate","Auth","$state",function(e,o,n,t,i,r,a){n.viewConfig={currentCouncilId:0,currentCouncilTab:"discussion"},n.logout=function(){return r.$unauth(),a.go("simple.welcome")},n.back=function(){o.goBack()}}]).controller("LoginController",["$scope","Auth","$state","$localstorage",function(e,o,n,t){e.credentials={email:t.get("email")},e.login=function(){o.$authWithPassword({email:e.credentials.email,password:e.credentials.password}).then(function(o){t.set("email",e.credentials.email),n.go("menu.home")})["catch"](function(e){console.error("Authentication failed:",e)})}}]).controller("SetupController",["$scope","$http","me","$state","$q",function(e,o,n,t,i){e.credentials={},e.ldsLogin=function(){o.post("http://councils-app.herokuapp.com/api/me",e.credentials).then(function(e){n.set(e.data),t.go("simple.create")})}}]).controller("CreateController",["$scope","me","Auth","$firebaseObject","$state","$ionicPopup",function(e,o,n,t,i,r){var a=new Firebase("https://councilsapp.firebaseio.com/users"),s=t(a);e.me=o.get(),e.createAccount=function(){var a,l;n.$createUser({email:e.me.email,password:e.me.pass}).then(function(e){return l=e.uid,s[l]=a=o.get().homeUnitNbr,s.$save()}).then(function(){var e=new Firebase("https://councilsapp.firebaseio.com/"+a+"/users"),n=t(e);return n[l]=o.get(),n.$save()}).then(function(){return n.$authWithPassword({email:e.me.email,password:e.me.pass})}).then(function(e){i.go("menu.home")})["catch"](function(o){var n=r.alert({title:"Error",template:o});n.then(function(o){e.me.pass=""})})}}]).controller("HomeController",["$scope","User","currentAuth","$firebaseObject","$firebaseArray",function(e,o,n,t,i){e.myAssignments=[],e.delegatedAssignments=[],e.discussions=[],e.update=function(e){e._completed?e._cancel=setTimeout(function(){e.completed=!0,e.$save()},15e3):clearTimeout(e._cancel)},e.councils=["Bishopric","Ward Council"],o.set(n.uid).then(function(o){return o.$bindTo(e,"user")}).then(function(){var o=new Firebase("https://councilsapp.firebaseio.com/"+e.user.homeUnitNbr+"/assignments"),n=new Firebase("https://councilsapp.firebaseio.com/"+e.user.homeUnitNbr+"/discussions");o.orderByChild("assignedTo").equalTo(e.user.$id).on("child_added",function(o){e.myAssignments.push(t(o.ref()))}),o.orderByChild("assignedBy").equalTo(e.user.$id).on("child_added",function(o){e.delegatedAssignments.push(t(o.ref()))}),_.forEach(e.user.discussions,function(o){var i=n.child(o);e.discussions.push(t(i))})})}]).controller("DirectoryController",["$scope","$firebaseArray","$cordovaSms","$cordovaEmailComposer",function(e,o,n,t){var i=new Firebase("https://councilsapp.firebaseio.com/538469/members"),r=new Firebase.util.Scroll(i,"surname");e.members=o(r),r.scroll.next(25),e.loadMore=function(){r.scroll.next(25),e.$broadcast("scroll.infiniteScrollComplete")},e.email=function(e){t.isAvailable().then(function(){var o={to:e.email};t.open(o).then(null,function(){})},function(){})},e.call=function(e){window.location.href="tel:"+e.phone.replace(/\W/,"")},e.message=function(e){n.send(e.phone.replace(/\W/,""),"",{}).then(function(){},function(e){})}}]).controller("AgendaDetailController",["$scope","$firebaseObject","$firebaseArray","$stateParams","$timeout","AGENDAS","$state","MembersModal",function(e,o,n,t,i,r,a,s){if(e.council=t.council||"Bishopric",e.week=parseInt(t.week),e.currentWeek=moment().isoWeek(),e.council){var l=new Firebase("https://councilsapp.firebaseio.com/538469/agendas").child(e.council);e.availableAgendas=n(l),e.openMembersModal=function(o,n){s.openModal(n,e.data[o]).then(function(t){e.data[o]=1===n?_.pick(t[0],["fname","lname"]):t.map(function(e){return _.pick(e,["fname","lname"])})})};var l=new Firebase("https://councilsapp.firebaseio.com/538469/agendas").child(e.council).child(e.week),c=o(l);c.$bindTo(e,"data").then(function(){i(function(){angular.element("[auto-resize]").each(function(){autosize(this)})})})}else a.go("menu.agenda.list")}]).controller("AgendaController",["$scope","HymnService","AGENDAS","MemberService",function(e,o,n,t){e.members=t.getMembers(),e.hymns=o.getList(),e.agendas=n,e.agendaAccess={5:!0,6:!0,7:!0}}]).controller("CouncilDiscussionController",["$scope","$stateParams","$state","$firebaseArray","User","MembersModal","$ionicModal","MODALS","Notify",function(e,o,n,t,i,r,a,s,l){if(e.council=o.council||"Bishopric",e.council){a.fromTemplateUrl(s.createDiscussion,{scope:e,animation:"slide-in-up"}).then(function(o){e.modal=o}),e.openModal=function(){console.log("open modal"),e.modal.show()},e.closeModal=function(){e.modal.hide()},e.$on("$destroy",function(){e.modal.remove()}),e.openMembersModal=function(o,n){r.openModal(n,e.data[o]).then(function(t){e.data[o]=1===n?_.pick(t[0],["fname","lname","profileImage","$id","tokens"]):t.map(function(e){return _.pick(e,["fname","lname","profileImage","$id","tokens"])})})};var c=i.get().then(function(o){var n=new Firebase("https://councilsapp.firebaseio.com/").child(o.homeUnitNbr).child("discussions").orderByChild("council").equalTo(e.council);return e.discussions=t(n),o});e.data={content:"",discussionParticipants:[]},e.createDiscussion=function(){var o,n,t=[];c.then(function(t){return o=t,n={content:e.data.content,createdBy:t.$id,createdDate:(new Date).toISOString(),userAvatar:t.profileImage,userName:t.fname+" "+t.lname},e.discussions.$add(n)}).then(function(n){var i=n.key(),r=new Firebase("https://councilsapp.firebaseio.com/"+o.homeUnitNbr+"/users/");r.child(o.$id+"/discussions").push({council:e.council,key:i}),_.forEach(e.data.discussionParticipants,function(o){o.tokens&&_.forEach(o.tokens,function(e){t.push(e.token)}),r.child(o.$id+"/discussions").push({council:e.council,key:i})}),e.modal.hide()}).then(function(){return l.send(o.fname+" "+o.lname+" just added you to a discussion for "+e.council,t)})}}else n.go("menu.council.list")}]).controller("CouncilAssignmentController",["$scope","$stateParams","$state","MembersModal","$firebaseArray","User","$ionicModal","MODALS","Notify",function(e,o,n,t,i,r,a,s,l){if(e.council=o.council||"Bishopric",e.update=function(o){return e.assignments.$save(o.$id)},e.council){a.fromTemplateUrl(s.createAssignment,{scope:e,animation:"slide-in-up"}).then(function(o){e.modal=o}),e.openModal=function(){e.modal.show()},console.log(e.openModal),e.closeModal=function(){e.modal.hide()},e.$on("$destroy",function(){e.modal.remove()}),e.datePickerCallback=angular.noop,e.openMembersModal=function(o,n){t.openModal(n,e.data[o]).then(function(t){e.data[o]=1===n?_.pick(t[0],["fname","lname","profileImage","$id","tokens"]):t.map(function(e){return _.pick(e,["fname","lname","profileImage","$id","tokens"])})})},e.data={dueDate:new Date,assignmentParticipants:[],assignmentAssignee:null,content:""};var c=r.get().then(function(o){var n=new Firebase("https://councilsapp.firebaseio.com/").child(o.homeUnitNbr).child("assignments").orderByChild("council").equalTo(e.council);return e.assignments=i(n),o});e.createAssignment=function(){var o,n,t=[];c.then(function(t){return o=t,n={createdBy:o.$id,assignedTo:e.data.assignmentAssignee,dueDate:e.data.dueDate.toISOString(),content:e.data.content,completed:!1,participants:e.data.assignmentParticipants},e.assignments.$add(n)}).then(function(i){var r=i.key(),a=new Firebase("https://councilsapp.firebaseio.com/"+o.homeUnitNbr+"/users/");a.child(o.$id+"/assignments").push({council:e.council,key:r}),a.child(e.data.assignmentAssignee.$id+"/assignments").push({council:e.council,key:r}),e.data.assignmentAssignee.tokens&&_.forEach(e.data.assignmentAssignee.tokens,function(e){t.push(e.token)}),_.forEach(n.participants,function(o){o.tokens&&_.forEach(o.tokens,function(e){t.push(e.token)}),a.child(o.$id+"/assignments").push({council:e.council,key:r})})}).then(function(){e.modal.hide()}).then(function(){return l.send(o.fname+" "+o.lname+" just added you to a task for "+e.council,t)})}}else n.go("menu.council.list")}]).controller("CouncilController",["MemberService","COUNCILS","$scope","$stateParams","$state",function(e,o,n,t,i){n.active=i.current.name,n.council=t.council||"Bishopric",e.getMembers().then(function(e){n.members=e}),n.councilList=o,n.councilAccess={11:{assignmentCount:3,commentCount:4},12:{assignmentCount:0,commentCount:2}}}]),angular.module("councilsApp").factory("Notify",["$http",function(e){return{send:function(o,n){return e.post("http://councils-app.herokuapp.com/api/push",{message:o,tokens:n})}}}]).factory("User",["$firebaseObject","$q",function(e,o){var n={},t=null,i=o.defer();return{get:function(){return i.promise.then(function(){return n})},set:function(o){var r=new Firebase("https://councilsapp.firebaseio.com/users/"+o);return e(r).$loaded().then(function(n){t=n.$value,angular.module("councilsApp").value("UNITNUMBER",t),n.$destroy();var i=new Firebase("https://councilsapp.firebaseio.com/"+t+"/users/"+o);return e(i).$loaded()}).then(function(e){return n=e,i.resolve(n),n})},getUnit:function(){return t}}}]).factory("Auth",["$firebaseAuth",function(e){var o=new Firebase("https://councilsapp.firebaseio.com");return e(o)}]).factory("me",function(){var e={};return{getUnit:function(){return e.homeUnitNbr},get:function(){return e},set:function(o){e=o,e.fname=o.fname||o.preferredName.split(", ")[1],e.lname=o.lname||o.surname,e.email=o.email}}}).factory("MemberService",["$firebaseArray","User",function(e,o){return{getMembers:function(){return o.get().then(function(e){return e.homeUnitNbr}).then(function(o){{var n=new Firebase("https://councilsapp.firebaseio.com/"+o+"/users");e(n)}return e(n).$loaded()})}}}]).factory("MembersModal",["MemberService","$q","MODALS","$ionicModal","$rootScope",function(e,o,n,t,i){function r(e){$modalScope.search.Results=e.length?u.filter(function(e){var o=e.fname+" "+e.lname;return o.toLowerCase().indexOf($modalScope.search.Term.toLowerCase())>=0}):u}$modalScope=i.$new();var a,s="members",l=null;$modalScope.search={},$modalScope.selection={},$modalScope.search.Term="",$modalScope.search.Results={},$modalScope.selection.users=[];var c=function(e,i){var r=o.defer();return i&&($modalScope.selection.users=1===e?[i]:i),l=e||Number.MAX_VALUE,t.fromTemplateUrl(n[s],{animation:"slide-in-up",scope:$modalScope}).then(function(e){$modalScope.search.Term="",a=e,$modalScope.closeModal=function(){r.resolve($modalScope.selection.users.slice()),$modalScope.selection.users.splice(0,$modalScope.selection.users.length),a.remove()},a.show()}),r.promise};$modalScope.selection.toggle=function(e){$modalScope.selection.users.contains(e)?$modalScope.selection.users.remove(e):$modalScope.selection.users.length<=1&&1===l?($modalScope.selection.users.splice(0,1),$modalScope.selection.users.pushUnique(e),$modalScope.closeModal()):$modalScope.selection.users.length<l&&$modalScope.selection.users.pushUnique(e)},$modalScope.$watch("search.Term",r);var u=[];return e.getMembers().then(function(e){$modalScope.search.Results=u=e}),{openModal:c}}]).factory("CouncilsService",["$scope",function(){return function(){}}]).factory("HymnService",function(){var e=["The Morning Breaks","The Spirit of God","Now Let Us Rejoice","Truth Eternal","High on the Mountain Top","Redeemer of Israel","Israel, Israel, God Is Calling","Awake and Arise","Come, Rejoice","Come, Sing to the Lord","What Was Witnessed in the Heavens?","'Twas Witnessed in the Morning Sky","An Angel from on High","Sweet Is the Peace the Gospel Brings","I Saw a Mighty Angel Fly","What Glorious Scenes Mine Eyes Behold","Awake, Ye Saints of God, Awake!","The Voice of God Again Is Heard","We Thank Thee, O God, for a Prophet","God of Power, God of Right","Come, Listen to a Prophet's Voice","We Listen to a Prophet's Voice","We Ever Pray for Thee","God Bless Our Prophet Dear","Now We'll Sing with One Accord","Joseph Smith's First Prayer","Praise to the Man","Saints, Behold How Great Jehovah","A Poor Wayfaring Man of Grief","Come, Come, Ye Saints","O God, Our Help in Ages Past","The Happy Day at Last Has Come","Our Mountain Home So Dear","O Ye Mountains High","For the Strength of the Hills","They, the Builders of the Nation","The Wintry Day, Descending to Its Close","Come, All Ye Saints of Zion","O Saints of Zion","Arise, O Glorious Zion","Let Zion in Her Beauty Rise","Hail to the Brightness of Zion's Glad Morning!","Zion Stands with Hills Surrounded","Beautiful Zion, Built Above","Lead Me into Life Eternal","Glorious Things of Thee Are Spoken","We Will Sing of Zion","Glorious Things Are Sung of Zion","Adam-ondi-Ahman","Come, Thou Glorious Day of Promise","Sons of Michael, He Approaches","The Day Dawn Is Breaking","Let Earth's Inhabitants Rejoice","Behold, the Mountain of the Lord","Lo, the Mighty God Appearing!","Softly Beams the Sacred Dawning","We're Not Ashamed to Own Our Lord","Come, Ye Children of the Lord","Come, O Thou King of Kings","Battle Hymn of the Republic","Raise Your Voices to the Lord","All Creatures of Our God and King","Great King of Heaven","On This Day of Joy and Gladness","Come, All Ye Saints Who Dwell on Earth","Rejoice, the Lord Is King!","Glory to God on High","A Mighty Fortress Is Our God","All Glory, Laud, and Honor","Sing Praise to Him","With Songs of Praise","Praise to the Lord, the Almighty","Praise the Lord with Heart and Voice","Praise Ye the Lord","In Hymns of Praise","God of Our Fathers, We Come unto Thee","Great Is the Lord","God of Our Fathers, Whose Almighty Hand","With All the Power of Heart and Tongue","God of Our Fathers, Known of Old","Press Forward, Saints","For All the Saints","Guide Us, O Thou Great Jehovah","Faith of Our Fathers","How Firm a Foundation","How Great Thou Art","God Is Love","Great God, Attend While Zion Sings","The Lord Is My Light","From All That Dwell below the Skies","Father, Thy Children to Thee Now Raise","For the Beauty of the Earth","Prayer of Thanksgiving","Come, Ye Thankful People","Now Thank We All Our God","Dearest Children, God Is Near You","Lead, Kindly Light","I Need Thee Every Hour","Nearer, Dear Savior, to Thee","Nearer, My God, to Thee","Guide Me to Thee","Jesus, Lover of My Soul","Precious Savior, Dear Redeemer","Jesus, Savior, Pilot Me","Master, the Tempest Is Raging","God Speed the Right","Lord, Accept Our True Devotion","The Lord Is My Shepherd","The Lord My Pasture Will Prepare","Cast Thy Burden upon the Lord","Rock of Ages","Savior, Redeemer of My Soul","Our Savior's Love","Come unto Him","Come, Ye Disconsolate","Come, Follow Me","Come unto Jesus","Ye Simple Souls Who Stray","Come, We That Love the Lord","Lean on My Ample Arm","I'm a Pilgrim, I'm a Stranger","Though Deepening Trials","Oh, May My Soul Commune with Thee","Be Still, My Soul","How Gentle God's Commands","How Long, O Lord Most Holy and True","Does the Journey Seem Long?","When Faith Endures","Where Can I Turn for Peace?","Be Thou Humble","More Holiness Give Me","God Is in His Holy Temple","Father in Heaven","I Believe in Christ","My Redeemer Lives","I Know That My Redeemer Lives","Testimony","Bless Our Fast, We Pray","In Fasting We Approach Thee","Did You Think to Pray?","Jesus, the Very Thought of Thee","Sweet Hour of Prayer","Let the Holy Spirit Guide","Secret Prayer","Prayer Is the Soul's Sincere Desire","Gently Raise the Sacred Strain","Sweet Is the Work","Sabbath Day","As the Dew from Heaven Distilling","O Thou Kind and Gracious Father","We Meet, Dear Lord","God Be with You Till We Meet Again","Lord, We Ask Thee Ere We Part","Father, This Hour Has Been One of Joy","We Have Partaken of Thy Love","Sing We Now at Parting","Thy Spirit, Lord, Has Stirred Our Souls","Before Thee, Lord, I Bow My Head","Now the Day Is Over","Softly Now the Light of Day","The Lord Be with Us","Lord, We Come before Thee Now","Lord, Dismiss Us with Thy Blessing","Great God, to Thee My Evening Song","Abide with Me; 'Tis Eventide","Abide with Me!","Come, Let Us Sing an Evening Hymn","As the Shadows Fall","As Now We Take the Sacrament","God, Our Father, Hear Us Pray","With Humble Heart","In Humility, Our Savior","While of These Emblems We Partake","While of These Emblems We Partake","O God, the Eternal Father","'Tis Sweet to Sing the Matchless Love","'Tis Sweet To Sing the Matchless Love","O Lord of Hosts","Again, Our Dear Redeeming Lord","Father in Heaven, We Do Believe","Jesus of Nazareth, Savior and King","We'll Sing All Hail to Jesus' Name","In Remembrance of Thy Suffering","Upon the Cross of Calvary","Reverently and Meekly Now","Again We Meet around the Board","God Loved Us, So He Sent His Son","Thy Will, O Lord, Be Done","O Thou, Before the World Began","In Memory of the Crucified","Behold the Great Redeemer Die","He Died! The Great Redeemer Died","I Stand All Amazed","There Is a Green Hill Far Away","How Great the Wisdom and the Love","Jesus, Once of Humble Birth","O Savior, Thou Who Wearest a Crown","That Easter Morn","He Is Risen!","Christ the Lord Is Risen Today","Joy to the World","Oh, Come, All Ye Faithful","Angels We Have Heard on High","Silent Night","Once in Royal David's City","Away in a Manger","It Came upon the Midnight Clear","O Little Town of Bethlehem","Hark! The Herald Angels Sing","With Wondering Awe","While Shepherds Watched Their Flocks","Far, Far Away on Judea's Plains","The First Noel","I Heard the Bells on Christmas Day","Ring Out, Wild Bells","We Are Sowing","Come, Let Us Anew","We Give Thee But Thine Own","Because I Have Been Given Much","Lord, I Would Follow Thee","Dear to the Heart of the Shepherd","Hear Thou Our Hymn, O Lord","Have I Done Any Good?","I Have Work Enough to Do","We Are Marching On to Glory","Improve the Shining Moments","There Is Sunshine in My Soul Today","You Can Make the Pathway Bright","Today, While the Sun Shines","Scatter Sunshine","Father, Cheer Our Souls Tonight","Let Us Oft Speak Kind Words","Nay, Speak No Ill","Jesus, Mighty King in Zion","Should You Feel Inclined to Censure","Lord, Accept into Thy Kingdom","Do What Is Right","Behold Thy Sons and Daughters, Lord","Choose the Right","Know This, That Every Soul Is Free","Count Your Blessings","Praise God, from Whom All Blessings Flow","Let Us All Press On","Come Along, Come Along","This House We Dedicate to Thee","Onward, Christian Soldiers","We Love Thy House, O God","Up, Awake, Ye Defenders of Zion","Called to Serve","We Are All Enlisted","Behold! A Royal Army","Put Your Shoulder to the Wheel","Like Ten Thousand Legions Marching","True to the Faith","Carry On","As Zion's Youth in Latter Days","Rejoice! A Glorious Sound Is Heard","O Thou Rock of Our Salvation","Hope of Israel","Who's on the Lord's Side?","Thy Servants Are Prepared","Go, Ye Messengers of Glory","Go Forth with Faith","Hark, All Ye Nations!","Arise, O God, and Shine","The Time Is Far Spent","How Wondrous and Great","Come, All Whose Souls Are Lighted","Jehovah, Lord of Heaven and Earth","I'll Go Where You Want Me to Go","Oh, Holy Words of Truth and Love","Oh Say, What Is Truth?","Truth Reflects upon Our Senses","The Iron Rod","Men Are That They Might Have Joy","Come Away to the Sunday School","As I Search the Holy Scriptures","Thanks for the Sabbath School","Thy Holy Word","Welcome, Welcome, Sabbath Morning","Help Me Teach with Inspiration","We Meet Again in Sabbath School","The Glorious Gospel Light Has Shone","If You Could Hie to Kolob","God Moves in a Mysterious Way","Oh, What Songs of the Heart","Rise, Ye Saints, and Temples Enter","How Beautiful Thy Temples, Lord","Holy Temples on Mount Zion","Rejoice, Ye Saints of Latter Days","Turn Your Hearts","O My Father","Each Life That Touches Ours for Good","Love at Home","O Love That Glorifies the Son","Our Father, by Whose Name","From Homes of Saints Glad Songs Arise","Home Can Be a Heaven on Earth","Children of Our Heavenly Father","Families Can Be Together Forever","I Am a Child of God","I Know My Father Lives","Keep the Commandments","Teach Me to Walk in the Light","The Light Divine","God's Daily Care","In Our Lovely Deseret","Love One Another","As Sisters in Zion (Women)","A Key Was Turned in Latter Days (Women)","We Meet Again as Sisters (Women)","We Ever Pray for Thee (Women)","God Is Love (Women)","How Gentle God's Commands (Women)","Jesus, the Very Thought of Thee (Women)","The Lord Is My Shepherd (Women)","Sweet Is the Work (Women)","Love at Home (Women)","Ye Elders of Israel (Men)","The Priesthood of Our Lord (Men)","Ye Who Are Called to Labor (Men)","Come, All Ye Sons of God (Men)","Rise Up, O Men of God (Men's Choir)","Rise Up, O Men of God (Men)","See the Mighty Priesthood Gathered (Men's Choir)","Come, Come, Ye Saints (Men's Choir)","Go, Ye Messengers of Heaven (Men's Choir)","An Angel from on High","Thy Servants Are Prepared (Men's Choir)","See, the Mighty Angel Flying (Men's Choir)","Oh Say, What Is Truth? (Men's Choir)","Come, O Thou King of Kings (Men's Choir)","High on the Mountain Top (Men's Choir)","I Need Thee Every Hour (Men's Choir)","Brightly Beams Our Father's Mercy (Men's Choir)","School Thy Feelings (Men's Choir)","O Home Beloved (Men's Choir)","America the Beautiful","My Country, 'Tis of Thee","The Star-Spangled Banner","God Save the King"];return{getList:function(){return e},getHymn:function(o){return o>341||1>o?"Invalid Hymn Number ("+o+")":e[o-1]}}}).factory("$localstorage",["$window",function(e){return{set:function(o,n){e.localStorage[o]=n},get:function(o,n){return e.localStorage[o]||n},setObject:function(o,n){e.localStorage[o]=JSON.stringify(n)},getObject:function(o){return JSON.parse(e.localStorage[o]||"{}")}}}]),angular.module("councilsApp").filter("weekDate",function(){return function(e){return moment().isoWeek(+e).day(0).format("MMM D")}}).filter("fullName",function(){return function(e,o){return e&&e.fname&&e.lname?e.fname+" "+e.lname:o}}),angular.module("councilsApp").directive("autoResize",function(){return function(e,o){autosize(o)}}).directive("customPlaceholder",function(){return function(e,o){var n=o[0].getAttribute("custom-placeholder");o[0].customPlaceholder(n)}}).directive("uiSrefDisable",["$parse","$rootScope",function(e,o){return{priority:100,restrict:"A",compile:function(n,t){var i=e(t.uiSrefDisable);return{pre:function(e,n){var t="click";n.on(t,function(n){var t=function(){return i(e,{$event:n})?(n.stopImmediatePropagation(),n.preventDefault(),!1):void 0};o.$$phase?e.$evalAsync(t):e.$apply(t)})},post:function(){}}}}}]),angular.module("councilsApp").constant("MODALS",{connectionError:"views/modals/no_internet.html",permissionError:"views/modals/no_permission.html",feedback:"views/modals/feedback.html",members:"views/modals/members.html",createDiscussion:"views/council/discussion_new.html",createAssignment:"views/council/assignment_new.html"}).constant("AGENDAS",{stake:{0:"Presidency",1:"High Council",2:"Bishops",3:"Stake Council",4:"Bishops Welfare"},ward:{5:"Bishopric",6:"PEC",7:"Ward Council"}}).constant("COUNCILS",{stake:{0:"Stake Presidency",1:"High Council",2:"Patriarch",3:"Bishops",4:"Relief Society",5:"Young Men",6:"Young Women",7:"Sunday School",8:"Primary",9:"Missionary",10:"Auditing"},ward:{11:"Bishopric",12:"Ward Council",13:"Sacrament",14:"Interviews",15:"PEC",16:"High Priest",17:"Elders",18:"Relief Society",19:"Young Men",20:"Young Women",21:"Sunday School",22:"Primary"}});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJhbmd1bGFyIiwibW9kdWxlIiwicnVuIiwiJGlvbmljUGxhdGZvcm0iLCIkcm9vdFNjb3BlIiwiJHN0YXRlIiwiJGNvcmRvdmFTdGF0dXNiYXIiLCIkdGltZW91dCIsIkF1dGgiLCJVc2VyIiwiJGlvbmljVXNlciIsIiRpb25pY1B1c2giLCIkaW9uaWNEZXBsb3kiLCJyZWdpc3RlckZvck5vdGlmaWNhdGlvbnMiLCJzZXRUaW1lb3V0IiwicmVnaXN0ZXIiLCJjYW5TaG93QWxlcnQiLCJjYW5TZXRCYWRnZSIsImNhblBsYXlTb3VuZCIsImNhblJ1bkFjdGlvbnNPbldha2UiLCJvbk5vdGlmaWNhdGlvbiIsIm5vdGlmaWNhdGlvbiIsImNvbnNvbGUiLCJsb2ciLCJyZWFkeSIsImlvbmljIiwiUGxhdGZvcm0iLCJkZXZpY2UiLCJ3aW5kb3ciLCJjb3Jkb3ZhIiwicGx1Z2lucyIsIktleWJvYXJkIiwiaGlkZUtleWJvYXJkQWNjZXNzb3J5QmFyIiwiJG9uQXV0aCIsImF1dGhEYXRhIiwidWlkIiwic2V0IiwidGhlbiIsIm1lIiwidXNlciIsImdldCIsInVzZXJfaWQiLCIkaWQiLCJleHRlbmQiLCJmbmFtZSIsImxuYW1lIiwiaG9tZVVuaXROYnIiLCJpbmRpdmlkdWFsSWQiLCJlbWFpbCIsImlkZW50aWZ5IiwicHVzaE5vdGlmaWNhdGlvbiIsIiRvbiIsImV2ZW50IiwiZGF0YSIsIiRyZWYiLCJjaGlsZCIsInV1aWQiLCJuZXh0IiwibmV4dFAiLCJwcmV2aW91cyIsInByZXZpb3VzUCIsImVycm9yIiwiZ28iLCJBcnJheSIsInByb3RvdHlwZSIsImNvbnRhaW5zIiwiZWxlbWVudCIsInRoaXMiLCJpbmRleE9mIiwicHVzaFVuaXF1ZSIsInB1c2giLCJyZW1vdmUiLCJzcGxpY2VTdGFydCIsInNwbGljZSIsIkRhdGUiLCJhZGREYXlzIiwiZGF5cyIsIm5ld0RhdGUiLCJ2YWx1ZU9mIiwic2V0RGF0ZSIsImdldERhdGUiLCJnZXRNb250aFN0cmluZyIsImVuZ2xpc2hNb250aHMiLCJnZXRNb250aCIsImdldE9yZGluYWxTdWZmaXgiLCJzdWZmaXgiLCJIVE1MU2VsZWN0RWxlbWVudCIsImN1c3RvbVBsYWNlaG9sZGVyIiwicGxhY2Vob2xkZXJUZXh0IiwiZGVmYXVsdE9wdGlvbiIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsInZhbHVlIiwiaW5uZXJUZXh0Iiwic2V0QXR0cmlidXRlIiwic3R5bGUiLCJkaXNwbGF5IiwiZmlyc3QiLCJjaGlsZHJlbiIsImluc2VydEJlZm9yZSIsIkhUTUxUZXh0QXJlYUVsZW1lbnQiLCJhdXRvUmVzaXplIiwiY2xvbmUiLCJjbG9uYWJsZV9hdHRyaWJ1dGVzIiwic3R5bGVzIiwiZ2V0Q29tcHV0ZWRTdHlsZSIsImF0dHIiLCJ2YWwiLCJnZXRQcm9wZXJ0eVZhbHVlIiwicG9zaXRpb24iLCJ6SW5kZXgiLCJ0b3AiLCJjb2xvciIsInBhcmVudE5vZGUiLCJhcHBlbmRDaGlsZCIsImFkanVzdFRleHRhcmVhVG9GaXRDb250ZW50IiwiY2xvbmVIZWlnaHQiLCJwYXJzZUludCIsImxpbmVIZWlnaHQiLCJoZWlnaHQiLCJhZGRFdmVudExpc3RlbmVyIiwiYXBwbHkiLCJjb25maWciLCIkc3RhdGVQcm92aWRlciIsIiR1cmxSb3V0ZXJQcm92aWRlciIsIiRpb25pY0NvbmZpZ1Byb3ZpZGVyIiwidmlld3MiLCJtYXhDYWNoZSIsIm90aGVyd2lzZSIsInZpZXdSb290Iiwic3RhdGUiLCJjYWNoZSIsInVybCIsIm1lbnVDb250ZW50IiwidGVtcGxhdGVVcmwiLCJjb250cm9sbGVyIiwicmVzb2x2ZSIsImN1cnJlbnRBdXRoIiwiJHJlcXVpcmVBdXRoIiwiYWJzdHJhY3QiLCJtYWluQ29udGVudCIsIiR3YWl0Rm9yQXV0aCIsInBhcmFtcyIsImNvdW5jaWwiLCJjdXJyZW50Q291bmNpbFRhYiIsInRhYiIsIndlZWsiLCJtb21lbnQiLCJpc29XZWVrIiwibW9kYWwiLCJjb3VuY2lsQ29udGVudCIsImFnZW5kYUNvbnRlbnQiLCJNT0RBTFMiLCIkaW9uaWNIaXN0b3J5IiwiJHNjb3BlIiwiJGlvbmljTW9kYWwiLCIkaW9uaWNTaWRlTWVudURlbGVnYXRlIiwidmlld0NvbmZpZyIsImN1cnJlbnRDb3VuY2lsSWQiLCJsb2dvdXQiLCIkdW5hdXRoIiwiYmFjayIsImdvQmFjayIsIiRsb2NhbHN0b3JhZ2UiLCJjcmVkZW50aWFscyIsImxvZ2luIiwiJGF1dGhXaXRoUGFzc3dvcmQiLCJwYXNzd29yZCIsIiRodHRwIiwiJHEiLCJsZHNMb2dpbiIsInBvc3QiLCJyZXNwb25zZSIsIiRmaXJlYmFzZU9iamVjdCIsIiRpb25pY1BvcHVwIiwicmVmIiwiRmlyZWJhc2UiLCJ1c2VycyIsImNyZWF0ZUFjY291bnQiLCJob21lIiwiJGNyZWF0ZVVzZXIiLCJwYXNzIiwidXNlckRhdGEiLCIkc2F2ZSIsIm1lbWJlcnMiLCJhbGVydFBvcHVwIiwiYWxlcnQiLCJ0aXRsZSIsInRlbXBsYXRlIiwicmVzIiwiJGZpcmViYXNlQXJyYXkiLCJteUFzc2lnbm1lbnRzIiwiZGVsZWdhdGVkQXNzaWdubWVudHMiLCJkaXNjdXNzaW9ucyIsInVwZGF0ZSIsIl9jb21wbGV0ZWQiLCJfY2FuY2VsIiwiY29tcGxldGVkIiwiY2xlYXJUaW1lb3V0IiwiY291bmNpbHMiLCIkYmluZFRvIiwiYXNzaWdubWVudHMiLCJvcmRlckJ5Q2hpbGQiLCJlcXVhbFRvIiwib24iLCJzbmFwc2hvdCIsIl8iLCJmb3JFYWNoIiwiaXRlbSIsIiRjb3Jkb3ZhU21zIiwiJGNvcmRvdmFFbWFpbENvbXBvc2VyIiwic2Nyb2xsUmVmIiwidXRpbCIsIlNjcm9sbCIsInNjcm9sbCIsImxvYWRNb3JlIiwiJGJyb2FkY2FzdCIsImlzQXZhaWxhYmxlIiwidG8iLCJvcGVuIiwiY2FsbCIsImxvY2F0aW9uIiwiaHJlZiIsInBob25lIiwicmVwbGFjZSIsIm1lc3NhZ2UiLCJzZW5kIiwiJHN0YXRlUGFyYW1zIiwiQUdFTkRBUyIsIk1lbWJlcnNNb2RhbCIsImN1cnJlbnRXZWVrIiwiYXZhaWxhYmxlQWdlbmRhcyIsIm9wZW5NZW1iZXJzTW9kYWwiLCJkYXRhU3RvcmUiLCJtYXgiLCJvcGVuTW9kYWwiLCJyZXN1bHQiLCJwaWNrIiwibWFwIiwib2JqIiwiZWFjaCIsImF1dG9zaXplIiwiSHltblNlcnZpY2UiLCJNZW1iZXJTZXJ2aWNlIiwiZ2V0TWVtYmVycyIsImh5bW5zIiwiZ2V0TGlzdCIsImFnZW5kYXMiLCJhZ2VuZGFBY2Nlc3MiLCI1IiwiNiIsIjciLCJOb3RpZnkiLCJmcm9tVGVtcGxhdGVVcmwiLCJzY29wZSIsImFuaW1hdGlvbiIsInNob3ciLCJjbG9zZU1vZGFsIiwiaGlkZSIsInByb21pc2UiLCJjb250ZW50IiwiZGlzY3Vzc2lvblBhcnRpY2lwYW50cyIsImNyZWF0ZURpc2N1c3Npb24iLCJjcmVhdG9yIiwiZGlzY3Vzc2lvbiIsInRva2VucyIsImNyZWF0ZWRCeSIsImNyZWF0ZWREYXRlIiwidG9JU09TdHJpbmciLCJ1c2VyQXZhdGFyIiwicHJvZmlsZUltYWdlIiwidXNlck5hbWUiLCIkYWRkIiwiaWQiLCJrZXkiLCJ0b2tlbiIsImRhdGVQaWNrZXJDYWxsYmFjayIsIm5vb3AiLCJkdWVEYXRlIiwiYXNzaWdubWVudFBhcnRpY2lwYW50cyIsImFzc2lnbm1lbnRBc3NpZ25lZSIsImNyZWF0ZUFzc2lnbm1lbnQiLCJhc3NpZ25tZW50IiwiYXNzaWduZWRUbyIsInBhcnRpY2lwYW50cyIsIkNPVU5DSUxTIiwiYWN0aXZlIiwiY3VycmVudCIsIm5hbWUiLCJjb3VuY2lsTGlzdCIsImNvdW5jaWxBY2Nlc3MiLCIxMSIsImFzc2lnbm1lbnRDb3VudCIsImNvbW1lbnRDb3VudCIsIjEyIiwiZmFjdG9yeSIsInVuaXQiLCJkZWZlcnJlZCIsImRlZmVyIiwiJGxvYWRlZCIsIiR2YWx1ZSIsIiRkZXN0cm95IiwicmVmMiIsImdldFVuaXQiLCIkZmlyZWJhc2VBdXRoIiwiX21lIiwicHJlZmVycmVkTmFtZSIsInNwbGl0Iiwic3VybmFtZSIsInNlYXJjaCIsIl9uZXciLCIkbW9kYWxTY29wZSIsIlJlc3VsdHMiLCJsZW5ndGgiLCJ3YXJkTWVtYmVycyIsImZpbHRlciIsIm0iLCJ0b0xvd2VyQ2FzZSIsIlRlcm0iLCIkbmV3IiwidXNlck1vZGFsIiwidHlwZSIsIm1heFNlbGVjdGVkIiwic2VsZWN0aW9uIiwic2VsZWN0ZWQiLCJOdW1iZXIiLCJNQVhfVkFMVUUiLCJzbGljZSIsInRvZ2dsZSIsIm1lbSIsIiR3YXRjaCIsImdldEh5bW4iLCIkd2luZG93IiwibG9jYWxTdG9yYWdlIiwiZGVmYXVsdFZhbHVlIiwic2V0T2JqZWN0IiwiSlNPTiIsInN0cmluZ2lmeSIsImdldE9iamVjdCIsInBhcnNlIiwiaW5wdXQiLCJkYXkiLCJmb3JtYXQiLCJvdGhlciIsImRpcmVjdGl2ZSIsImdldEF0dHJpYnV0ZSIsIiRwYXJzZSIsInByaW9yaXR5IiwicmVzdHJpY3QiLCJjb21waWxlIiwiJGVsZW1lbnQiLCJmbiIsInVpU3JlZkRpc2FibGUiLCJwcmUiLCJldmVudE5hbWUiLCJjYWxsYmFjayIsIiRldmVudCIsInN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbiIsInByZXZlbnREZWZhdWx0IiwiJCRwaGFzZSIsIiRldmFsQXN5bmMiLCIkYXBwbHkiLCJjb25zdGFudCIsImNvbm5lY3Rpb25FcnJvciIsInBlcm1pc3Npb25FcnJvciIsImZlZWRiYWNrIiwic3Rha2UiLCIwIiwiMSIsIjIiLCIzIiwiNCIsIndhcmQiLCI4IiwiOSIsIjEwIiwiMTMiLCIxNCIsIjE1IiwiMTYiLCIxNyIsIjE4IiwiMTkiLCIyMCIsIjIxIiwiMjIiXSwibWFwcGluZ3MiOiJBQUlBQSxRQUFRQyxPQUFPLGVBQ2IsV0FDQSxRQUNBLHFCQUFxQix1QkFFckIsZ0JBQ0EscUJBQ0EsWUFDQSxxQkFHREMsS0FBQSxpQkFBQSxhQUFBLFNBQUEsb0JBQUEsV0FBQSxPQUFBLE9BQUEsYUFBQSxhQUFBLGVBQUksU0FBU0MsRUFBZ0JDLEVBQVlDLEVBQVFDLEVBQW1CQyxFQUFVQyxFQUFNQyxFQUFNQyxFQUFZQyxFQUFZQyxHQXNEakgsUUFBU0MsS0FDUEMsV0FBVyxXQUNUSCxFQUFXSSxVQUNUQyxjQUFjLEVBQ2RDLGFBQWEsRUFDYkMsY0FBYyxFQUNkQyxxQkFBcUIsRUFDckJDLGVBQWdCLFNBQVNDLEdBd0J2QixNQXRCQUMsU0FBUUMsSUFBSUYsSUFzQkwsTUFHVixLQXZGTGxCLEVBQWVxQixNQUFNLFdBQ0tDLE1BQU1DLFNBQVNDLFFBSXBDQyxRQUFPQyxTQUFXRCxPQUFPQyxRQUFRQyxRQUFRQyxVQUMxQ0YsUUFBUUMsUUFBUUMsU0FBU0MsMEJBQXlCLEdBWXBEeEIsRUFBS3lCLFFBQVEsU0FBU0MsR0FDaEJBLEdBQ0ZaLFFBQVFDLElBQUksZ0JBQWlCVyxFQUFTQyxLQUN0QzFCLEVBQUsyQixJQUFJRixFQUFTQyxLQUNmRSxLQUFLLFNBQVVDLEdBRWQsR0FBSUMsR0FBTzdCLEVBQVc4QixLQUNsQkQsR0FBS0UsVUFDUEYsRUFBS0UsUUFBVUgsRUFBR0ksS0FJcEIxQyxRQUFRMkMsT0FBT0osR0FDYkssTUFBT04sRUFBR00sTUFDVkMsTUFBT1AsRUFBR08sTUFDVkMsWUFBYVIsRUFBR1EsWUFDaEJDLGFBQWNULEVBQUdTLGFBQ2pCQyxNQUFPVixFQUFHVSxRQUladEMsRUFDR3VDLFNBQVNWLEdBQ1RGLEtBQUssV0FDQVQsT0FBT0UsU0FBV0YsT0FBT0UsUUFBUW9CLGtCQUNuQ3JDLFNBS1ZTLFFBQVFDLElBQUksa0JBMkNsQm5CLEVBQVcrQyxJQUFJLDZCQUE4QixTQUFTQyxFQUFPQyxHQUMzRDVDLEVBQUsrQixNQUNGSCxLQUFLLFNBQVVDLEdBQ2QsTUFBT0EsR0FBR2dCLE9BQU9DLE1BQU0sVUFBVUEsTUFBTTlCLE1BQU1DLFNBQVNDLFNBQVM2QixNQUFNcEIsSUFBSWlCLE9BSy9FakQsRUFBVytDLElBQUksb0JBQXFCLFNBQVNDLEVBQU9LLEVBQU1DLEVBQU9DLEVBQVVDLEVBQVdDLEdBQ3RFLGtCQUFWQSxHQUNGeEQsRUFBT3lELEdBQUcsdUJBUWhCQyxNQUFNQyxVQUFVQyxTQUFXLFNBQVNDLEdBQ2xDLE1BQWdDLElBQXpCQyxLQUFLQyxRQUFRRixJQUV0QkgsTUFBTUMsVUFBVUssV0FBYSxTQUFTSCxHQUM5QkMsS0FBS0YsU0FBU0MsSUFDbEJDLEtBQUtHLEtBQUtKLElBRWRILE1BQU1DLFVBQVVPLE9BQVMsU0FBU0wsR0FDaEMsR0FBR0MsS0FBS0YsU0FBU0MsR0FBVSxDQUN6QixHQUFJTSxHQUFjTCxLQUFLQyxRQUFRRixFQUMvQkMsTUFBS00sT0FBT0QsRUFBYSxLQU03QkUsS0FBS1YsVUFBVVcsUUFBVSxTQUFTQyxHQUVoQyxHQUFJQyxHQUFVLEdBQUlILE1BQUtQLEtBQUtXLFVBRTVCLE9BREFELEdBQVFFLFFBQVFGLEVBQVFHLFVBQVlKLEdBQzdCQyxHQUlUSCxLQUFLVixVQUFVaUIsZUFBaUIsV0FDOUIsR0FBSUMsSUFDRixVQUNBLFdBQ0EsUUFDQSxRQUNBLE1BQ0EsT0FDQSxPQUNBLFNBQ0EsWUFDQSxVQUNBLFdBQ0EsV0FFRixPQUFPQSxHQUFlZixLQUFLZ0IsYUFJN0JULEtBQUtWLFVBQVVvQixpQkFBbUIsV0FDaEMsT0FBUWpCLEtBQUthLFdBQ1gsSUFBSyxHQUNMLElBQUssSUFDTCxJQUFLLElBQ0hLLE9BQVMsSUFDVCxNQUVGLEtBQUssR0FDTCxJQUFLLElBQ0hBLE9BQVMsSUFDVCxNQUVGLEtBQUssR0FDTCxJQUFLLElBQ0hBLE9BQVMsSUFDVCxNQUVGLFNBQ0VBLE9BQVMsS0FFYixNQUFPQSxTQUdULFdBQ0VDLGtCQUFrQnRCLFVBQVV1QixrQkFBb0IsU0FBU0MsR0FDdkQsR0FBSUMsR0FBZ0JDLFNBQVNDLGNBQWMsU0FDM0NGLEdBQWNHLE1BQVEsR0FDdEJILEVBQWNJLFVBQVlMLEVBQzFCQyxFQUFjSyxhQUFhLFlBQVcsR0FDdENMLEVBQWNLLGFBQWEsWUFBVyxHQUN0Q0wsRUFBY00sTUFBTUMsUUFBVSxNQUU5QixJQUFJQyxHQUFROUIsS0FBSytCLFNBQVMsRUFDMUI1RSxTQUFRQyxJQUFJMEUsR0FDWjNFLFFBQVFDLElBQUk0QyxLQUFLK0IsVUFDakIvQixLQUFLZ0MsYUFBYVYsRUFBZVEsT0FLckMsV0FDRUcsb0JBQW9CcEMsVUFBVXFDLFdBQWEsV0FFekMsR0FBSUMsR0FBUVosU0FBU0MsY0FBYyxPQUUvQlksR0FDRixVQUNBLGNBQ0EsaUJBQ0EsZUFDQSxnQkFDQSxjQUNBLFlBQ0EsY0FDQSxPQUNBLFFBQ0EsYUFDQSxZQUNBLGVBSUVDLEVBQVM1RSxPQUFPNkUsaUJBQWlCdEMsS0FBSyxLQUMxQyxLQUFNLEdBQUl1QyxLQUFRSCxHQUFxQixDQUNyQyxHQUFJSSxHQUFNSCxFQUFPSSxrQkFBa0JMLEVBQW9CRyxJQUN2REosR0FBTVAsTUFBTVEsRUFBb0JHLElBQVNDLEVBSTNDTCxFQUFNUCxNQUFNQyxRQUFVLFFBQ3RCTSxFQUFNUCxNQUFNYyxTQUFXLFdBQ3ZCUCxFQUFNUCxNQUFNZSxPQUFTLE1BQ3JCUixFQUFNUCxNQUFNZ0IsSUFBTSxJQUNsQlQsRUFBTVAsTUFBTWlCLE1BQVEsY0FHcEI3QyxLQUFLOEMsV0FBV0MsWUFBWVosRUFFNUIsSUFBSWEsR0FBNkIsV0FDL0JiLEVBQU1ULFVBQVkxQixLQUFLeUIsS0FDdkIsSUFBSXdCLEdBQWNDLFNBQVN6RixPQUFPNkUsaUJBQWlCSCxFQUFNLE1BQU1NLGlCQUFpQixVQUNoRlEsSUFBZUMsU0FBU2YsRUFBTVAsTUFBTXVCLFlBQ3BDbkQsS0FBSzRCLE1BQU13QixPQUFTSCxFQUFjLEtBSXBDakQsTUFBS3FELGlCQUFpQixRQUFTTCxHQUMvQkEsRUFBMkJNLE1BQU10RCxVQUtyQ25FLFFBQVFDLE9BQU8sZUFFZHlILFFBQUEsaUJBQUEscUJBQUEsdUJBQU8sU0FBU0MsRUFBZ0JDLEVBQW9CQyxHQUNuREEsRUFBcUJDLE1BQU1DLFNBQVMsR0FDcENILEVBQW1CSSxVQUFVLGFBQzdCLElBQUlDLEdBQVcsUUFFZk4sR0FBZU8sTUFBTSxhQUNuQkMsT0FBTyxFQUNQQyxJQUFLLFFBQ0xOLE9BQ0VPLGFBQ0VDLFlBQWFMLEVBQVcsWUFDeEJNLFdBQVksaUJBQ1pDLFNBQ0VDLGFBQWdCLE9BQVEsU0FBU2pJLEdBQy9CLE1BQU9BLEdBQUtrSSxzQkFPdEJmLEVBQWVPLE1BQU0sVUFDbkJTLFlBQVUsRUFDVlAsSUFBSyxVQUNMTixPQUNFYyxhQUNFTixZQUFhTCxFQUFXLCtCQUs5Qk4sRUFBZU8sTUFBTSxRQUNuQlMsWUFBVSxFQUNWUCxJQUFLLFFBQ0xOLE9BQ0VjLGFBQ0VOLFlBQWFMLEVBQVcsNEJBSzlCTixFQUFlTyxNQUFNLGtCQUNuQkUsSUFBSyxXQUNMRSxZQUFhTCxFQUFXLGlCQUcxQk4sRUFBZU8sTUFBTSxxQkFDbkJFLElBQUssY0FDTEUsWUFBYUwsRUFBVyxvQkFHMUJOLEVBQWVPLE1BQU0sZ0JBQ25CRSxJQUFLLFNBQ0xFLFlBQWFMLEVBQVcsYUFDeEJNLFdBQVksa0JBQ1pDLFNBQ0VDLGFBQWdCLE9BQVEsU0FBU2pJLEdBQy9CLE1BQU9BLEdBQUtxSSxvQkFLbEJsQixFQUFlTyxNQUFNLGlCQUNuQkUsSUFBSyxVQUNMRSxZQUFhTCxFQUFXLGNBQ3hCTSxXQUFZLG1CQUNaQyxTQUNFQyxhQUFnQixPQUFRLFNBQVNqSSxHQUMvQixNQUFPQSxHQUFLcUksb0JBS2xCbEIsRUFBZU8sTUFBTSxnQkFDbkJFLElBQUssU0FDTEUsWUFBYUwsRUFBVyxhQUN4Qk0sV0FBWSxrQkFDWkMsU0FDRUMsYUFBZ0IsT0FBUSxTQUFTakksR0FDL0IsTUFBT0EsR0FBS3FJLG9CQUtsQmxCLEVBQWVPLE1BQU0sZUFDbkJFLElBQUssY0FDTEUsWUFBYUwsRUFBVyxvQkFHMUJOLEVBQWVPLE1BQU0sa0JBQ25CRSxJQUFLLGFBQ0xOLE9BQ0VPLGFBQ0VDLFlBQWFMLEVBQVcsa0JBQ3hCTSxXQUFZLHNCQUNaQyxTQUNFQyxhQUFnQixPQUFRLFNBQVNqSSxHQUMvQixNQUFPQSxHQUFLcUksYUFBYXJJLEVBQUtrSSxxQkFPeENmLEVBQWVPLE1BQU0sZ0JBQ25CUyxZQUFVLEVBQ1ZQLElBQUssV0FDTFUsUUFDRUMsUUFBUyxNQUVYakIsT0FDRU8sYUFDRUMsWUFBYUwsRUFBVyw4QkFDeEJNLFdBQVksb0JBQ1pDLFNBQ0VDLGFBQWdCLE9BQVEsU0FBU2pJLEdBQy9CQSxFQUFLcUksYUFBYXJJLEVBQUtrSSxxQkE4QmpDZixFQUFlTyxNQUFNLDJCQUNuQkUsSUFBSyxjQUNMVSxRQUNFRSxrQkFBbUIsZUFFckJsQixPQUNFbUIsS0FDRVgsWUFBYUwsRUFBVyxnQ0FDeEJNLFdBQVksa0NBS2xCWixFQUFlTyxNQUFNLDJCQUNuQkUsSUFBSyxjQUNMVSxRQUNFRSxrQkFBbUIsZUFFckJsQixPQUNFbUIsS0FDRVgsWUFBYUwsRUFBVyxnQ0FDeEJNLFdBQVksa0NBS2xCWixFQUFlTyxNQUFNLHVCQUNuQkUsSUFBSyxVQUNMVSxRQUNFRSxrQkFBbUIsVUFDbkJFLE1BQ0V0RCxNQUFPdUQsU0FBU0MsWUFHcEJ0QixPQUNFbUIsS0FDRVgsWUFBYUwsRUFBVyx1QkFDeEJNLFdBQVksNkJBS2xCWixFQUFlTyxNQUFNLCtCQUNuQkUsSUFBSyxPQUNMTixPQUNFdUIsT0FDRWYsWUFBYUwsRUFBVyxtQ0FLOUJOLEVBQWVPLE1BQU0sK0JBQ25CRSxJQUFLLE9BQ0xOLE9BQ0V1QixPQUNFZixZQUFhTCxFQUFXLG1DQUs5Qk4sRUFBZU8sTUFBTSxxQkFDbkJFLElBQUssT0FDTE4sT0FDRXdCLGdCQUNFaEIsWUFBYUwsRUFBVyx5QkFNOUJOLEVBQWVPLE1BQU0sZUFDbkJTLFlBQVUsRUFDVlAsSUFBSyxVQUNMTixPQUNFTyxhQUNFQyxZQUFhTCxFQUFXLHVCQUN4Qk0sV0FBWSx1QkFLbEJaLEVBQWVPLE1BQU0sb0JBQ25CRSxJQUFLLFFBQ0xOLE9BQ0V5QixlQUNFakIsWUFBYUwsRUFBVywyQkFPaENqSSxRQUFRQyxPQUFPLGVBRWRzSSxXQUFXLHlCQUFBLFNBQUEsZ0JBQUEsU0FBQSxjQUFBLHlCQUFBLE9BQUEsU0FBeUIsU0FBU2lCLEVBQVFDLEVBQWVDLEVBQVFDLEVBQWFDLEVBQXdCcEosRUFBTUgsR0FFdEhxSixFQUFPRyxZQUNMQyxpQkFBa0IsRUFDbEJkLGtCQUFtQixjQUdyQlUsRUFBT0ssT0FBUyxXQUVkLE1BREF2SixHQUFLd0osVUFDRTNKLEVBQU95RCxHQUFHLG1CQUduQjRGLEVBQU9PLEtBQU8sV0FDWlIsRUFBY1MsYUFJakIzQixXQUFXLG1CQUFBLFNBQUEsT0FBQSxTQUFBLGdCQUFtQixTQUFVbUIsRUFBUWxKLEVBQU1ILEVBQVE4SixHQUM3RFQsRUFBT1UsYUFDTHBILE1BQU9tSCxFQUFjM0gsSUFBSSxVQUUzQmtILEVBQU9XLE1BQVEsV0FDYjdKLEVBQUs4SixtQkFDSHRILE1BQU8wRyxFQUFPVSxZQUFZcEgsTUFDMUJ1SCxTQUFVYixFQUFPVSxZQUFZRyxXQUM1QmxJLEtBQUssU0FBU0gsR0FDZmlJLEVBQWMvSCxJQUFJLFFBQVNzSCxFQUFPVSxZQUFZcEgsT0FDOUMzQyxFQUFPeUQsR0FBRyxlQUxadEQsU0FNUyxTQUFTcUQsR0FDaEJ2QyxRQUFRdUMsTUFBTSx5QkFBMEJBLFNBSzdDMEUsV0FBVyxtQkFBQSxTQUFBLFFBQUEsS0FBQSxTQUFBLEtBQW1CLFNBQVNtQixFQUFRYyxFQUFPbEksRUFBSWpDLEVBQVFvSyxHQUNqRWYsRUFBT1UsZUFDUFYsRUFBT2dCLFNBQVcsV0FDaEJGLEVBQU1HLEtBQUssMkNBQTRDakIsRUFBT1UsYUFDM0QvSCxLQUFLLFNBQVV1SSxHQUNkdEksRUFBR0YsSUFBSXdJLEVBQVN2SCxNQUNoQmhELEVBQU95RCxHQUFHLHVCQUtqQnlFLFdBQVcsb0JBQUEsU0FBQSxLQUFBLE9BQUEsa0JBQUEsU0FBQSxjQUFvQixTQUFVbUIsRUFBUXBILEVBQUk5QixFQUFNcUssRUFBaUJ4SyxFQUFReUssR0FDbkYsR0FBSUMsR0FBTSxHQUFJQyxVQUFTLDRDQUNuQkMsRUFBUUosRUFBZ0JFLEVBQzVCckIsR0FBT3BILEdBQUtBLEVBQUdFLE1BQ2ZrSCxFQUFPd0IsY0FBZ0IsV0FDckIsR0FBSUMsR0FBTWhKLENBQ1YzQixHQUFLNEssYUFDRHBJLE1BQU8wRyxFQUFPcEgsR0FBR1UsTUFDakJ1SCxTQUFVYixFQUFPcEgsR0FBRytJLE9BRXJCaEosS0FBSyxTQUFTaUosR0FHYixNQUZBbkosR0FBTW1KLEVBQVNuSixJQUNmOEksRUFBTTlJLEdBQU9nSixFQUFPN0ksRUFBR0UsTUFBTU0sWUFDdEJtSSxFQUFNTSxVQUVkbEosS0FBSyxXQUNKLEdBQUkwSSxHQUFNLEdBQUlDLFVBQVMsc0NBQXNDRyxFQUFLLFVBQzlESyxFQUFVWCxFQUFnQkUsRUFFOUIsT0FEQVMsR0FBUXJKLEdBQU9HLEVBQUdFLE1BQ1hnSixFQUFRRCxVQUVoQmxKLEtBQUssV0FDSixNQUFPN0IsR0FBSzhKLG1CQUNWdEgsTUFBTzBHLEVBQU9wSCxHQUFHVSxNQUNqQnVILFNBQVViLEVBQU9wSCxHQUFHK0ksU0FHdkJoSixLQUFLLFNBQVVILEdBQ2Q3QixFQUFPeUQsR0FBRyxlQXRCZHRELFNBd0JTLFNBQVNxRCxHQUNkLEdBQUk0SCxHQUFhWCxFQUFZWSxPQUMxQkMsTUFBTyxRQUNQQyxTQUFVL0gsR0FFWjRILEdBQVdwSixLQUFLLFNBQVN3SixHQUN2Qm5DLEVBQU9wSCxHQUFHK0ksS0FBTyxXQU0zQjlDLFdBQVcsa0JBQUEsU0FBQSxPQUFBLGNBQUEsa0JBQUEsaUJBQWtCLFNBQVNtQixFQUFRakosRUFBTWdJLEVBQWFvQyxFQUFpQmlCLEdBQ2pGcEMsRUFBT3FDLGlCQUNQckMsRUFBT3NDLHdCQUNQdEMsRUFBT3VDLGVBRVB2QyxFQUFPd0MsT0FBUyxTQUFVdkYsR0FDcEJBLEVBQUl3RixXQUNOeEYsRUFBSXlGLFFBQVV0TCxXQUFXLFdBQ3ZCNkYsRUFBSTBGLFdBQVksRUFDaEIxRixFQUFJNEUsU0FDSCxNQUVIZSxhQUFhM0YsRUFBSXlGLFVBSXJCMUMsRUFBTzZDLFVBQVksWUFBYSxnQkFFaEM5TCxFQUFLMkIsSUFBSXFHLEVBQVl0RyxLQUNsQkUsS0FBSyxTQUFVRSxHQUNkLE1BQU9BLEdBQUtpSyxRQUFROUMsRUFBUSxVQUU3QnJILEtBQUssV0FDSixHQUFJb0ssR0FBYyxHQUFJekIsVUFBUyxzQ0FBc0N0QixFQUFPbkgsS0FBS08sWUFBWSxnQkFDekZtSixFQUFjLEdBQUlqQixVQUFTLHNDQUFzQ3RCLEVBQU9uSCxLQUFLTyxZQUFZLGVBRTdGMkosR0FBWUMsYUFBYSxjQUN0QkMsUUFBUWpELEVBQU9uSCxLQUFLRyxLQUNwQmtLLEdBQUcsY0FBZSxTQUFTQyxHQUMxQm5ELEVBQU9xQyxjQUFjekgsS0FBS3VHLEVBQWdCZ0MsRUFBUzlCLFVBR3ZEMEIsRUFBWUMsYUFBYSxjQUN0QkMsUUFBUWpELEVBQU9uSCxLQUFLRyxLQUNwQmtLLEdBQUcsY0FBZSxTQUFTQyxHQUMxQm5ELEVBQU9zQyxxQkFBcUIxSCxLQUFLdUcsRUFBZ0JnQyxFQUFTOUIsVUFHOUQrQixFQUFFQyxRQUFRckQsRUFBT25ILEtBQUswSixZQUFhLFNBQVVlLEdBQzNDLEdBQUl6SixHQUFRMEksRUFBWTFJLE1BQU15SixFQUM5QnRELEdBQU91QyxZQUFZM0gsS0FBS3VHLEVBQWdCdEgsV0FLL0NnRixXQUFXLHVCQUFBLFNBQUEsaUJBQUEsY0FBQSx3QkFBdUIsU0FBVW1CLEVBQVFvQyxFQUFnQm1CLEVBQWFDLEdBQ2hGLEdBQUluQyxHQUFNLEdBQUlDLFVBQVMscURBQ25CbUMsRUFBWSxHQUFJbkMsVUFBU29DLEtBQUtDLE9BQU90QyxFQUFLLFVBQzlDckIsR0FBTzhCLFFBQVVNLEVBQWVxQixHQUNoQ0EsRUFBVUcsT0FBTzdKLEtBQUssSUFFdEJpRyxFQUFPNkQsU0FBVyxXQUVoQkosRUFBVUcsT0FBTzdKLEtBQUssSUFDdEJpRyxFQUFPOEQsV0FBVyxrQ0FHcEI5RCxFQUFPMUcsTUFBUSxTQUFVZ0ssR0FDdkJFLEVBQXNCTyxjQUFjcEwsS0FBSyxXQUV0QyxHQUFJVyxJQUNEMEssR0FBSVYsRUFBS2hLLE1BR1prSyxHQUFzQlMsS0FBSzNLLEdBQU9YLEtBQUssS0FBTSxlQUk1QyxlQUtOcUgsRUFBT2tFLEtBQU8sU0FBVVosR0FDdEJwTCxPQUFPaU0sU0FBU0MsS0FBSyxPQUFPZCxFQUFLZSxNQUFNQyxRQUFRLEtBQU0sS0FHdkR0RSxFQUFPdUUsUUFBVSxTQUFVakIsR0FDekJDLEVBQ0dpQixLQUFLbEIsRUFBS2UsTUFBTUMsUUFBUSxLQUFNLElBQUssT0FDbkMzTCxLQUFLLGFBRUgsU0FBU3dCLFVBTWpCMEUsV0FBVywwQkFBQSxTQUFBLGtCQUFBLGlCQUFBLGVBQUEsV0FBQSxVQUFBLFNBQUEsZUFBMEIsU0FBVW1CLEVBQVFtQixFQUFpQmlCLEVBQWdCcUMsRUFBYzVOLEVBQVU2TixFQUFTL04sRUFBUWdPLEdBS2hJLEdBSkEzRSxFQUFPWCxRQUFVb0YsRUFBYXBGLFNBQVcsWUFDekNXLEVBQU9SLEtBQU83QixTQUFTOEcsRUFBYWpGLE1BQ3BDUSxFQUFPNEUsWUFBY25GLFNBQVNDLFVBRTFCTSxFQUFPWCxRQUFTLENBQ2xCLEdBQUlnQyxHQUFNLEdBQUlDLFVBQVMscURBQXFEekgsTUFBTW1HLEVBQU9YLFFBQ3pGVyxHQUFPNkUsaUJBQW1CekMsRUFBZWYsR0FDekNyQixFQUFPOEUsaUJBQW1CLFNBQVNDLEVBQVdDLEdBQzVDTCxFQUFhTSxVQUFVRCxFQUFLaEYsRUFBT3JHLEtBQUtvTCxJQUFZcE0sS0FBSyxTQUFTdU0sR0FDaEVsRixFQUFPckcsS0FBS29MLEdBQW9CLElBQVBDLEVBQVc1QixFQUFFK0IsS0FBS0QsRUFBTyxJQUFLLFFBQVMsVUFBWUEsRUFBT0UsSUFBSSxTQUFVOUIsR0FBUSxNQUFPRixHQUFFK0IsS0FBSzdCLEdBQU8sUUFBUyxjQUczSSxJQUFJakMsR0FBTSxHQUFJQyxVQUFTLHFEQUFxRHpILE1BQU1tRyxFQUFPWCxTQUFTeEYsTUFBTW1HLEVBQU9SLE1BQzNHNkYsRUFBTWxFLEVBQWdCRSxFQUMxQmdFLEdBQUl2QyxRQUFROUMsRUFBUSxRQUNqQnJILEtBQUssV0FDSjlCLEVBQVMsV0FDUFAsUUFBUWtFLFFBQVEsaUJBQWlCOEssS0FBSyxXQUFZQyxTQUFTOUssZ0JBSWpFOUQsR0FBT3lELEdBQUcsdUJBS2J5RSxXQUFXLG9CQUFBLFNBQUEsY0FBQSxVQUFBLGdCQUFvQixTQUM5Qm1CLEVBQ0F3RixFQUNBZCxFQUNBZSxHQUdBekYsRUFBTzhCLFFBQVUyRCxFQUFjQyxhQUMvQjFGLEVBQU8yRixNQUFRSCxFQUFZSSxVQUMzQjVGLEVBQU82RixRQUFVbkIsRUFDakIxRSxFQUFPOEYsY0FBaUJDLEdBQUksRUFBS0MsR0FBSSxFQUFLQyxHQUFJLE1BSS9DcEgsV0FBVywrQkFBQSxTQUFBLGVBQUEsU0FBQSxpQkFBQSxPQUFBLGVBQUEsY0FBQSxTQUFBLFNBQStCLFNBQVNtQixFQUFReUUsRUFBYzlOLEVBQVF5TCxFQUFnQnJMLEVBQU00TixFQUFjMUUsRUFBYUgsRUFBUW9HLEdBR3ZJLEdBRkFsRyxFQUFPWCxRQUFVb0YsRUFBYXBGLFNBQVcsWUFFckNXLEVBQU9YLFFBQVMsQ0FFbEJZLEVBQVlrRyxnQkFBZ0JyRyxFQUFPLGtCQUNqQ3NHLE1BQU9wRyxFQUNQcUcsVUFBVyxnQkFDVjFOLEtBQUssU0FBU2dILEdBQ2ZLLEVBQU9MLE1BQVFBLElBR2pCSyxFQUFPaUYsVUFBWSxXQUNqQnJOLFFBQVFDLElBQUksY0FDWm1JLEVBQU9MLE1BQU0yRyxRQUVmdEcsRUFBT3VHLFdBQWEsV0FDbEJ2RyxFQUFPTCxNQUFNNkcsUUFHZnhHLEVBQU92RyxJQUFJLFdBQVksV0FDckJ1RyxFQUFPTCxNQUFNOUUsV0FHZm1GLEVBQU84RSxpQkFBbUIsU0FBU0MsRUFBV0MsR0FDNUNMLEVBQWFNLFVBQVVELEVBQUtoRixFQUFPckcsS0FBS29MLElBQVlwTSxLQUFLLFNBQVN1TSxHQUNoRWxGLEVBQU9yRyxLQUFLb0wsR0FBb0IsSUFBUEMsRUFBVzVCLEVBQUUrQixLQUFLRCxFQUFPLElBQUssUUFBUyxRQUFTLGVBQWdCLE1BQU8sV0FBYUEsRUFBT0UsSUFBSSxTQUFVOUIsR0FBUSxNQUFPRixHQUFFK0IsS0FBSzdCLEdBQU8sUUFBUyxRQUFTLGVBQWdCLE1BQU8sZUFJNU0sSUFBSW1ELEdBQVUxUCxFQUFLK0IsTUFDaEJILEtBQUssU0FBVUMsR0FDZCxHQUFJeUksR0FBTSxHQUFJQyxVQUFTLHVDQUF1Q3pILE1BQU1qQixFQUFHUSxhQUFhUyxNQUFNLGVBQWVtSixhQUFhLFdBQVdDLFFBQVFqRCxFQUFPWCxRQUVoSixPQURBVyxHQUFPdUMsWUFBY0gsRUFBZWYsR0FDN0J6SSxHQUdYb0gsR0FBT3JHLE1BQ0wrTSxRQUFTLEdBQ1RDLDJCQUdGM0csRUFBTzRHLGlCQUFtQixXQUN4QixHQUFJQyxHQUFTQyxFQUFZQyxJQUN6Qk4sR0FDRzlOLEtBQUssU0FBVUMsR0FTZCxNQVJBaU8sR0FBVWpPLEVBQ1ZrTyxHQUNFSixRQUFTMUcsRUFBT3JHLEtBQUsrTSxRQUNyQk0sVUFBV3BPLEVBQUdJLElBQ2RpTyxhQUFhLEdBQUlqTSxPQUFPa00sY0FDeEJDLFdBQVl2TyxFQUFHd08sYUFDZkMsU0FBVXpPLEVBQUdNLE1BQVEsSUFBTU4sRUFBR08sT0FFekI2RyxFQUFPdUMsWUFBWStFLEtBQUtSLEtBRWhDbk8sS0FBSyxTQUFVMEksR0FDZCxHQUFJa0csR0FBS2xHLEVBQUltRyxNQUNUakcsRUFBUSxHQUFJRCxVQUFTLHNDQUFzQ3VGLEVBQVF6TixZQUFZLFVBQ25GbUksR0FBTTFILE1BQU1nTixFQUFRN04sSUFBSSxnQkFBZ0I0QixNQUN0Q3lFLFFBQVNXLEVBQU9YLFFBQ2hCbUksSUFBS0QsSUFFUG5FLEVBQUVDLFFBQVFyRCxFQUFPckcsS0FBS2dOLHVCQUF3QixTQUFVOU4sR0FDbERBLEVBQUtrTyxRQUNQM0QsRUFBRUMsUUFBUXhLLEVBQUtrTyxPQUFRLFNBQVVVLEdBQy9CVixFQUFPbk0sS0FBSzZNLEVBQU1BLFNBR3RCbEcsRUFBTTFILE1BQU1oQixFQUFLRyxJQUFJLGdCQUFnQjRCLE1BQ25DeUUsUUFBU1csRUFBT1gsUUFDaEJtSSxJQUFLRCxNQUdUdkgsRUFBT0wsTUFBTTZHLFNBRWQ3TixLQUFLLFdBQ0osTUFBT3VOLEdBQU8xQixLQUFLcUMsRUFBUTNOLE1BQVEsSUFBTTJOLEVBQVExTixNQUFRLHVDQUF1QzZHLEVBQU9YLFFBQVMwSCxVQUt0SHBRLEdBQU95RCxHQUFHLHdCQUlmeUUsV0FBVywrQkFBQSxTQUFBLGVBQUEsU0FBQSxlQUFBLGlCQUFBLE9BQUEsY0FBQSxTQUFBLFNBQStCLFNBQVNtQixFQUFReUUsRUFBYzlOLEVBQVFnTyxFQUFjdkMsRUFBZ0JyTCxFQUFNa0osRUFBYUgsRUFBUW9HLEdBT3ZJLEdBTkFsRyxFQUFPWCxRQUFVb0YsRUFBYXBGLFNBQVcsWUFFekNXLEVBQU93QyxPQUFTLFNBQVV2RixHQUN4QixNQUFPK0MsR0FBTytDLFlBQVlsQixNQUFNNUUsRUFBSWpFLE1BR2xDZ0gsRUFBT1gsUUFBUyxDQUVsQlksRUFBWWtHLGdCQUFnQnJHLEVBQU8sa0JBQ2pDc0csTUFBT3BHLEVBQ1BxRyxVQUFXLGdCQUNWMU4sS0FBSyxTQUFTZ0gsR0FDZkssRUFBT0wsTUFBUUEsSUFFakJLLEVBQU9pRixVQUFZLFdBQ2pCakYsRUFBT0wsTUFBTTJHLFFBRWYxTyxRQUFRQyxJQUFJbUksRUFBT2lGLFdBQ25CakYsRUFBT3VHLFdBQWEsV0FDbEJ2RyxFQUFPTCxNQUFNNkcsUUFHZnhHLEVBQU92RyxJQUFJLFdBQVksV0FDckJ1RyxFQUFPTCxNQUFNOUUsV0FHZm1GLEVBQU8wSCxtQkFBcUJwUixRQUFRcVIsS0FFcEMzSCxFQUFPOEUsaUJBQW1CLFNBQVNDLEVBQVdDLEdBQzVDTCxFQUFhTSxVQUFVRCxFQUFLaEYsRUFBT3JHLEtBQUtvTCxJQUFZcE0sS0FBSyxTQUFTdU0sR0FDaEVsRixFQUFPckcsS0FBS29MLEdBQW9CLElBQVBDLEVBQVc1QixFQUFFK0IsS0FBS0QsRUFBTyxJQUFLLFFBQVMsUUFBUyxlQUFnQixNQUFPLFdBQWFBLEVBQU9FLElBQUksU0FBVTlCLEdBQVEsTUFBT0YsR0FBRStCLEtBQUs3QixHQUFPLFFBQVMsUUFBUyxlQUFnQixNQUFPLGdCQUk1TXRELEVBQU9yRyxNQUNMaU8sUUFBUyxHQUFJNU0sTUFDYjZNLDBCQUNBQyxtQkFBb0IsS0FDcEJwQixRQUFTLEdBR1gsSUFBSUQsR0FBVTFQLEVBQUsrQixNQUNoQkgsS0FBSyxTQUFVQyxHQUNkLEdBQUl5SSxHQUFNLEdBQUlDLFVBQVMsdUNBQXVDekgsTUFBTWpCLEVBQUdRLGFBQWFTLE1BQU0sZUFBZW1KLGFBQWEsV0FBV0MsUUFBUWpELEVBQU9YLFFBRWhKLE9BREFXLEdBQU8rQyxZQUFjWCxFQUFlZixHQUM3QnpJLEdBR1hvSCxHQUFPK0gsaUJBQW1CLFdBQ3hCLEdBQUlsQixHQUFTbUIsRUFBWWpCLElBRXpCTixHQUNHOU4sS0FBSyxTQUFVQyxHQVlkLE1BWEFpTyxHQUFVak8sRUFFVm9QLEdBQ0VoQixVQUFXSCxFQUFRN04sSUFDbkJpUCxXQUFZakksRUFBT3JHLEtBQUttTyxtQkFDeEJGLFFBQVM1SCxFQUFPckcsS0FBS2lPLFFBQVFWLGNBQzdCUixRQUFTMUcsRUFBT3JHLEtBQUsrTSxRQUNyQi9ELFdBQVcsRUFDWHVGLGFBQWNsSSxFQUFPckcsS0FBS2tPLHdCQUdyQjdILEVBQU8rQyxZQUFZdUUsS0FBS1UsS0FFaENyUCxLQUFLLFNBQVUwSSxHQUNkLEdBQUlrRyxHQUFLbEcsRUFBSW1HLE1BQ1RqRyxFQUFRLEdBQUlELFVBQVMsc0NBQXNDdUYsRUFBUXpOLFlBQVksVUFDbkZtSSxHQUFNMUgsTUFBTWdOLEVBQVE3TixJQUFJLGdCQUFnQjRCLE1BQ3RDeUUsUUFBU1csRUFBT1gsUUFDaEJtSSxJQUFLRCxJQUVQaEcsRUFBTTFILE1BQU1tRyxFQUFPckcsS0FBS21PLG1CQUFtQjlPLElBQUksZ0JBQWdCNEIsTUFDN0R5RSxRQUFTVyxFQUFPWCxRQUNoQm1JLElBQUtELElBRUh2SCxFQUFPckcsS0FBS21PLG1CQUFtQmYsUUFDakMzRCxFQUFFQyxRQUFRckQsRUFBT3JHLEtBQUttTyxtQkFBbUJmLE9BQVEsU0FBVVUsR0FDekRWLEVBQU9uTSxLQUFLNk0sRUFBTUEsU0FHdEJyRSxFQUFFQyxRQUFRMkUsRUFBV0UsYUFBYyxTQUFVclAsR0FDdkNBLEVBQUtrTyxRQUNQM0QsRUFBRUMsUUFBUXhLLEVBQUtrTyxPQUFRLFNBQVVVLEdBQy9CVixFQUFPbk0sS0FBSzZNLEVBQU1BLFNBR3RCbEcsRUFBTTFILE1BQU1oQixFQUFLRyxJQUFJLGdCQUFnQjRCLE1BQ25DeUUsUUFBU1csRUFBT1gsUUFDaEJtSSxJQUFLRCxRQUlWNU8sS0FBSyxXQUNKcUgsRUFBT0wsTUFBTTZHLFNBRWQ3TixLQUFLLFdBQ0osTUFBT3VOLEdBQU8xQixLQUFLcUMsRUFBUTNOLE1BQVEsSUFBTTJOLEVBQVExTixNQUFRLGlDQUFpQzZHLEVBQU9YLFFBQVMwSCxVQUtoSHBRLEdBQU95RCxHQUFHLHdCQUtmeUUsV0FBVyxxQkFBQSxnQkFBQSxXQUFBLFNBQUEsZUFBQSxTQUFxQixTQUFTNEcsRUFBZTBDLEVBQVVuSSxFQUFReUUsRUFBYzlOLEdBRXZGcUosRUFBT29JLE9BQVN6UixFQUFPMFIsUUFBUUMsS0FDL0J0SSxFQUFPWCxRQUFVb0YsRUFBYXBGLFNBQVcsWUFFekNvRyxFQUFjQyxhQUFhL00sS0FBSyxTQUFVbUosR0FDeEM5QixFQUFPOEIsUUFBVUEsSUFHbkI5QixFQUFPdUksWUFBY0osRUFDckJuSSxFQUFPd0ksZUFDTEMsSUFDRUMsZ0JBQWlCLEVBQ2pCQyxhQUFjLEdBRWhCQyxJQUNFRixnQkFBaUIsRUFDakJDLGFBQWMsT0FNcEJyUyxRQUFRQyxPQUFPLGVBRWRzUyxRQUFRLFVBQUEsUUFBVSxTQUFVL0gsR0FDekIsT0FDSTBELEtBQU0sU0FBVUQsRUFBU3dDLEdBQ3JCLE1BQU9qRyxHQUFNRyxLQUFLLDhDQUNkc0QsUUFBU0EsRUFDVHdDLE9BQVFBLFNBTXZCOEIsUUFBUSxRQUFBLGtCQUFBLEtBQVEsU0FBVTFILEVBQWlCSixHQUN4QyxHQUFJbEksTUFDQWlRLEVBQU8sS0FDUEMsRUFBV2hJLEVBQUdpSSxPQUNsQixRQUNJbFEsSUFBSyxXQUNELE1BQU9pUSxHQUFTdEMsUUFDWDlOLEtBQUssV0FDRixNQUFPRSxNQUduQkgsSUFBSyxTQUFVRCxHQUNYLEdBQUk0SSxHQUFNLEdBQUlDLFVBQVMsNENBQThDN0ksRUFDckUsT0FBTzBJLEdBQWdCRSxHQUFLNEgsVUFDdkJ0USxLQUFLLFNBQVU4SSxHQUNacUgsRUFBT3JILEVBQUt5SCxPQUNaNVMsUUFBUUMsT0FBTyxlQUFlMkYsTUFBTSxhQUFjNE0sR0FDbERySCxFQUFLMEgsVUFDTCxJQUFJQyxHQUFPLEdBQUk5SCxVQUFTLHNDQUFzQ3dILEVBQUssVUFBWXJRLEVBQy9FLE9BQU8wSSxHQUFnQmlJLEdBQU1ILFlBRWhDdFEsS0FBSyxTQUFVMEksR0FHWixNQUZBeEksR0FBT3dJLEVBQ1AwSCxFQUFTakssUUFBUWpHLEdBQ1ZBLEtBR25Cd1EsUUFBUyxXQUNMLE1BQU9QLFFBS2xCRCxRQUFRLFFBQUEsZ0JBQVEsU0FBVVMsR0FDdkIsR0FBSWpJLEdBQU0sR0FBSUMsVUFBUyxxQ0FDdkIsT0FBT2dJLEdBQWNqSSxNQUd4QndILFFBQVEsS0FBTSxXQUNYLEdBQUlqUSxLQUNKLFFBQ0l5USxRQUFTLFdBQWMsTUFBT3pRLEdBQUdRLGFBQ2pDTixJQUFLLFdBQWMsTUFBT0YsSUFDMUJGLElBQUssU0FBVTZRLEdBQ1gzUSxFQUFLMlEsRUFDTDNRLEVBQUdNLE1BQVFxUSxFQUFJclEsT0FBU3FRLEVBQUlDLGNBQWNDLE1BQU0sTUFBTSxHQUN0RDdRLEVBQUdPLE1BQVFvUSxFQUFJcFEsT0FBU29RLEVBQUlHLFFBQzVCOVEsRUFBR1UsTUFBUWlRLEVBQUlqUSxVQUsxQnVQLFFBQVEsaUJBQUEsaUJBQUEsT0FBaUIsU0FBU3pHLEVBQWdCckwsR0FFakQsT0FDRTJPLFdBQWEsV0FDVCxNQUFPM08sR0FBSytCLE1BQ1BILEtBQUssU0FBVUUsR0FDWixNQUFPQSxHQUFLTyxjQUVmVCxLQUFLLFNBQVVtUSxHQUNaLENBQUEsR0FBSXpILEdBQU0sR0FBSUMsVUFBUyxzQ0FBc0N3SCxFQUFLLFNBQ3REMUcsR0FBZWYsR0FDM0IsTUFBT2UsR0FBZWYsR0FBSzRILGlCQU0xQ0osUUFBUSxnQkFBaUIsZ0JBQWlCLEtBQU0sU0FBVSxjQUFlLGFBQWMsU0FBU3BELEVBQWUxRSxFQUFJakIsRUFBUUcsRUFBYXZKLEdBNkR2SSxRQUFTaVQsR0FBT0MsR0FFVkMsWUFBWUYsT0FBT0csUUFEbkJGLEVBQUtHLE9BQ3dCQyxFQUFZQyxPQUFPLFNBQVNDLEdBQUssR0FBSTVCLEdBQU80QixFQUFFaFIsTUFBUSxJQUFNZ1IsRUFBRS9RLEtBQU8sT0FBT21QLEdBQUs2QixjQUFjelAsUUFBUW1QLFlBQVlGLE9BQU9TLEtBQUtELGdCQUFrQixJQUVqSkgsRUEvRG5DSCxZQUFjblQsRUFBVzJULE1BRXpCLElBQ0lDLEdBREFDLEVBQU8sVUFFUEMsRUFBYyxJQUNsQlgsYUFBWUYsVUFDWkUsWUFBWVksYUFDWlosWUFBWUYsT0FBT1MsS0FBTyxHQUMxQlAsWUFBWUYsT0FBT0csV0FDbkJELFlBQVlZLFVBQVVsSixRQUV0QixJQUFJMEQsR0FBWSxTQUFVRCxFQUFLMEYsR0FDN0IsR0FBSTNCLEdBQVdoSSxFQUFHaUksT0F3QmxCLE9BdEJJMEIsS0FDRmIsWUFBWVksVUFBVWxKLE1BQWdCLElBQVJ5RCxHQUFhMEYsR0FBWUEsR0FHekRGLEVBQWN4RixHQUFPMkYsT0FBT0MsVUFDNUIzSyxFQUFZa0csZ0JBQWdCckcsRUFBT3lLLElBQ2pDbEUsVUFBVyxjQUNYRCxNQUFPeUQsY0FFUmxSLEtBQUssU0FBU2dILEdBQ2JrSyxZQUFZRixPQUFPUyxLQUFPLEdBQzFCRSxFQUFZM0ssRUFFWmtLLFlBQVl0RCxXQUFhLFdBQ3ZCd0MsRUFBU2pLLFFBQVErSyxZQUFZWSxVQUFVbEosTUFBTXNKLFNBQzdDaEIsWUFBWVksVUFBVWxKLE1BQU14RyxPQUFPLEVBQUU4TyxZQUFZWSxVQUFVbEosTUFBTXdJLFFBQ2pFTyxFQUFVelAsVUFHWnlQLEVBQVVoRSxTQUdMeUMsRUFBU3RDLFFBR2xCb0QsYUFBWVksVUFBVUssT0FBUyxTQUFTQyxHQUVuQ2xCLFlBQVlZLFVBQVVsSixNQUFNaEgsU0FBU3dRLEdBQ3RDbEIsWUFBWVksVUFBVWxKLE1BQU0xRyxPQUFPa1EsR0FHNUJsQixZQUFZWSxVQUFVbEosTUFBTXdJLFFBQVUsR0FBcUIsSUFBaEJTLEdBQ2xEWCxZQUFZWSxVQUFVbEosTUFBTXhHLE9BQU8sRUFBRSxHQUNyQzhPLFlBQVlZLFVBQVVsSixNQUFNNUcsV0FBV29RLEdBQ3ZDbEIsWUFBWXRELGNBR0xzRCxZQUFZWSxVQUFVbEosTUFBTXdJLE9BQVNTLEdBQzVDWCxZQUFZWSxVQUFVbEosTUFBTTVHLFdBQVdvUSxJQUszQ2xCLFlBQVltQixPQUFRLGNBQWVyQixFQVVuQyxJQUFJSyxLQU1KLE9BTEF2RSxHQUFjQyxhQUNYL00sS0FBSyxTQUFVbUosR0FDWitILFlBQVlGLE9BQU9HLFFBQVVFLEVBQWNsSSxLQUkvQ21ELFVBQVdBLE1BSWQ0RCxRQUFRLG1CQUFvQixTQUFVLFdBQ3JDLE1BQU8saUJBR1JBLFFBQVEsY0FBZSxXQUN0QixHQUFJbEQsSUFDRixxQkFDQSxvQkFDQSxxQkFDQSxnQkFDQSwyQkFDQSxxQkFDQSxpQ0FDQSxrQkFDQSxnQkFDQSx5QkFDQSxxQ0FDQSxxQ0FDQSx3QkFDQSx1Q0FDQSwyQkFDQSx3Q0FDQSxrQ0FDQSxrQ0FDQSxzQ0FDQSw2QkFDQSxvQ0FDQSxpQ0FDQSx3QkFDQSw2QkFDQSxpQ0FDQSw4QkFDQSxvQkFDQSxtQ0FDQSxnQ0FDQSx3QkFDQSwrQkFDQSxpQ0FDQSw0QkFDQSxzQkFDQSxnQ0FDQSxtQ0FDQSwwQ0FDQSw4QkFDQSxtQkFDQSx5QkFDQSw4QkFDQSxpREFDQSxvQ0FDQSw4QkFDQSw0QkFDQSxxQ0FDQSx1QkFDQSxtQ0FDQSxrQkFDQSxxQ0FDQSxpQ0FDQSwyQkFDQSxrQ0FDQSxtQ0FDQSxnQ0FDQSxrQ0FDQSxvQ0FDQSxnQ0FDQSw2QkFDQSw4QkFDQSxnQ0FDQSxvQ0FDQSx1QkFDQSxrQ0FDQSx5Q0FDQSw2QkFDQSx1QkFDQSwrQkFDQSw2QkFDQSxxQkFDQSx1QkFDQSxtQ0FDQSx1Q0FDQSxxQkFDQSxxQkFDQSx3Q0FDQSxvQkFDQSwwQ0FDQSx5Q0FDQSxtQ0FDQSx3QkFDQSxxQkFDQSxpQ0FDQSx1QkFDQSx3QkFDQSxxQkFDQSxjQUNBLHFDQUNBLHVCQUNBLHNDQUNBLHlDQUNBLDhCQUNBLHlCQUNBLDJCQUNBLDJCQUNBLG9DQUNBLHFCQUNBLHlCQUNBLCtCQUNBLDBCQUNBLG1CQUNBLDBCQUNBLGlDQUNBLDBCQUNBLGdDQUNBLHNCQUNBLGlDQUNBLDBCQUNBLG1DQUNBLGdDQUNBLGVBQ0EsOEJBQ0Esb0JBQ0EsZ0JBQ0Esd0JBQ0Esa0JBQ0Esa0JBQ0EsNEJBQ0EsOEJBQ0EsdUJBQ0EsZ0NBQ0EsMEJBQ0Esb0NBQ0Esb0JBQ0EsNEJBQ0Esc0NBQ0EsOEJBQ0EscUJBQ0EsOEJBQ0EsaUJBQ0Esd0JBQ0EsNEJBQ0EsbUJBQ0Esc0JBQ0Esb0JBQ0EsZ0NBQ0EsWUFDQSwwQkFDQSw4QkFDQSx5QkFDQSxrQ0FDQSx1QkFDQSw0QkFDQSxnQkFDQSxzQ0FDQSxpQ0FDQSxvQkFDQSxjQUNBLG9DQUNBLGtDQUNBLHFCQUNBLHFDQUNBLGdDQUNBLHdDQUNBLCtCQUNBLHlCQUNBLDBDQUNBLG1DQUNBLHNCQUNBLDhCQUNBLHNCQUNBLGdDQUNBLHFDQUNBLHFDQUNBLCtCQUNBLGlCQUNBLG9DQUNBLHNCQUNBLCtCQUNBLGdDQUNBLG9CQUNBLDBCQUNBLG9DQUNBLG9DQUNBLDRCQUNBLHdDQUNBLHdDQUNBLGtCQUNBLGlDQUNBLGtDQUNBLHFDQUNBLHFDQUNBLGtDQUNBLDRCQUNBLDRCQUNBLGlDQUNBLG1DQUNBLDRCQUNBLGlDQUNBLDZCQUNBLGdDQUNBLG1DQUNBLHFCQUNBLGlDQUNBLG9DQUNBLDhCQUNBLHFDQUNBLG1CQUNBLGVBQ0EsaUNBQ0EsbUJBQ0EsNEJBQ0EsK0JBQ0EsZUFDQSw2QkFDQSxtQkFDQSxrQ0FDQSw2QkFDQSwrQkFDQSxxQkFDQSx1Q0FDQSxrQ0FDQSxpQkFDQSxxQ0FDQSx1QkFDQSxnQkFDQSxvQkFDQSw2QkFDQSxpQ0FDQSw0QkFDQSxvQ0FDQSw2QkFDQSx3QkFDQSwyQkFDQSw4QkFDQSw4QkFDQSxxQ0FDQSxrQ0FDQSw4QkFDQSxtQkFDQSxrQ0FDQSw4QkFDQSxvQkFDQSw2QkFDQSxzQ0FDQSxnQ0FDQSxtQkFDQSxzQ0FDQSxtQkFDQSxxQ0FDQSx1QkFDQSwyQ0FDQSxzQkFDQSx5QkFDQSxpQ0FDQSw2QkFDQSwyQkFDQSxrQ0FDQSxrQkFDQSxzQkFDQSx1QkFDQSxpQ0FDQSxxQ0FDQSxvQkFDQSxXQUNBLGlDQUNBLHFDQUNBLCtCQUNBLGlCQUNBLDRCQUNBLDRCQUNBLDZCQUNBLHNCQUNBLHdCQUNBLDBCQUNBLHdCQUNBLHlCQUNBLG9DQUNBLG9DQUNBLGtDQUNBLG1DQUNBLHlCQUNBLGlDQUNBLGVBQ0EsbUNBQ0EsaUNBQ0Esa0NBQ0EsZ0NBQ0EsZ0JBQ0Esb0NBQ0EsaUNBQ0Esa0NBQ0Esc0NBQ0EsNEJBQ0EsZ0NBQ0EsOEJBQ0EscUNBQ0Esa0NBQ0EsNkJBQ0Esb0NBQ0EsbUJBQ0EsY0FDQSx1Q0FDQSxlQUNBLGdDQUNBLDRCQUNBLHdDQUNBLGdDQUNBLGtDQUNBLG1DQUNBLHNCQUNBLHlCQUNBLHdCQUNBLGdDQUNBLG1CQUNBLG1CQUNBLHdCQUNBLG1CQUNBLDZCQUNBLDBDQUNBLG1DQUNBLGdDQUNBLHNCQUNBLG9DQUNBLDBDQUNBLGtDQUNBLDRCQUNBLHVCQUNBLDRCQUNBLG1DQUNBLG1DQUNBLGlDQUNBLHNDQUNBLDhCQUNBLG1EQUNBLHNDQUNBLDRDQUNBLHdCQUNBLDBDQUNBLDZDQUNBLHVDQUNBLDJDQUNBLHlDQUNBLHVDQUNBLGtEQUNBLG9DQUNBLCtCQUNBLHdCQUNBLDJCQUNBLDJCQUNBLG9CQUdGLFFBQ0VDLFFBQVMsV0FDUCxNQUFPRCxJQUVUc0YsUUFBUyxTQUFTMUQsR0FDaEIsTUFBR0EsR0FBSyxLQUFZLEVBQUxBLEVBQ04sd0JBQTBCQSxFQUFLLElBQ2pDNUIsRUFBTTRCLEVBQUcsT0FLckJzQixRQUFRLGlCQUFrQixVQUFXLFNBQVNxQyxHQUM3QyxPQUNFeFMsSUFBSyxTQUFTOE8sRUFBS3RMLEdBQ2pCZ1AsRUFBUUMsYUFBYTNELEdBQU90TCxHQUU5QnBELElBQUssU0FBUzBPLEVBQUs0RCxHQUNqQixNQUFPRixHQUFRQyxhQUFhM0QsSUFBUTRELEdBRXRDQyxVQUFXLFNBQVM3RCxFQUFLdEwsR0FDdkJnUCxFQUFRQyxhQUFhM0QsR0FBTzhELEtBQUtDLFVBQVVyUCxJQUU3Q3NQLFVBQVcsU0FBU2hFLEdBQ2xCLE1BQU84RCxNQUFLRyxNQUFNUCxFQUFRQyxhQUFhM0QsSUFBUSxXQU1yRGxSLFFBQVFDLE9BQU8sZUFFZDBULE9BQU8sV0FBWSxXQUNsQixNQUFPLFVBQVV5QixHQUNmLE1BQU9qTSxVQUFTQyxTQUFTZ00sR0FBT0MsSUFBSSxHQUFHQyxPQUFPLFlBSWpEM0IsT0FBTyxXQUFZLFdBQ2xCLE1BQU8sVUFBVXlCLEVBQU9HLEdBQ3RCLE1BQUlILElBQVNBLEVBQU14UyxPQUFTd1MsRUFBTXZTLE1BQ3pCdVMsRUFBTXhTLE1BQVEsSUFBTXdTLEVBQU12UyxNQUU1QjBTLEtBS1h2VixRQUFRQyxPQUFPLGVBRWR1VixVQUFVLGFBQWMsV0FDdkIsTUFBTyxVQUFTMUYsRUFBTzVMLEdBQ3JCK0ssU0FBUy9LLE1BSVpzUixVQUFVLG9CQUFxQixXQUM5QixNQUFPLFVBQVMxRixFQUFPNUwsR0FDckIsR0FBSTRRLEdBQWU1USxFQUFRLEdBQUd1UixhQUFhLHFCQUMzQ3ZSLEdBQVEsR0FBR3FCLGtCQUFtQnVQLE1BT2pDVSxVQUFVLGlCQUFrQixTQUFVLGFBQ3JDLFNBQVNFLEVBQVF0VixHQUNmLE9BRUV1VixTQUFVLElBQ1ZDLFNBQVUsSUFDVkMsUUFBUyxTQUFTQyxFQUFVcFAsR0FDMUIsR0FBSXFQLEdBQUtMLEVBQU9oUCxFQUFLc1AsY0FDckIsUUFDRUMsSUFBSyxTQUFjbkcsRUFBTzVMLEdBQ3hCLEdBQUlnUyxHQUFZLE9BQ2hCaFMsR0FBUTBJLEdBQUdzSixFQUFXLFNBQVM5UyxHQUM3QixHQUFJK1MsR0FBVyxXQUNiLE1BQUlKLEdBQUdqRyxHQUFRc0csT0FBUWhULEtBRXJCQSxFQUFNaVQsMkJBRU5qVCxFQUFNa1Qsa0JBQ0MsR0FMVCxPQVFFbFcsR0FBV21XLFFBQ2J6RyxFQUFNMEcsV0FBV0wsR0FFakJyRyxFQUFNMkcsT0FBT04sTUFJbkJ4TCxLQUFNLG1CQVFoQjNLLFFBQVFDLE9BQU8sZUFFZHlXLFNBQVMsVUFDUkMsZ0JBQWlCLGdDQUNqQkMsZ0JBQWlCLGtDQUNqQkMsU0FBVSw2QkFDVnJMLFFBQVMsNEJBQ1Q4RSxpQkFBa0Isb0NBQ2xCbUIsaUJBQWtCLHNDQUduQmlGLFNBQVMsV0FDUkksT0FDRUMsRUFBTSxhQUNOQyxFQUFNLGVBQ05DLEVBQU0sVUFDTkMsRUFBTSxnQkFDTkMsRUFBTSxtQkFFUkMsTUFDRTNILEVBQU0sWUFDTkMsRUFBTSxNQUNOQyxFQUFNLGtCQUlUK0csU0FBUyxZQUNSSSxPQUNFQyxFQUFNLG1CQUNOQyxFQUFNLGVBQ05DLEVBQU0sWUFDTkMsRUFBTSxVQUNOQyxFQUFNLGlCQUNOMUgsRUFBTSxZQUNOQyxFQUFNLGNBQ05DLEVBQU0sZ0JBQ04wSCxFQUFNLFVBQ05DLEVBQU0sYUFDTkMsR0FBTyxZQUVUSCxNQUNFakYsR0FBTyxZQUNQRyxHQUFPLGVBQ1BrRixHQUFPLFlBQ1BDLEdBQU8sYUFDUEMsR0FBTyxNQUNQQyxHQUFPLGNBQ1BDLEdBQU8sU0FDUEMsR0FBTyxpQkFDUEMsR0FBTyxZQUNQQyxHQUFPLGNBQ1BDLEdBQU8sZ0JBQ1BDLEdBQU8iLCJmaWxlIjoiYXBwLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIElvbmljIFN0YXJ0ZXIgQXBwXG4vLyBhbmd1bGFyLm1vZHVsZSBpcyBhIGdsb2JhbCBwbGFjZSBmb3IgY3JlYXRpbmcsIHJlZ2lzdGVyaW5nIGFuZCByZXRyaWV2aW5nIEFuZ3VsYXIgbW9kdWxlc1xuLy8gJ3N0YXJ0ZXInIGlzIHRoZSBuYW1lIG9mIHRoaXMgYW5ndWxhciBtb2R1bGUgZXhhbXBsZSAoYWxzbyBzZXQgaW4gYSA8Ym9keT4gYXR0cmlidXRlIGluIGluZGV4Lmh0bWwpXG4vLyB0aGUgMm5kIHBhcmFtZXRlciBpcyBhbiBhcnJheSBvZiAncmVxdWlyZXMnXG5hbmd1bGFyLm1vZHVsZSgnY291bmNpbHNBcHAnLCBbXG4gICdmaXJlYmFzZScsXG4gICdpb25pYycsIFxuICAnaW9uaWMuc2VydmljZS5jb3JlJywnaW9uaWMuc2VydmljZS5kZXBsb3knLFxuICAvLyAnaW9uaWMuc2VydmljZS5hbmFseXRpY3MnLFxuICAnYW5ndWxhck1vbWVudCcsXG4gICdpb25pYy5zZXJ2aWNlLnB1c2gnLFxuICAnbmdDb3Jkb3ZhJyxcbiAgJ2lvbmljLWRhdGVwaWNrZXInXG5dKVxuXG4ucnVuKGZ1bmN0aW9uKCRpb25pY1BsYXRmb3JtLCAkcm9vdFNjb3BlLCAkc3RhdGUsICRjb3Jkb3ZhU3RhdHVzYmFyLCAkdGltZW91dCwgQXV0aCwgVXNlciwgJGlvbmljVXNlciwgJGlvbmljUHVzaCwgJGlvbmljRGVwbG95KSB7XG4gICRpb25pY1BsYXRmb3JtLnJlYWR5KGZ1bmN0aW9uKCkge1xuICAgIHZhciBkZXZpY2VJbmZvcm1hdGlvbiA9IGlvbmljLlBsYXRmb3JtLmRldmljZSgpO1xuICAgIC8vICRpb25pY0FuYWx5dGljcy5yZWdpc3RlcigpO1xuICAgIC8vIEhpZGUgdGhlIGFjY2Vzc29yeSBiYXIgYnkgZGVmYXVsdCAocmVtb3ZlIHRoaXMgdG8gc2hvdyB0aGUgYWNjZXNzb3J5IGJhciBhYm92ZSB0aGUga2V5Ym9hcmRcbiAgICAvLyBmb3IgZm9ybSBpbnB1dHMpXG4gICAgaWYod2luZG93LmNvcmRvdmEgJiYgd2luZG93LmNvcmRvdmEucGx1Z2lucy5LZXlib2FyZCkge1xuICAgICAgY29yZG92YS5wbHVnaW5zLktleWJvYXJkLmhpZGVLZXlib2FyZEFjY2Vzc29yeUJhcih0cnVlKTtcbiAgICB9XG5cbiAgICAvLyAkaW9uaWNEZXBsb3kuY2hlY2soKS50aGVuKGZ1bmN0aW9uKGhhc1VwZGF0ZSkge1xuICAgIC8vICAgY29uc29sZS5sb2coJ0lvbmljIERlcGxveTogVXBkYXRlIGF2YWlsYWJsZTogJyArIGhhc1VwZGF0ZSk7XG4gICAgLy8gICBpZiAoaGFzVXBkYXRlKSB7XG4gICAgLy8gICAgICRpb25pY0RlcGxveS51cGRhdGUoKTtcbiAgICAvLyAgIH1cbiAgICAvLyB9KTtcblxuICAgIC8vIGlvbmljLlBsYXRmb3JtLmZ1bGxTY3JlZW4odHJ1ZSwgZmFsc2UpO1xuXG4gICAgQXV0aC4kb25BdXRoKGZ1bmN0aW9uKGF1dGhEYXRhKSB7XG4gICAgICBpZiAoYXV0aERhdGEpIHtcbiAgICAgICAgY29uc29sZS5sb2coXCJMb2dnZWQgaW4gYXM6XCIsIGF1dGhEYXRhLnVpZCk7XG4gICAgICAgIFVzZXIuc2V0KGF1dGhEYXRhLnVpZClcbiAgICAgICAgICAudGhlbihmdW5jdGlvbiAobWUpIHtcblxuICAgICAgICAgICAgdmFyIHVzZXIgPSAkaW9uaWNVc2VyLmdldCgpO1xuICAgICAgICAgICAgaWYoIXVzZXIudXNlcl9pZCkge1xuICAgICAgICAgICAgICB1c2VyLnVzZXJfaWQgPSBtZS4kaWRcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIC8vIEFkZCBzb21lIG1ldGFkYXRhIHRvIHlvdXIgdXNlciBvYmplY3QuXG4gICAgICAgICAgICBhbmd1bGFyLmV4dGVuZCh1c2VyLCB7XG4gICAgICAgICAgICAgIGZuYW1lOiBtZS5mbmFtZSxcbiAgICAgICAgICAgICAgbG5hbWU6IG1lLmxuYW1lLFxuICAgICAgICAgICAgICBob21lVW5pdE5icjogbWUuaG9tZVVuaXROYnIsXG4gICAgICAgICAgICAgIGluZGl2aWR1YWxJZDogbWUuaW5kaXZpZHVhbElkLFxuICAgICAgICAgICAgICBlbWFpbDogbWUuZW1haWxcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAvLyBJZGVudGlmeSB5b3VyIHVzZXIgd2l0aCB0aGUgSW9uaWMgVXNlciBTZXJ2aWNlXG4gICAgICAgICAgICAkaW9uaWNVc2VyXG4gICAgICAgICAgICAgIC5pZGVudGlmeSh1c2VyKVxuICAgICAgICAgICAgICAudGhlbihmdW5jdGlvbigpe1xuICAgICAgICAgICAgICAgIGlmICh3aW5kb3cucGx1Z2lucyAmJiB3aW5kb3cucGx1Z2lucy5wdXNoTm90aWZpY2F0aW9uKSB7XG4gICAgICAgICAgICAgICAgICByZWdpc3RlckZvck5vdGlmaWNhdGlvbnMoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uc29sZS5sb2coXCJMb2dnZWQgb3V0XCIpO1xuICAgICAgfVxuICAgIH0pO1xuICB9KTtcblxuICBmdW5jdGlvbiByZWdpc3RlckZvck5vdGlmaWNhdGlvbnMoKSB7XG4gICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAkaW9uaWNQdXNoLnJlZ2lzdGVyKHtcbiAgICAgICAgY2FuU2hvd0FsZXJ0OiB0cnVlLCAvL0NhbiBwdXNoZXMgc2hvdyBhbiBhbGVydCBvbiB5b3VyIHNjcmVlbj9cbiAgICAgICAgY2FuU2V0QmFkZ2U6IHRydWUsIC8vQ2FuIHB1c2hlcyB1cGRhdGUgYXBwIGljb24gYmFkZ2VzP1xuICAgICAgICBjYW5QbGF5U291bmQ6IHRydWUsIC8vQ2FuIG5vdGlmaWNhdGlvbnMgcGxheSBhIHNvdW5kP1xuICAgICAgICBjYW5SdW5BY3Rpb25zT25XYWtlOiB0cnVlLCAvL0NhbiBydW4gYWN0aW9ucyBvdXRzaWRlIHRoZSBhcHAsXG4gICAgICAgIG9uTm90aWZpY2F0aW9uOiBmdW5jdGlvbihub3RpZmljYXRpb24pIHtcbiAgICAgICAgICAvLyBIYW5kbGUgbmV3IHB1c2ggbm90aWZpY2F0aW9ucyBoZXJlXG4gICAgICAgICAgY29uc29sZS5sb2cobm90aWZpY2F0aW9uKTtcbiAgICAgICAgICAvLyBpZiAobm90aWZpY2F0aW9uLmFsZXJ0KSB7XG4gICAgICAgICAgLy8gICBpZihuYXZpZ2F0b3Iubm90aWZpY2F0aW9uKSB7XG4gICAgICAgICAgLy8gICAgIG5hdmlnYXRvci5ub3RpZmljYXRpb24uYWxlcnQobm90aWZpY2F0aW9uLmFsZXJ0KTtcbiAgICAgICAgICAvLyAgIH0gZWxzZSB7XG4gICAgICAgICAgLy8gICAgIGFsZXJ0KG5vdGlmaWNhdGlvbi5hbGVydCk7XG4gICAgICAgICAgLy8gICB9XG4gICAgICAgICAgLy8gfVxuXG4gICAgICAgICAgLy8gaWYgKG5vdGlmaWNhdGlvbi5zb3VuZCkge1xuICAgICAgICAgIC8vICAgdmFyIHNuZCA9IG5ldyBNZWRpYShldmVudC5zb3VuZCk7XG4gICAgICAgICAgLy8gICBzbmQucGxheSgpO1xuICAgICAgICAgIC8vIH1cblxuICAgICAgICAgIC8vIGlmIChub3RpZmljYXRpb24uYmFkZ2UpIHtcbiAgICAgICAgICAvLyAgICRjb3Jkb3ZhUHVzaC5zZXRCYWRnZU51bWJlcihub3RpZmljYXRpb24uYmFkZ2UpLnRoZW4oZnVuY3Rpb24ocmVzdWx0KSB7XG4gICAgICAgICAgLy8gICAgIC8vIFN1Y2Nlc3MhXG4gICAgICAgICAgLy8gICAgIGNvbnNvbGUubG9nKCdiYWRnZSBzdWNjZXNzIScpO1xuICAgICAgICAgIC8vICAgfSwgZnVuY3Rpb24oZXJyKSB7XG4gICAgICAgICAgLy8gICAgIC8vIEFuIGVycm9yIG9jY3VycmVkLiBTaG93IGEgbWVzc2FnZSB0byB0aGUgdXNlclxuICAgICAgICAgIC8vICAgfSk7XG4gICAgICAgICAgLy8gfVxuICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9LCAxMDAwKTtcbiAgfVxuXG4gIC8vIEhhbmRsZXMgaW5jb21pbmcgZGV2aWNlIHRva2Vuc1xuICAkcm9vdFNjb3BlLiRvbignJGNvcmRvdmFQdXNoOnRva2VuUmVjZWl2ZWQnLCBmdW5jdGlvbihldmVudCwgZGF0YSkge1xuICAgIFVzZXIuZ2V0KClcbiAgICAgIC50aGVuKGZ1bmN0aW9uIChtZSkge1xuICAgICAgICByZXR1cm4gbWUuJHJlZigpLmNoaWxkKCd0b2tlbnMnKS5jaGlsZChpb25pYy5QbGF0Zm9ybS5kZXZpY2UoKS51dWlkKS5zZXQoZGF0YSk7XG4gICAgICB9KTtcbiAgfSk7XG5cblxuICAkcm9vdFNjb3BlLiRvbihcIiRzdGF0ZUNoYW5nZUVycm9yXCIsIGZ1bmN0aW9uKGV2ZW50LCBuZXh0LCBuZXh0UCwgcHJldmlvdXMsIHByZXZpb3VzUCwgZXJyb3IpIHtcbiAgICBpZiAoZXJyb3IgPT09IFwiQVVUSF9SRVFVSVJFRFwiKSB7XG4gICAgICAkc3RhdGUuZ28oXCJzaW1wbGUud2VsY29tZVwiKTtcbiAgICB9XG4gIH0pO1xufSk7XG5cbi8vIFV0aWxpdGllcyBmb3IgQ291bmNpbHNBcHBcbjtcbi8vXG5BcnJheS5wcm90b3R5cGUuY29udGFpbnMgPSBmdW5jdGlvbihlbGVtZW50KSB7XG4gIHJldHVybiB0aGlzLmluZGV4T2YoZWxlbWVudCkgIT0gLTFcbn1cbkFycmF5LnByb3RvdHlwZS5wdXNoVW5pcXVlID0gZnVuY3Rpb24oZWxlbWVudCkge1xuICBpZiggISB0aGlzLmNvbnRhaW5zKGVsZW1lbnQpIClcbiAgICB0aGlzLnB1c2goZWxlbWVudCk7XG59XG5BcnJheS5wcm90b3R5cGUucmVtb3ZlID0gZnVuY3Rpb24oZWxlbWVudCkge1xuICBpZih0aGlzLmNvbnRhaW5zKGVsZW1lbnQpKSB7XG4gICAgdmFyIHNwbGljZVN0YXJ0ID0gdGhpcy5pbmRleE9mKGVsZW1lbnQpO1xuICAgIHRoaXMuc3BsaWNlKHNwbGljZVN0YXJ0LCAxKTtcbiAgfVxufVxuXG4vLyBBZGQgb3Igc3VidHJhY3QgKHdpdGggLSBudW1iZXJzKSB0aGUgc3BlY2lmaWVkIG51bWJlciBvZiBkYXlzXG4vLyBmcm9tIHRoZSBjdXJyZW50IGRhdGUgb2JqZWN0XG5EYXRlLnByb3RvdHlwZS5hZGREYXlzID0gZnVuY3Rpb24oZGF5cykge1xuICAvL0dldCBjdXJyZW50IGRhdGUgZnJvbSBkYXRlIG9iamVjdFxuICB2YXIgbmV3RGF0ZSA9IG5ldyBEYXRlKHRoaXMudmFsdWVPZigpKTtcbiAgbmV3RGF0ZS5zZXREYXRlKG5ld0RhdGUuZ2V0RGF0ZSgpICsgZGF5cyk7XG4gIHJldHVybiBuZXdEYXRlO1xufTtcblxuLy8gR2V0IHRoZSBGdWxsIGVuZ2xpc2ggbW9udGggc3RyaW5nIG9mIHRoZSBjdXJyZW50IGRhdGUgb2JqZWN0XG5EYXRlLnByb3RvdHlwZS5nZXRNb250aFN0cmluZyA9IGZ1bmN0aW9uKCkge1xuICB2YXIgZW5nbGlzaE1vbnRocyA9IFtcbiAgICBcIkphbnVhcnlcIixcbiAgICBcIkZlYnJ1YXJ5XCIsXG4gICAgXCJNYXJjaFwiLFxuICAgIFwiQXByaWxcIixcbiAgICBcIk1heVwiLFxuICAgIFwiSnVuZVwiLFxuICAgIFwiSnVseVwiLFxuICAgIFwiQXVndXN0XCIsXG4gICAgXCJTZXB0ZW1iZXJcIixcbiAgICBcIk9jdG9iZXJcIixcbiAgICBcIk5vdmVtYmVyXCIsXG4gICAgXCJEZWNlbWJlclwiXG4gIF07XG4gIHJldHVybiBlbmdsaXNoTW9udGhzWyB0aGlzLmdldE1vbnRoKCkgXVxufTtcblxuLy8gR2V0IHN1ZmZpeCBmb3IgdGhlIGRhdGUgb2YgdGhlIGN1cnJlbnQgZGF0ZSBvYmplY3RcbkRhdGUucHJvdG90eXBlLmdldE9yZGluYWxTdWZmaXggPSBmdW5jdGlvbigpIHtcbiAgc3dpdGNoKCB0aGlzLmdldERhdGUoKSApIHtcbiAgICBjYXNlIDE6XG4gICAgY2FzZSAyMTpcbiAgICBjYXNlIDMxOlxuICAgICAgc3VmZml4ID0gXCJzdFwiO1xuICAgICAgYnJlYWs7XG5cbiAgICBjYXNlIDI6XG4gICAgY2FzZSAyMjpcbiAgICAgIHN1ZmZpeCA9IFwibmRcIjtcbiAgICAgIGJyZWFrO1xuXG4gICAgY2FzZSAzOlxuICAgIGNhc2UgMjM6XG4gICAgICBzdWZmaXggPSBcInJkXCI7XG4gICAgICBicmVhaztcblxuICAgIGRlZmF1bHQ6XG4gICAgICBzdWZmaXggPSBcInRoXCI7XG4gIH1cbiAgcmV0dXJuIHN1ZmZpeDtcbn07XG5cbihmdW5jdGlvbigpIHtcbiAgSFRNTFNlbGVjdEVsZW1lbnQucHJvdG90eXBlLmN1c3RvbVBsYWNlaG9sZGVyID0gZnVuY3Rpb24ocGxhY2Vob2xkZXJUZXh0KSB7XG4gICAgdmFyIGRlZmF1bHRPcHRpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIpO1xuICAgIGRlZmF1bHRPcHRpb24udmFsdWUgPSBcIlwiO1xuICAgIGRlZmF1bHRPcHRpb24uaW5uZXJUZXh0ID0gcGxhY2Vob2xkZXJUZXh0O1xuICAgIGRlZmF1bHRPcHRpb24uc2V0QXR0cmlidXRlKCdkaXNhYmxlZCcsdHJ1ZSk7XG4gICAgZGVmYXVsdE9wdGlvbi5zZXRBdHRyaWJ1dGUoJ3NlbGVjdGVkJyx0cnVlKTtcbiAgICBkZWZhdWx0T3B0aW9uLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcblxuICAgIHZhciBmaXJzdCA9IHRoaXMuY2hpbGRyZW5bMF1cbiAgICBjb25zb2xlLmxvZyhmaXJzdClcbiAgICBjb25zb2xlLmxvZyh0aGlzLmNoaWxkcmVuKVxuICAgIHRoaXMuaW5zZXJ0QmVmb3JlKGRlZmF1bHRPcHRpb24sIGZpcnN0KTtcbiAgfVxufSkoKTtcblxuLy8gU2V0IHRleHRhcmVhcyB0byBzaHJpbmsvZXhwYW5kIHdpdGggYW1vdW50IG9mIGNvbnRlbnRcbihmdW5jdGlvbigpIHtcbiAgSFRNTFRleHRBcmVhRWxlbWVudC5wcm90b3R5cGUuYXV0b1Jlc2l6ZSA9IGZ1bmN0aW9uKCkge1xuICAgIC8vIENyZWF0ZSBhbiBvYmplY3QgdGhhdCB3aWxsIGJlIGZvciBzaXplIHJlZmVyZW5jZVxuICAgIHZhciBjbG9uZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG5cbiAgICB2YXIgY2xvbmFibGVfYXR0cmlidXRlcyA9IFtcbiAgICAgIFwicGFkZGluZ1wiLFxuICAgICAgXCJwYWRkaW5nLXRvcFwiLFxuICAgICAgXCJwYWRkaW5nLWJvdHRvbVwiLFxuICAgICAgXCJwYWRkaW5nLWxlZnRcIixcbiAgICAgIFwicGFkZGluZy1yaWdodFwiLFxuICAgICAgXCJmb250LWZhbWlseVwiLFxuICAgICAgXCJmb250LXNpemVcIixcbiAgICAgIFwibGluZS1oZWlnaHRcIixcbiAgICAgIFwiZm9udFwiLFxuICAgICAgXCJ3aWR0aFwiLFxuICAgICAgXCJtaW4taGVpZ2h0XCIsXG4gICAgICBcIndvcmQtd3JhcFwiLFxuICAgICAgXCJ3aGl0ZS1zcGFjZVwiXG4gICAgXVxuXG4gICAgLy8gQ29weSBzaXplL2xheW91dCBzcGVjaWZpYyBzdHlsZXMgdG8gY2xvbmVcbiAgICB2YXIgc3R5bGVzID0gd2luZG93LmdldENvbXB1dGVkU3R5bGUodGhpcyxudWxsKTtcbiAgICBmb3IgKCB2YXIgYXR0ciBpbiBjbG9uYWJsZV9hdHRyaWJ1dGVzKSB7XG4gICAgICB2YXIgdmFsID0gc3R5bGVzLmdldFByb3BlcnR5VmFsdWUoW2Nsb25hYmxlX2F0dHJpYnV0ZXNbYXR0cl1dKTtcbiAgICAgIGNsb25lLnN0eWxlW2Nsb25hYmxlX2F0dHJpYnV0ZXNbYXR0cl1dID0gdmFsO1xuICAgIH1cblxuICAgIC8vIFBsYWNlIHRoZSBjbG9uZSBkaXYgcmlnaHQgYmVoaW5kIHRoZSB0ZXh0YXJlYVxuICAgIGNsb25lLnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XG4gICAgY2xvbmUuc3R5bGUucG9zaXRpb24gPSBcImFic29sdXRlXCI7XG4gICAgY2xvbmUuc3R5bGUuekluZGV4ID0gXCItMTBcIjtcbiAgICBjbG9uZS5zdHlsZS50b3AgPSBcIjBcIjtcbiAgICBjbG9uZS5zdHlsZS5jb2xvciA9IFwidHJhbnNwYXJlbnRcIjtcblxuICAgIC8vIEFkZCBjbG9uZSB0byBzYW1lIHBhcmVudCBhcyB0aGUgdGV4dGFyZWFcbiAgICB0aGlzLnBhcmVudE5vZGUuYXBwZW5kQ2hpbGQoY2xvbmUpO1xuXG4gICAgdmFyIGFkanVzdFRleHRhcmVhVG9GaXRDb250ZW50ID0gZnVuY3Rpb24oKSB7XG4gICAgICBjbG9uZS5pbm5lclRleHQgPSB0aGlzLnZhbHVlO1xuICAgICAgdmFyIGNsb25lSGVpZ2h0ID0gcGFyc2VJbnQod2luZG93LmdldENvbXB1dGVkU3R5bGUoY2xvbmUsbnVsbCkuZ2V0UHJvcGVydHlWYWx1ZSgnaGVpZ2h0JykpO1xuICAgICAgY2xvbmVIZWlnaHQgKz0gcGFyc2VJbnQoY2xvbmUuc3R5bGUubGluZUhlaWdodCk7XG4gICAgICB0aGlzLnN0eWxlLmhlaWdodCA9IGNsb25lSGVpZ2h0ICsgXCJweFwiO1xuICAgIH1cblxuICAgIC8vIGJpbmQgdG8ga2V5dXAgZXZlbnQgZm9yIHJlc2l6aW5nXG4gICAgdGhpcy5hZGRFdmVudExpc3RlbmVyKFwia2V5dXBcIiwgYWRqdXN0VGV4dGFyZWFUb0ZpdENvbnRlbnQpO1xuICAgIGFkanVzdFRleHRhcmVhVG9GaXRDb250ZW50LmFwcGx5KHRoaXMpO1xuICB9XG59KSgpO1xuXG4vLyBSb3V0ZXMgZm9yIHRoZSBBcHBcbmFuZ3VsYXIubW9kdWxlKCdjb3VuY2lsc0FwcCcpXG5cbi5jb25maWcoZnVuY3Rpb24oJHN0YXRlUHJvdmlkZXIsICR1cmxSb3V0ZXJQcm92aWRlciwgJGlvbmljQ29uZmlnUHJvdmlkZXIpIHtcbiAgJGlvbmljQ29uZmlnUHJvdmlkZXIudmlld3MubWF4Q2FjaGUoMCk7XG4gICR1cmxSb3V0ZXJQcm92aWRlci5vdGhlcndpc2UoJy9tZW51L2hvbWUnKTtcbiAgdmFyIHZpZXdSb290ID0gXCJ2aWV3cy9cIjtcblxuICAkc3RhdGVQcm92aWRlci5zdGF0ZSgnbWVudS5ob21lJywge1xuICAgIGNhY2hlOiBmYWxzZSxcbiAgICB1cmw6IFwiL2hvbWVcIixcbiAgICB2aWV3czoge1xuICAgICAgXCJtZW51Q29udGVudFwiIDoge1xuICAgICAgICB0ZW1wbGF0ZVVybDogdmlld1Jvb3QgKyBcImhvbWUuaHRtbFwiLFxuICAgICAgICBjb250cm9sbGVyOiBcIkhvbWVDb250cm9sbGVyXCIsXG4gICAgICAgIHJlc29sdmU6IHtcbiAgICAgICAgICBcImN1cnJlbnRBdXRoXCI6IFtcIkF1dGhcIiwgZnVuY3Rpb24oQXV0aCkge1xuICAgICAgICAgICAgcmV0dXJuIEF1dGguJHJlcXVpcmVBdXRoKCk7XG4gICAgICAgICAgfV1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfSlcblxuICAkc3RhdGVQcm92aWRlci5zdGF0ZSgnc2ltcGxlJywge1xuICAgIGFic3RyYWN0OiB0cnVlLFxuICAgIHVybDogXCIvc2ltcGxlXCIsXG4gICAgdmlld3M6IHtcbiAgICAgIFwibWFpbkNvbnRlbnRcIiA6IHtcbiAgICAgICAgdGVtcGxhdGVVcmw6IHZpZXdSb290ICsgXCIvbGF5b3V0cy9ub19zaWRlYmFyLmh0bWxcIlxuICAgICAgfVxuICAgIH1cbiAgfSlcblxuICAkc3RhdGVQcm92aWRlci5zdGF0ZSgnbWVudScsIHtcbiAgICBhYnN0cmFjdDogdHJ1ZSxcbiAgICB1cmw6IFwiL21lbnVcIixcbiAgICB2aWV3czoge1xuICAgICAgJ21haW5Db250ZW50Jzoge1xuICAgICAgICB0ZW1wbGF0ZVVybDogdmlld1Jvb3QgKyBcIi9sYXlvdXRzL3NpZGViYXIuaHRtbFwiXG4gICAgICB9XG4gICAgfVxuICB9KVxuXG4gICRzdGF0ZVByb3ZpZGVyLnN0YXRlKCdzaW1wbGUud2VsY29tZScsIHtcbiAgICB1cmw6IFwiL3dlbGNvbWVcIixcbiAgICB0ZW1wbGF0ZVVybDogdmlld1Jvb3QgKyBcIndlbGNvbWUuaHRtbFwiXG4gIH0pXG5cbiAgJHN0YXRlUHJvdmlkZXIuc3RhdGUoJ3NpbXBsZS5vbmJvYXJkaW5nJywge1xuICAgIHVybDogXCIvb25ib2FyZGluZ1wiLFxuICAgIHRlbXBsYXRlVXJsOiB2aWV3Um9vdCArIFwib25ib2FyZGluZy5odG1sXCJcbiAgfSlcblxuICAkc3RhdGVQcm92aWRlci5zdGF0ZSgnc2ltcGxlLnNldHVwJywge1xuICAgIHVybDogXCIvc2V0dXBcIixcbiAgICB0ZW1wbGF0ZVVybDogdmlld1Jvb3QgKyBcInNldHVwLmh0bWxcIixcbiAgICBjb250cm9sbGVyOiBcIlNldHVwQ29udHJvbGxlclwiLFxuICAgIHJlc29sdmU6IHtcbiAgICAgIFwiY3VycmVudEF1dGhcIjogW1wiQXV0aFwiLCBmdW5jdGlvbihBdXRoKSB7XG4gICAgICAgIHJldHVybiBBdXRoLiR3YWl0Rm9yQXV0aCgpO1xuICAgICAgfV1cbiAgICB9XG4gIH0pXG5cbiAgJHN0YXRlUHJvdmlkZXIuc3RhdGUoJ3NpbXBsZS5jcmVhdGUnLCB7XG4gICAgdXJsOiBcIi9jcmVhdGVcIixcbiAgICB0ZW1wbGF0ZVVybDogdmlld1Jvb3QgKyBcImNyZWF0ZS5odG1sXCIsXG4gICAgY29udHJvbGxlcjogXCJDcmVhdGVDb250cm9sbGVyXCIsXG4gICAgcmVzb2x2ZToge1xuICAgICAgXCJjdXJyZW50QXV0aFwiOiBbXCJBdXRoXCIsIGZ1bmN0aW9uKEF1dGgpIHtcbiAgICAgICAgcmV0dXJuIEF1dGguJHdhaXRGb3JBdXRoKCk7XG4gICAgICB9XVxuICAgIH1cbiAgfSlcblxuICAkc3RhdGVQcm92aWRlci5zdGF0ZSgnc2ltcGxlLmxvZ2luJywge1xuICAgIHVybDogXCIvbG9naW5cIixcbiAgICB0ZW1wbGF0ZVVybDogdmlld1Jvb3QgKyBcImxvZ2luLmh0bWxcIixcbiAgICBjb250cm9sbGVyOiAnTG9naW5Db250cm9sbGVyJyxcbiAgICByZXNvbHZlOiB7XG4gICAgICBcImN1cnJlbnRBdXRoXCI6IFtcIkF1dGhcIiwgZnVuY3Rpb24oQXV0aCkge1xuICAgICAgICByZXR1cm4gQXV0aC4kd2FpdEZvckF1dGgoKTtcbiAgICAgIH1dXG4gICAgfVxuICB9KVxuXG4gICRzdGF0ZVByb3ZpZGVyLnN0YXRlKCduYXZpZ2F0aW9ucycsIHtcbiAgICB1cmw6IFwiL25hdmlnYXRpb25cIixcbiAgICB0ZW1wbGF0ZVVybDogdmlld1Jvb3QgKyBcIm5hdmlnYXRpb24uaHRtbFwiXG4gIH0pXG5cbiAgJHN0YXRlUHJvdmlkZXIuc3RhdGUoJ21lbnUuZGlyZWN0b3J5Jywge1xuICAgIHVybDogXCIvZGlyZWN0b3J5XCIsXG4gICAgdmlld3M6IHtcbiAgICAgICdtZW51Q29udGVudCc6IHtcbiAgICAgICAgdGVtcGxhdGVVcmw6IHZpZXdSb290ICsgXCIvZGlyZWN0b3J5Lmh0bWxcIixcbiAgICAgICAgY29udHJvbGxlcjogXCJEaXJlY3RvcnlDb250cm9sbGVyXCIsXG4gICAgICAgIHJlc29sdmU6IHtcbiAgICAgICAgICBcImN1cnJlbnRBdXRoXCI6IFtcIkF1dGhcIiwgZnVuY3Rpb24oQXV0aCkge1xuICAgICAgICAgICAgcmV0dXJuIEF1dGguJHdhaXRGb3JBdXRoKEF1dGguJHJlcXVpcmVBdXRoKTtcbiAgICAgICAgICB9XVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9KVxuXG4gICRzdGF0ZVByb3ZpZGVyLnN0YXRlKCdtZW51LmNvdW5jaWwnLCB7XG4gICAgYWJzdHJhY3Q6IHRydWUsXG4gICAgdXJsOiBcIi9jb3VuY2lsXCIsXG4gICAgcGFyYW1zOiB7XG4gICAgICBjb3VuY2lsOiBudWxsXG4gICAgfSxcbiAgICB2aWV3czoge1xuICAgICAgJ21lbnVDb250ZW50JyA6IHtcbiAgICAgICAgdGVtcGxhdGVVcmw6IHZpZXdSb290ICsgXCIvY291bmNpbC90YWJiZWRfbGF5b3V0Lmh0bWxcIixcbiAgICAgICAgY29udHJvbGxlcjogXCJDb3VuY2lsQ29udHJvbGxlclwiLFxuICAgICAgICByZXNvbHZlOiB7XG4gICAgICAgICAgXCJjdXJyZW50QXV0aFwiOiBbXCJBdXRoXCIsIGZ1bmN0aW9uKEF1dGgpIHtcbiAgICAgICAgICAgIEF1dGguJHdhaXRGb3JBdXRoKEF1dGguJHJlcXVpcmVBdXRoKTtcbiAgICAgICAgICB9XVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9KVxuXG4gIC8vICRzdGF0ZVByb3ZpZGVyLnN0YXRlKCdtZW51LmNvdW5jaWwubGlzdCcsIHtcbiAgLy8gICB1cmw6IFwiL2xpc3RcIixcbiAgLy8gICB2aWV3czoge1xuICAvLyAgICAgJ2NvdW5jaWxDb250ZW50JyA6IHtcbiAgLy8gICAgICAgdGVtcGxhdGVVcmw6IHZpZXdSb290ICsgXCIvY291bmNpbC9saXN0Lmh0bWxcIlxuICAvLyAgICAgfVxuICAvLyAgIH1cbiAgLy8gfSlcblxuICAvLyAkc3RhdGVQcm92aWRlci5zdGF0ZSgnbWVudS5jb3VuY2lsLnRhYicsIHtcbiAgLy8gICBhYnN0cmFjdDogdHJ1ZSxcbiAgLy8gICB1cmw6IFwiL3RhYlwiLFxuICAvLyAgIHBhcmFtczoge1xuICAvLyAgICAgY291bmNpbDogbnVsbFxuICAvLyAgIH0sXG4gIC8vICAgdmlld3M6IHtcbiAgLy8gICAgICdjb3VuY2lsQ29udGVudCcgOiB7XG4gIC8vICAgICAgIHRlbXBsYXRlVXJsOiB2aWV3Um9vdCArIFwiL2NvdW5jaWwvdGFiYmVkX2xheW91dC5odG1sXCIsXG4gIC8vICAgICAgIGNvbnRyb2xsZXI6IFwiQ291bmNpbENvbnRyb2xsZXJcIlxuICAvLyAgICAgfVxuICAvLyAgIH1cbiAgLy8gfSlcblxuICAkc3RhdGVQcm92aWRlci5zdGF0ZSgnbWVudS5jb3VuY2lsLmRpc2N1c3Npb24nLCB7XG4gICAgdXJsOiBcIi9kaXNjdXNzaW9uXCIsXG4gICAgcGFyYW1zOiB7XG4gICAgICBjdXJyZW50Q291bmNpbFRhYjogJ2Rpc2N1c3Npb25zJ1xuICAgIH0sXG4gICAgdmlld3M6IHtcbiAgICAgICd0YWInIDoge1xuICAgICAgICB0ZW1wbGF0ZVVybDogdmlld1Jvb3QgKyBcIi9jb3VuY2lsL2Rpc2N1c3Npb25fbGlzdC5odG1sXCIsXG4gICAgICAgIGNvbnRyb2xsZXI6ICdDb3VuY2lsRGlzY3Vzc2lvbkNvbnRyb2xsZXInXG4gICAgICB9XG4gICAgfVxuICB9KVxuXG4gICRzdGF0ZVByb3ZpZGVyLnN0YXRlKCdtZW51LmNvdW5jaWwuYXNzaWdubWVudCcsIHtcbiAgICB1cmw6IFwiL2Fzc2lnbm1lbnRcIixcbiAgICBwYXJhbXM6IHtcbiAgICAgIGN1cnJlbnRDb3VuY2lsVGFiOiAnYXNzaWdubWVudHMnXG4gICAgfSxcbiAgICB2aWV3czoge1xuICAgICAgJ3RhYicgOiB7XG4gICAgICAgIHRlbXBsYXRlVXJsOiB2aWV3Um9vdCArIFwiL2NvdW5jaWwvYXNzaWdubWVudF9saXN0Lmh0bWxcIixcbiAgICAgICAgY29udHJvbGxlcjogJ0NvdW5jaWxBc3NpZ25tZW50Q29udHJvbGxlcidcbiAgICAgIH1cbiAgICB9XG4gIH0pXG5cbiAgJHN0YXRlUHJvdmlkZXIuc3RhdGUoJ21lbnUuY291bmNpbC5hZ2VuZGEnLCB7XG4gICAgdXJsOiBcIi9hZ2VuZGFcIixcbiAgICBwYXJhbXM6IHtcbiAgICAgIGN1cnJlbnRDb3VuY2lsVGFiOiAnYWdlbmRhcycsXG4gICAgICB3ZWVrOiB7XG4gICAgICAgIHZhbHVlOiBtb21lbnQoKS5pc29XZWVrKClcbiAgICAgIH1cbiAgICB9LFxuICAgIHZpZXdzOiB7XG4gICAgICAndGFiJyA6IHtcbiAgICAgICAgdGVtcGxhdGVVcmw6IHZpZXdSb290ICsgXCIvY291bmNpbC9hZ2VuZGEuaHRtbFwiLFxuICAgICAgICBjb250cm9sbGVyOiBcIkFnZW5kYURldGFpbENvbnRyb2xsZXJcIlxuICAgICAgfVxuICAgIH1cbiAgfSlcblxuICAkc3RhdGVQcm92aWRlci5zdGF0ZSgnbWVudS5jb3VuY2lsLmRpc2N1c3Npb24ubmV3Jywge1xuICAgIHVybDogXCIvbmV3XCIsXG4gICAgdmlld3M6IHtcbiAgICAgICdtb2RhbCcgOiB7XG4gICAgICAgIHRlbXBsYXRlVXJsOiB2aWV3Um9vdCArIFwiL2NvdW5jaWwvZGlzY3Vzc2lvbl9uZXcuaHRtbFwiLFxuICAgICAgfVxuICAgIH1cbiAgfSlcblxuICAkc3RhdGVQcm92aWRlci5zdGF0ZSgnbWVudS5jb3VuY2lsLmFzc2lnbm1lbnQubmV3Jywge1xuICAgIHVybDogXCIvbmV3XCIsXG4gICAgdmlld3M6IHtcbiAgICAgICdtb2RhbCcgOiB7XG4gICAgICAgIHRlbXBsYXRlVXJsOiB2aWV3Um9vdCArIFwiL2NvdW5jaWwvYXNzaWdubWVudF9uZXcuaHRtbFwiLFxuICAgICAgfVxuICAgIH1cbiAgfSlcblxuICAkc3RhdGVQcm92aWRlci5zdGF0ZSgnbWVudS5jb3VuY2lsLmVkaXQnLCB7XG4gICAgdXJsOiAnZWRpdCcsXG4gICAgdmlld3M6IHtcbiAgICAgICdjb3VuY2lsQ29udGVudCcgOiB7XG4gICAgICAgIHRlbXBsYXRlVXJsOiB2aWV3Um9vdCArICcvY291bmNpbC9lZGl0Lmh0bWwnXG4gICAgICB9XG4gICAgfVxuICB9KVxuXG5cbiAgJHN0YXRlUHJvdmlkZXIuc3RhdGUoJ21lbnUuYWdlbmRhJywge1xuICAgIGFic3RyYWN0OiB0cnVlLFxuICAgIHVybDogXCIvYWdlbmRhXCIsXG4gICAgdmlld3M6IHtcbiAgICAgICdtZW51Q29udGVudCc6IHtcbiAgICAgICAgdGVtcGxhdGVVcmw6IHZpZXdSb290ICsgXCIvYWdlbmRhL3dyYXBwZXIuaHRtbFwiLFxuICAgICAgICBjb250cm9sbGVyOiBcIkFnZW5kYUNvbnRyb2xsZXJcIlxuICAgICAgfVxuICAgIH1cbiAgfSlcblxuICAkc3RhdGVQcm92aWRlci5zdGF0ZSgnbWVudS5hZ2VuZGEubGlzdCcsIHtcbiAgICB1cmw6IFwiL2xpc3RcIixcbiAgICB2aWV3czoge1xuICAgICAgJ2FnZW5kYUNvbnRlbnQnIDoge1xuICAgICAgICB0ZW1wbGF0ZVVybDogdmlld1Jvb3QgKyBcIi9hZ2VuZGEvbGlzdC5odG1sXCIsXG4gICAgICB9XG4gICAgfVxuICB9KVxufSlcblxuLy8gQ29udHJvbGxlcnMgZm9yIHRoZSBDb3VuY2lsc0FwcFxuYW5ndWxhci5tb2R1bGUoJ2NvdW5jaWxzQXBwJylcblxuLmNvbnRyb2xsZXIoXCJBcHBsaWNhdGlvbkNvbnRyb2xsZXJcIiwgZnVuY3Rpb24oTU9EQUxTLCAkaW9uaWNIaXN0b3J5LCAkc2NvcGUsICRpb25pY01vZGFsLCAkaW9uaWNTaWRlTWVudURlbGVnYXRlLCBBdXRoLCAkc3RhdGUpIHtcblxuICAkc2NvcGUudmlld0NvbmZpZyA9IHtcbiAgICBjdXJyZW50Q291bmNpbElkOiAwLFxuICAgIGN1cnJlbnRDb3VuY2lsVGFiOiBcImRpc2N1c3Npb25cIlxuICB9O1xuXG4gICRzY29wZS5sb2dvdXQgPSBmdW5jdGlvbiAoKSB7XG4gICAgQXV0aC4kdW5hdXRoKCk7XG4gICAgcmV0dXJuICRzdGF0ZS5nbygnc2ltcGxlLndlbGNvbWUnKTtcbiAgfTtcblxuICAkc2NvcGUuYmFjayA9IGZ1bmN0aW9uKCkge1xuICAgICRpb25pY0hpc3RvcnkuZ29CYWNrKCk7XG4gIH07XG59KVxuXG4uY29udHJvbGxlcignTG9naW5Db250cm9sbGVyJywgZnVuY3Rpb24gKCRzY29wZSwgQXV0aCwgJHN0YXRlLCAkbG9jYWxzdG9yYWdlKSB7XG4gICRzY29wZS5jcmVkZW50aWFscyA9IHtcbiAgICBlbWFpbDogJGxvY2Fsc3RvcmFnZS5nZXQoJ2VtYWlsJylcbiAgfTtcbiAgJHNjb3BlLmxvZ2luID0gZnVuY3Rpb24gKCkge1xuICAgIEF1dGguJGF1dGhXaXRoUGFzc3dvcmQoe1xuICAgICAgZW1haWw6ICRzY29wZS5jcmVkZW50aWFscy5lbWFpbCxcbiAgICAgIHBhc3N3b3JkOiAkc2NvcGUuY3JlZGVudGlhbHMucGFzc3dvcmRcbiAgICB9KS50aGVuKGZ1bmN0aW9uKGF1dGhEYXRhKSB7XG4gICAgICAkbG9jYWxzdG9yYWdlLnNldCgnZW1haWwnLCAkc2NvcGUuY3JlZGVudGlhbHMuZW1haWwpO1xuICAgICAgJHN0YXRlLmdvKCdtZW51LmhvbWUnKTtcbiAgICB9KS5jYXRjaChmdW5jdGlvbihlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcihcIkF1dGhlbnRpY2F0aW9uIGZhaWxlZDpcIiwgZXJyb3IpO1xuICAgIH0pO1xuICB9O1xufSlcblxuLmNvbnRyb2xsZXIoJ1NldHVwQ29udHJvbGxlcicsIGZ1bmN0aW9uKCRzY29wZSwgJGh0dHAsIG1lLCAkc3RhdGUsICRxKSB7XG4gICRzY29wZS5jcmVkZW50aWFscyA9IHt9O1xuICAkc2NvcGUubGRzTG9naW4gPSBmdW5jdGlvbiAoKSB7XG4gICAgJGh0dHAucG9zdCgnaHR0cDovL2NvdW5jaWxzLWFwcC5oZXJva3VhcHAuY29tL2FwaS9tZScsICRzY29wZS5jcmVkZW50aWFscylcbiAgICAgIC50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkge1xuICAgICAgICBtZS5zZXQocmVzcG9uc2UuZGF0YSk7XG4gICAgICAgICRzdGF0ZS5nbygnc2ltcGxlLmNyZWF0ZScpO1xuICAgICAgfSk7XG4gIH07XG59KVxuXG4uY29udHJvbGxlcignQ3JlYXRlQ29udHJvbGxlcicsIGZ1bmN0aW9uICgkc2NvcGUsIG1lLCBBdXRoLCAkZmlyZWJhc2VPYmplY3QsICRzdGF0ZSwgJGlvbmljUG9wdXApIHtcbiAgdmFyIHJlZiA9IG5ldyBGaXJlYmFzZSgnaHR0cHM6Ly9jb3VuY2lsc2FwcC5maXJlYmFzZWlvLmNvbS91c2VycycpO1xuICB2YXIgdXNlcnMgPSAkZmlyZWJhc2VPYmplY3QocmVmKTtcbiAgJHNjb3BlLm1lID0gbWUuZ2V0KCk7XG4gICRzY29wZS5jcmVhdGVBY2NvdW50ID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBob21lLCB1aWQ7XG4gICAgQXV0aC4kY3JlYXRlVXNlcih7XG4gICAgICAgIGVtYWlsOiAkc2NvcGUubWUuZW1haWwsXG4gICAgICAgIHBhc3N3b3JkOiAkc2NvcGUubWUucGFzc1xuICAgICAgfSlcbiAgICAgIC50aGVuKGZ1bmN0aW9uKHVzZXJEYXRhKSB7XG4gICAgICAgIHVpZCA9IHVzZXJEYXRhLnVpZDtcbiAgICAgICAgdXNlcnNbdWlkXSA9IGhvbWUgPSBtZS5nZXQoKS5ob21lVW5pdE5icjtcbiAgICAgICAgcmV0dXJuIHVzZXJzLiRzYXZlKCk7XG4gICAgICB9KVxuICAgICAgLnRoZW4oZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgcmVmID0gbmV3IEZpcmViYXNlKCdodHRwczovL2NvdW5jaWxzYXBwLmZpcmViYXNlaW8uY29tLycraG9tZSsnL3VzZXJzJyk7XG4gICAgICAgIHZhciBtZW1iZXJzID0gJGZpcmViYXNlT2JqZWN0KHJlZik7XG4gICAgICAgIG1lbWJlcnNbdWlkXSA9IG1lLmdldCgpO1xuICAgICAgICByZXR1cm4gbWVtYmVycy4kc2F2ZSgpO1xuICAgICAgfSlcbiAgICAgIC50aGVuKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIEF1dGguJGF1dGhXaXRoUGFzc3dvcmQoe1xuICAgICAgICAgIGVtYWlsOiAkc2NvcGUubWUuZW1haWwsXG4gICAgICAgICAgcGFzc3dvcmQ6ICRzY29wZS5tZS5wYXNzXG4gICAgICAgIH0pO1xuICAgICAgfSlcbiAgICAgIC50aGVuKGZ1bmN0aW9uIChhdXRoRGF0YSkge1xuICAgICAgICAkc3RhdGUuZ28oJ21lbnUuaG9tZScpO1xuICAgICAgfSlcbiAgICAgIC5jYXRjaChmdW5jdGlvbihlcnJvcikge1xuICAgICAgICB2YXIgYWxlcnRQb3B1cCA9ICRpb25pY1BvcHVwLmFsZXJ0KHtcbiAgICAgICAgICAgdGl0bGU6ICdFcnJvcicsXG4gICAgICAgICAgIHRlbXBsYXRlOiBlcnJvclxuICAgICAgICAgfSk7XG4gICAgICAgICBhbGVydFBvcHVwLnRoZW4oZnVuY3Rpb24ocmVzKSB7XG4gICAgICAgICAgICRzY29wZS5tZS5wYXNzID0gJyc7XG4gICAgICAgICB9KTtcbiAgICAgIH0pO1xuICB9O1xufSlcblxuLmNvbnRyb2xsZXIoXCJIb21lQ29udHJvbGxlclwiLCBmdW5jdGlvbigkc2NvcGUsIFVzZXIsIGN1cnJlbnRBdXRoLCAkZmlyZWJhc2VPYmplY3QsICRmaXJlYmFzZUFycmF5KSB7XG4gICRzY29wZS5teUFzc2lnbm1lbnRzID0gW107XG4gICRzY29wZS5kZWxlZ2F0ZWRBc3NpZ25tZW50cyA9IFtdO1xuICAkc2NvcGUuZGlzY3Vzc2lvbnMgPSBbXTtcblxuICAkc2NvcGUudXBkYXRlID0gZnVuY3Rpb24gKHZhbCkge1xuICAgIGlmICh2YWwuX2NvbXBsZXRlZCkge1xuICAgICAgdmFsLl9jYW5jZWwgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFsLmNvbXBsZXRlZCA9IHRydWU7XG4gICAgICAgIHZhbC4kc2F2ZSgpO1xuICAgICAgfSwgMTUwMDApO1xuICAgIH0gZWxzZSB7XG4gICAgICBjbGVhclRpbWVvdXQodmFsLl9jYW5jZWwpXG4gICAgfVxuICB9O1xuXG4gICRzY29wZS5jb3VuY2lscyA9IFtcIkJpc2hvcHJpY1wiLCBcIldhcmQgQ291bmNpbFwiXTtcblxuICBVc2VyLnNldChjdXJyZW50QXV0aC51aWQpXG4gICAgLnRoZW4oZnVuY3Rpb24gKHVzZXIpIHtcbiAgICAgIHJldHVybiB1c2VyLiRiaW5kVG8oJHNjb3BlLCAndXNlcicpO1xuICAgIH0pXG4gICAgLnRoZW4oZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIGFzc2lnbm1lbnRzID0gbmV3IEZpcmViYXNlKCdodHRwczovL2NvdW5jaWxzYXBwLmZpcmViYXNlaW8uY29tLycrJHNjb3BlLnVzZXIuaG9tZVVuaXROYnIrJy9hc3NpZ25tZW50cycpO1xuICAgICAgdmFyIGRpc2N1c3Npb25zID0gbmV3IEZpcmViYXNlKCdodHRwczovL2NvdW5jaWxzYXBwLmZpcmViYXNlaW8uY29tLycrJHNjb3BlLnVzZXIuaG9tZVVuaXROYnIrJy9kaXNjdXNzaW9ucycpO1xuXG4gICAgICBhc3NpZ25tZW50cy5vcmRlckJ5Q2hpbGQoJ2Fzc2lnbmVkVG8nKVxuICAgICAgICAuZXF1YWxUbygkc2NvcGUudXNlci4kaWQpXG4gICAgICAgIC5vbignY2hpbGRfYWRkZWQnLCBmdW5jdGlvbihzbmFwc2hvdCkge1xuICAgICAgICAgICRzY29wZS5teUFzc2lnbm1lbnRzLnB1c2goJGZpcmViYXNlT2JqZWN0KHNuYXBzaG90LnJlZigpKSk7XG4gICAgICAgIH0pO1xuXG4gICAgICBhc3NpZ25tZW50cy5vcmRlckJ5Q2hpbGQoJ2Fzc2lnbmVkQnknKVxuICAgICAgICAuZXF1YWxUbygkc2NvcGUudXNlci4kaWQpXG4gICAgICAgIC5vbignY2hpbGRfYWRkZWQnLCBmdW5jdGlvbihzbmFwc2hvdCkge1xuICAgICAgICAgICRzY29wZS5kZWxlZ2F0ZWRBc3NpZ25tZW50cy5wdXNoKCRmaXJlYmFzZU9iamVjdChzbmFwc2hvdC5yZWYoKSkpO1xuICAgICAgICB9KTtcblxuICAgICAgXy5mb3JFYWNoKCRzY29wZS51c2VyLmRpc2N1c3Npb25zLCBmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgICB2YXIgY2hpbGQgPSBkaXNjdXNzaW9ucy5jaGlsZChpdGVtKTtcbiAgICAgICAgJHNjb3BlLmRpc2N1c3Npb25zLnB1c2goJGZpcmViYXNlT2JqZWN0KGNoaWxkKSk7XG4gICAgICB9KTtcbiAgICB9KTtcbn0pXG5cbi5jb250cm9sbGVyKCdEaXJlY3RvcnlDb250cm9sbGVyJywgZnVuY3Rpb24gKCRzY29wZSwgJGZpcmViYXNlQXJyYXksICRjb3Jkb3ZhU21zLCAkY29yZG92YUVtYWlsQ29tcG9zZXIpIHtcbiAgdmFyIHJlZiA9IG5ldyBGaXJlYmFzZSgnaHR0cHM6Ly9jb3VuY2lsc2FwcC5maXJlYmFzZWlvLmNvbS81Mzg0NjkvbWVtYmVycycpO1xuICB2YXIgc2Nyb2xsUmVmID0gbmV3IEZpcmViYXNlLnV0aWwuU2Nyb2xsKHJlZiwgJ3N1cm5hbWUnKTtcbiAgJHNjb3BlLm1lbWJlcnMgPSAkZmlyZWJhc2VBcnJheShzY3JvbGxSZWYpO1xuICBzY3JvbGxSZWYuc2Nyb2xsLm5leHQoMjUpO1xuXG4gICRzY29wZS5sb2FkTW9yZSA9IGZ1bmN0aW9uKCkge1xuICAgIC8vIGxvYWQgdGhlIG5leHQgY29udGFjdFxuICAgIHNjcm9sbFJlZi5zY3JvbGwubmV4dCgyNSk7XG4gICAgJHNjb3BlLiRicm9hZGNhc3QoJ3Njcm9sbC5pbmZpbml0ZVNjcm9sbENvbXBsZXRlJyk7XG4gIH07XG4gIFxuICAkc2NvcGUuZW1haWwgPSBmdW5jdGlvbiAoaXRlbSkge1xuICAgICRjb3Jkb3ZhRW1haWxDb21wb3Nlci5pc0F2YWlsYWJsZSgpLnRoZW4oZnVuY3Rpb24oKSB7XG4gICAgICAgLy8gaXMgYXZhaWxhYmxlXG4gICAgICAgdmFyIGVtYWlsID0ge1xuICAgICAgICAgIHRvOiBpdGVtLmVtYWlsLFxuICAgICAgICB9O1xuXG4gICAgICAgJGNvcmRvdmFFbWFpbENvbXBvc2VyLm9wZW4oZW1haWwpLnRoZW4obnVsbCwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgLy8gdXNlciBjYW5jZWxsZWQgZW1haWxcbiAgICAgICB9KTtcblxuICAgICB9LCBmdW5jdGlvbiAoKSB7XG4gICAgICAgLy8gbm90IGF2YWlsYWJsZVxuICAgICB9KTtcbiAgfTtcblxuICAkc2NvcGUuY2FsbCA9IGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgd2luZG93LmxvY2F0aW9uLmhyZWY9J3RlbDonK2l0ZW0ucGhvbmUucmVwbGFjZSgvXFxXLywgJycpO1xuICB9O1xuICBcbiAgJHNjb3BlLm1lc3NhZ2UgPSBmdW5jdGlvbiAoaXRlbSkge1xuICAgICRjb3Jkb3ZhU21zXG4gICAgICAuc2VuZChpdGVtLnBob25lLnJlcGxhY2UoL1xcVy8sICcnKSwgJycsIHt9KVxuICAgICAgLnRoZW4oZnVuY3Rpb24oKSB7XG4gICAgICAgIC8vIFN1Y2Nlc3MhIFNNUyB3YXMgc2VudFxuICAgICAgfSwgZnVuY3Rpb24oZXJyb3IpIHtcbiAgICAgICAgLy8gQW4gZXJyb3Igb2NjdXJyZWRcbiAgICAgIH0pO1xuICB9O1xufSlcblxuLmNvbnRyb2xsZXIoXCJBZ2VuZGFEZXRhaWxDb250cm9sbGVyXCIsIGZ1bmN0aW9uICgkc2NvcGUsICRmaXJlYmFzZU9iamVjdCwgJGZpcmViYXNlQXJyYXksICRzdGF0ZVBhcmFtcywgJHRpbWVvdXQsIEFHRU5EQVMsICRzdGF0ZSwgTWVtYmVyc01vZGFsKSB7XG4gICRzY29wZS5jb3VuY2lsID0gJHN0YXRlUGFyYW1zLmNvdW5jaWwgfHwgJ0Jpc2hvcHJpYyc7XG4gICRzY29wZS53ZWVrID0gcGFyc2VJbnQoJHN0YXRlUGFyYW1zLndlZWspO1xuICAkc2NvcGUuY3VycmVudFdlZWsgPSBtb21lbnQoKS5pc29XZWVrKCk7XG5cbiAgaWYgKCRzY29wZS5jb3VuY2lsKSB7XG4gICAgdmFyIHJlZiA9IG5ldyBGaXJlYmFzZSgnaHR0cHM6Ly9jb3VuY2lsc2FwcC5maXJlYmFzZWlvLmNvbS81Mzg0NjkvYWdlbmRhcycpLmNoaWxkKCRzY29wZS5jb3VuY2lsKTtcbiAgICAkc2NvcGUuYXZhaWxhYmxlQWdlbmRhcyA9ICRmaXJlYmFzZUFycmF5KHJlZik7XG4gICAgJHNjb3BlLm9wZW5NZW1iZXJzTW9kYWwgPSBmdW5jdGlvbihkYXRhU3RvcmUsIG1heCkge1xuICAgICAgTWVtYmVyc01vZGFsLm9wZW5Nb2RhbChtYXgsICRzY29wZS5kYXRhW2RhdGFTdG9yZV0pLnRoZW4oZnVuY3Rpb24ocmVzdWx0KSB7XG4gICAgICAgICRzY29wZS5kYXRhW2RhdGFTdG9yZV0gPSBtYXggPT09MSA/IF8ucGljayhyZXN1bHRbMF0sIFsnZm5hbWUnLCAnbG5hbWUnXSkgOiByZXN1bHQubWFwKGZ1bmN0aW9uIChpdGVtKSB7IHJldHVybiBfLnBpY2soaXRlbSwgWydmbmFtZScsICdsbmFtZSddKTsgfSk7XG4gICAgICB9KTtcbiAgICB9O1xuICAgIHZhciByZWYgPSBuZXcgRmlyZWJhc2UoJ2h0dHBzOi8vY291bmNpbHNhcHAuZmlyZWJhc2Vpby5jb20vNTM4NDY5L2FnZW5kYXMnKS5jaGlsZCgkc2NvcGUuY291bmNpbCkuY2hpbGQoJHNjb3BlLndlZWspO1xuICAgIHZhciBvYmogPSAkZmlyZWJhc2VPYmplY3QocmVmKTtcbiAgICBvYmouJGJpbmRUbygkc2NvcGUsICdkYXRhJylcbiAgICAgIC50aGVuKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgJHRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgIGFuZ3VsYXIuZWxlbWVudCgnW2F1dG8tcmVzaXplXScpLmVhY2goZnVuY3Rpb24oKXsgYXV0b3NpemUodGhpcyk7IH0pO1xuICAgICAgICB9KTtcbiAgICAgIH0pOyBcbiAgfSBlbHNlIHtcbiAgICAkc3RhdGUuZ28oJ21lbnUuYWdlbmRhLmxpc3QnKTtcbiAgfVxuXG59KVxuXG4uY29udHJvbGxlcihcIkFnZW5kYUNvbnRyb2xsZXJcIiwgZnVuY3Rpb24oXG4gICRzY29wZSxcbiAgSHltblNlcnZpY2UsXG4gIEFHRU5EQVMsXG4gIE1lbWJlclNlcnZpY2Vcbikge1xuXG4gICRzY29wZS5tZW1iZXJzID0gTWVtYmVyU2VydmljZS5nZXRNZW1iZXJzKCk7XG4gICRzY29wZS5oeW1ucyA9IEh5bW5TZXJ2aWNlLmdldExpc3QoKTtcbiAgJHNjb3BlLmFnZW5kYXMgPSBBR0VOREFTO1xuICAkc2NvcGUuYWdlbmRhQWNjZXNzID0geyBcIjVcIjp0cnVlLFwiNlwiOnRydWUsXCI3XCI6dHJ1ZSB9O1xuXG59KVxuXG4uY29udHJvbGxlcihcIkNvdW5jaWxEaXNjdXNzaW9uQ29udHJvbGxlclwiLCBmdW5jdGlvbigkc2NvcGUsICRzdGF0ZVBhcmFtcywgJHN0YXRlLCAkZmlyZWJhc2VBcnJheSwgVXNlciwgTWVtYmVyc01vZGFsLCAkaW9uaWNNb2RhbCwgTU9EQUxTLCBOb3RpZnkpIHtcbiAgICAkc2NvcGUuY291bmNpbCA9ICRzdGF0ZVBhcmFtcy5jb3VuY2lsIHx8ICdCaXNob3ByaWMnO1xuICAgIFxuICAgIGlmICgkc2NvcGUuY291bmNpbCkge1xuXG4gICAgICAkaW9uaWNNb2RhbC5mcm9tVGVtcGxhdGVVcmwoTU9EQUxTWydjcmVhdGVEaXNjdXNzaW9uJ10sIHtcbiAgICAgICAgc2NvcGU6ICRzY29wZSxcbiAgICAgICAgYW5pbWF0aW9uOiAnc2xpZGUtaW4tdXAnXG4gICAgICB9KS50aGVuKGZ1bmN0aW9uKG1vZGFsKSB7XG4gICAgICAgICRzY29wZS5tb2RhbCA9IG1vZGFsO1xuICAgICAgfSk7XG5cbiAgICAgICRzY29wZS5vcGVuTW9kYWwgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ29wZW4gbW9kYWwnKTtcbiAgICAgICAgJHNjb3BlLm1vZGFsLnNob3coKTtcbiAgICAgIH07XG4gICAgICAkc2NvcGUuY2xvc2VNb2RhbCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAkc2NvcGUubW9kYWwuaGlkZSgpO1xuICAgICAgfTtcbiAgICAgIC8vQ2xlYW51cCB0aGUgbW9kYWwgd2hlbiB3ZSdyZSBkb25lIHdpdGggaXQhXG4gICAgICAkc2NvcGUuJG9uKCckZGVzdHJveScsIGZ1bmN0aW9uKCkge1xuICAgICAgICAkc2NvcGUubW9kYWwucmVtb3ZlKCk7XG4gICAgICB9KTtcblxuICAgICAgJHNjb3BlLm9wZW5NZW1iZXJzTW9kYWwgPSBmdW5jdGlvbihkYXRhU3RvcmUsIG1heCkge1xuICAgICAgICBNZW1iZXJzTW9kYWwub3Blbk1vZGFsKG1heCwgJHNjb3BlLmRhdGFbZGF0YVN0b3JlXSkudGhlbihmdW5jdGlvbihyZXN1bHQpIHtcbiAgICAgICAgICAkc2NvcGUuZGF0YVtkYXRhU3RvcmVdID0gbWF4ID09PTEgPyBfLnBpY2socmVzdWx0WzBdLCBbJ2ZuYW1lJywgJ2xuYW1lJywgJ3Byb2ZpbGVJbWFnZScsICckaWQnLCAndG9rZW5zJ10pIDogcmVzdWx0Lm1hcChmdW5jdGlvbiAoaXRlbSkgeyByZXR1cm4gXy5waWNrKGl0ZW0sIFsnZm5hbWUnLCAnbG5hbWUnLCAncHJvZmlsZUltYWdlJywgJyRpZCcsICd0b2tlbnMnXSk7IH0pO1xuICAgICAgICB9KTtcbiAgICAgIH07XG5cbiAgICAgIHZhciBwcm9taXNlID0gVXNlci5nZXQoKVxuICAgICAgICAudGhlbihmdW5jdGlvbiAobWUpIHtcbiAgICAgICAgICB2YXIgcmVmID0gbmV3IEZpcmViYXNlKCdodHRwczovL2NvdW5jaWxzYXBwLmZpcmViYXNlaW8uY29tLycpLmNoaWxkKG1lLmhvbWVVbml0TmJyKS5jaGlsZCgnZGlzY3Vzc2lvbnMnKS5vcmRlckJ5Q2hpbGQoJ2NvdW5jaWwnKS5lcXVhbFRvKCRzY29wZS5jb3VuY2lsKTs7XG4gICAgICAgICAgJHNjb3BlLmRpc2N1c3Npb25zID0gJGZpcmViYXNlQXJyYXkocmVmKTtcbiAgICAgICAgICByZXR1cm4gbWU7XG4gICAgICAgIH0pO1xuXG4gICAgICAkc2NvcGUuZGF0YSA9IHtcbiAgICAgICAgY29udGVudDogJycsXG4gICAgICAgIGRpc2N1c3Npb25QYXJ0aWNpcGFudHM6IFtdXG4gICAgICB9O1xuXG4gICAgICAkc2NvcGUuY3JlYXRlRGlzY3Vzc2lvbiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGNyZWF0b3IsIGRpc2N1c3Npb24sIHRva2VucyA9IFtdO1xuICAgICAgICBwcm9taXNlXG4gICAgICAgICAgLnRoZW4oZnVuY3Rpb24gKG1lKSB7XG4gICAgICAgICAgICBjcmVhdG9yID0gbWU7XG4gICAgICAgICAgICBkaXNjdXNzaW9uID0ge1xuICAgICAgICAgICAgICBjb250ZW50OiAkc2NvcGUuZGF0YS5jb250ZW50LFxuICAgICAgICAgICAgICBjcmVhdGVkQnk6IG1lLiRpZCxcbiAgICAgICAgICAgICAgY3JlYXRlZERhdGU6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcbiAgICAgICAgICAgICAgdXNlckF2YXRhcjogbWUucHJvZmlsZUltYWdlLFxuICAgICAgICAgICAgICB1c2VyTmFtZTogbWUuZm5hbWUgKyAnICcgKyBtZS5sbmFtZVxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHJldHVybiAkc2NvcGUuZGlzY3Vzc2lvbnMuJGFkZChkaXNjdXNzaW9uKTtcbiAgICAgICAgICB9KVxuICAgICAgICAgIC50aGVuKGZ1bmN0aW9uIChyZWYpIHtcbiAgICAgICAgICAgIHZhciBpZCA9IHJlZi5rZXkoKTtcbiAgICAgICAgICAgIHZhciB1c2VycyA9IG5ldyBGaXJlYmFzZSgnaHR0cHM6Ly9jb3VuY2lsc2FwcC5maXJlYmFzZWlvLmNvbS8nK2NyZWF0b3IuaG9tZVVuaXROYnIrJy91c2Vycy8nKTtcbiAgICAgICAgICAgIHVzZXJzLmNoaWxkKGNyZWF0b3IuJGlkKycvZGlzY3Vzc2lvbnMnKS5wdXNoKHtcbiAgICAgICAgICAgICAgY291bmNpbDogJHNjb3BlLmNvdW5jaWwsXG4gICAgICAgICAgICAgIGtleTogaWRcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgXy5mb3JFYWNoKCRzY29wZS5kYXRhLmRpc2N1c3Npb25QYXJ0aWNpcGFudHMsIGZ1bmN0aW9uICh1c2VyKSB7XG4gICAgICAgICAgICAgIGlmICh1c2VyLnRva2Vucykge1xuICAgICAgICAgICAgICAgIF8uZm9yRWFjaCh1c2VyLnRva2VucywgZnVuY3Rpb24gKHRva2VuKSB7XG4gICAgICAgICAgICAgICAgICB0b2tlbnMucHVzaCh0b2tlbi50b2tlbik7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgdXNlcnMuY2hpbGQodXNlci4kaWQrJy9kaXNjdXNzaW9ucycpLnB1c2goe1xuICAgICAgICAgICAgICAgIGNvdW5jaWw6ICRzY29wZS5jb3VuY2lsLFxuICAgICAgICAgICAgICAgIGtleTogaWRcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICRzY29wZS5tb2RhbC5oaWRlKCk7XG4gICAgICAgICAgfSlcbiAgICAgICAgICAudGhlbihmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gTm90aWZ5LnNlbmQoY3JlYXRvci5mbmFtZSArICcgJyArIGNyZWF0b3IubG5hbWUgKyAnIGp1c3QgYWRkZWQgeW91IHRvIGEgZGlzY3Vzc2lvbiBmb3IgJyskc2NvcGUuY291bmNpbCwgdG9rZW5zKTtcbiAgICAgICAgICB9KTtcbiAgICAgIH07XG5cbiAgICB9IGVsc2Uge1xuICAgICAgJHN0YXRlLmdvKCdtZW51LmNvdW5jaWwubGlzdCcpO1xuICAgIH1cbn0pXG5cbi5jb250cm9sbGVyKFwiQ291bmNpbEFzc2lnbm1lbnRDb250cm9sbGVyXCIsIGZ1bmN0aW9uKCRzY29wZSwgJHN0YXRlUGFyYW1zLCAkc3RhdGUsIE1lbWJlcnNNb2RhbCwgJGZpcmViYXNlQXJyYXksIFVzZXIsICRpb25pY01vZGFsLCBNT0RBTFMsIE5vdGlmeSkge1xuICAgICRzY29wZS5jb3VuY2lsID0gJHN0YXRlUGFyYW1zLmNvdW5jaWwgfHwgJ0Jpc2hvcHJpYyc7XG5cbiAgICAkc2NvcGUudXBkYXRlID0gZnVuY3Rpb24gKHZhbCkge1xuICAgICAgcmV0dXJuICRzY29wZS5hc3NpZ25tZW50cy4kc2F2ZSh2YWwuJGlkKTtcbiAgICB9O1xuXG4gICAgaWYgKCRzY29wZS5jb3VuY2lsKSB7XG5cbiAgICAgICRpb25pY01vZGFsLmZyb21UZW1wbGF0ZVVybChNT0RBTFNbJ2NyZWF0ZUFzc2lnbm1lbnQnXSwge1xuICAgICAgICBzY29wZTogJHNjb3BlLFxuICAgICAgICBhbmltYXRpb246ICdzbGlkZS1pbi11cCdcbiAgICAgIH0pLnRoZW4oZnVuY3Rpb24obW9kYWwpIHtcbiAgICAgICAgJHNjb3BlLm1vZGFsID0gbW9kYWw7XG4gICAgICB9KTtcbiAgICAgICRzY29wZS5vcGVuTW9kYWwgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgJHNjb3BlLm1vZGFsLnNob3coKTtcbiAgICAgIH07XG4gICAgICBjb25zb2xlLmxvZygkc2NvcGUub3Blbk1vZGFsKTtcbiAgICAgICRzY29wZS5jbG9zZU1vZGFsID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICRzY29wZS5tb2RhbC5oaWRlKCk7XG4gICAgICB9O1xuICAgICAgLy9DbGVhbnVwIHRoZSBtb2RhbCB3aGVuIHdlJ3JlIGRvbmUgd2l0aCBpdCFcbiAgICAgICRzY29wZS4kb24oJyRkZXN0cm95JywgZnVuY3Rpb24oKSB7XG4gICAgICAgICRzY29wZS5tb2RhbC5yZW1vdmUoKTtcbiAgICAgIH0pO1xuXG4gICAgICAkc2NvcGUuZGF0ZVBpY2tlckNhbGxiYWNrID0gYW5ndWxhci5ub29wO1xuXG4gICAgICAkc2NvcGUub3Blbk1lbWJlcnNNb2RhbCA9IGZ1bmN0aW9uKGRhdGFTdG9yZSwgbWF4KSB7XG4gICAgICAgIE1lbWJlcnNNb2RhbC5vcGVuTW9kYWwobWF4LCAkc2NvcGUuZGF0YVtkYXRhU3RvcmVdKS50aGVuKGZ1bmN0aW9uKHJlc3VsdCkge1xuICAgICAgICAgICRzY29wZS5kYXRhW2RhdGFTdG9yZV0gPSBtYXggPT09MSA/IF8ucGljayhyZXN1bHRbMF0sIFsnZm5hbWUnLCAnbG5hbWUnLCAncHJvZmlsZUltYWdlJywgJyRpZCcsICd0b2tlbnMnXSkgOiByZXN1bHQubWFwKGZ1bmN0aW9uIChpdGVtKSB7IHJldHVybiBfLnBpY2soaXRlbSwgWydmbmFtZScsICdsbmFtZScsICdwcm9maWxlSW1hZ2UnLCAnJGlkJywgJ3Rva2VucyddKTsgfSk7XG4gICAgICAgIH0pO1xuICAgICAgfTtcblxuICAgICAgJHNjb3BlLmRhdGEgPSB7XG4gICAgICAgIGR1ZURhdGU6IG5ldyBEYXRlKCksXG4gICAgICAgIGFzc2lnbm1lbnRQYXJ0aWNpcGFudHM6IFtdLFxuICAgICAgICBhc3NpZ25tZW50QXNzaWduZWU6IG51bGwsXG4gICAgICAgIGNvbnRlbnQ6ICcnXG4gICAgICB9O1xuXG4gICAgICB2YXIgcHJvbWlzZSA9IFVzZXIuZ2V0KClcbiAgICAgICAgLnRoZW4oZnVuY3Rpb24gKG1lKSB7XG4gICAgICAgICAgdmFyIHJlZiA9IG5ldyBGaXJlYmFzZSgnaHR0cHM6Ly9jb3VuY2lsc2FwcC5maXJlYmFzZWlvLmNvbS8nKS5jaGlsZChtZS5ob21lVW5pdE5icikuY2hpbGQoJ2Fzc2lnbm1lbnRzJykub3JkZXJCeUNoaWxkKCdjb3VuY2lsJykuZXF1YWxUbygkc2NvcGUuY291bmNpbCk7XG4gICAgICAgICAgJHNjb3BlLmFzc2lnbm1lbnRzID0gJGZpcmViYXNlQXJyYXkocmVmKTtcbiAgICAgICAgICByZXR1cm4gbWU7XG4gICAgICAgIH0pO1xuXG4gICAgICAkc2NvcGUuY3JlYXRlQXNzaWdubWVudCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGNyZWF0b3IsIGFzc2lnbm1lbnQsIHRva2VucyA9IFtdO1xuICAgICAgICBcbiAgICAgICAgcHJvbWlzZVxuICAgICAgICAgIC50aGVuKGZ1bmN0aW9uIChtZSkge1xuICAgICAgICAgICAgY3JlYXRvciA9IG1lO1xuXG4gICAgICAgICAgICBhc3NpZ25tZW50ID0ge1xuICAgICAgICAgICAgICBjcmVhdGVkQnk6IGNyZWF0b3IuJGlkLFxuICAgICAgICAgICAgICBhc3NpZ25lZFRvOiAkc2NvcGUuZGF0YS5hc3NpZ25tZW50QXNzaWduZWUsXG4gICAgICAgICAgICAgIGR1ZURhdGU6ICRzY29wZS5kYXRhLmR1ZURhdGUudG9JU09TdHJpbmcoKSxcbiAgICAgICAgICAgICAgY29udGVudDogJHNjb3BlLmRhdGEuY29udGVudCxcbiAgICAgICAgICAgICAgY29tcGxldGVkOiBmYWxzZSxcbiAgICAgICAgICAgICAgcGFydGljaXBhbnRzOiAkc2NvcGUuZGF0YS5hc3NpZ25tZW50UGFydGljaXBhbnRzXG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICByZXR1cm4gJHNjb3BlLmFzc2lnbm1lbnRzLiRhZGQoYXNzaWdubWVudCk7XG4gICAgICAgICAgfSlcbiAgICAgICAgICAudGhlbihmdW5jdGlvbiAocmVmKSB7XG4gICAgICAgICAgICB2YXIgaWQgPSByZWYua2V5KCk7XG4gICAgICAgICAgICB2YXIgdXNlcnMgPSBuZXcgRmlyZWJhc2UoJ2h0dHBzOi8vY291bmNpbHNhcHAuZmlyZWJhc2Vpby5jb20vJytjcmVhdG9yLmhvbWVVbml0TmJyKycvdXNlcnMvJyk7XG4gICAgICAgICAgICB1c2Vycy5jaGlsZChjcmVhdG9yLiRpZCsnL2Fzc2lnbm1lbnRzJykucHVzaCh7XG4gICAgICAgICAgICAgIGNvdW5jaWw6ICRzY29wZS5jb3VuY2lsLFxuICAgICAgICAgICAgICBrZXk6IGlkXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHVzZXJzLmNoaWxkKCRzY29wZS5kYXRhLmFzc2lnbm1lbnRBc3NpZ25lZS4kaWQrJy9hc3NpZ25tZW50cycpLnB1c2goe1xuICAgICAgICAgICAgICBjb3VuY2lsOiAkc2NvcGUuY291bmNpbCxcbiAgICAgICAgICAgICAga2V5OiBpZFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBpZiAoJHNjb3BlLmRhdGEuYXNzaWdubWVudEFzc2lnbmVlLnRva2Vucykge1xuICAgICAgICAgICAgICBfLmZvckVhY2goJHNjb3BlLmRhdGEuYXNzaWdubWVudEFzc2lnbmVlLnRva2VucywgZnVuY3Rpb24gKHRva2VuKSB7XG4gICAgICAgICAgICAgICAgdG9rZW5zLnB1c2godG9rZW4udG9rZW4pO1xuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF8uZm9yRWFjaChhc3NpZ25tZW50LnBhcnRpY2lwYW50cywgZnVuY3Rpb24gKHVzZXIpIHtcbiAgICAgICAgICAgICAgaWYgKHVzZXIudG9rZW5zKSB7XG4gICAgICAgICAgICAgICAgXy5mb3JFYWNoKHVzZXIudG9rZW5zLCBmdW5jdGlvbiAodG9rZW4pIHtcbiAgICAgICAgICAgICAgICAgIHRva2Vucy5wdXNoKHRva2VuLnRva2VuKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB1c2Vycy5jaGlsZCh1c2VyLiRpZCsnL2Fzc2lnbm1lbnRzJykucHVzaCh7XG4gICAgICAgICAgICAgICAgY291bmNpbDogJHNjb3BlLmNvdW5jaWwsXG4gICAgICAgICAgICAgICAga2V5OiBpZFxuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH0pXG4gICAgICAgICAgLnRoZW4oZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgJHNjb3BlLm1vZGFsLmhpZGUoKTtcbiAgICAgICAgICB9KVxuICAgICAgICAgIC50aGVuKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBOb3RpZnkuc2VuZChjcmVhdG9yLmZuYW1lICsgJyAnICsgY3JlYXRvci5sbmFtZSArICcganVzdCBhZGRlZCB5b3UgdG8gYSB0YXNrIGZvciAnKyRzY29wZS5jb3VuY2lsLCB0b2tlbnMpO1xuICAgICAgICAgIH0pO1xuICAgICAgfTtcblxuICAgIH0gZWxzZSB7XG4gICAgICAkc3RhdGUuZ28oJ21lbnUuY291bmNpbC5saXN0Jyk7XG4gICAgfVxuXG59KVxuXG4uY29udHJvbGxlcihcIkNvdW5jaWxDb250cm9sbGVyXCIsIGZ1bmN0aW9uKE1lbWJlclNlcnZpY2UsIENPVU5DSUxTLCAkc2NvcGUsICRzdGF0ZVBhcmFtcywgJHN0YXRlKSB7XG5cbiAgJHNjb3BlLmFjdGl2ZSA9ICRzdGF0ZS5jdXJyZW50Lm5hbWU7XG4gICRzY29wZS5jb3VuY2lsID0gJHN0YXRlUGFyYW1zLmNvdW5jaWwgfHwgJ0Jpc2hvcHJpYyc7XG4gIFxuICBNZW1iZXJTZXJ2aWNlLmdldE1lbWJlcnMoKS50aGVuKGZ1bmN0aW9uIChtZW1iZXJzKSB7XG4gICAgJHNjb3BlLm1lbWJlcnMgPSBtZW1iZXJzO1xuICB9KTtcblxuICAkc2NvcGUuY291bmNpbExpc3QgPSBDT1VOQ0lMUztcbiAgJHNjb3BlLmNvdW5jaWxBY2Nlc3MgPSB7XG4gICAgXCIxMVwiIDoge1xuICAgICAgYXNzaWdubWVudENvdW50OiAzLFxuICAgICAgY29tbWVudENvdW50OiA0XG4gICAgfSxcbiAgICBcIjEyXCIgOiB7XG4gICAgICBhc3NpZ25tZW50Q291bnQ6IDAsXG4gICAgICBjb21tZW50Q291bnQ6IDJcbiAgICB9XG4gIH07XG59KVxuXG4vLyBTZXJ2aWNlcyBmb3IgQ291bmNpbHNBcHBcbmFuZ3VsYXIubW9kdWxlKCdjb3VuY2lsc0FwcCcpXG5cbi5mYWN0b3J5KCdOb3RpZnknLCBmdW5jdGlvbiAoJGh0dHApIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBzZW5kOiBmdW5jdGlvbiAobWVzc2FnZSwgdG9rZW5zKSB7XG4gICAgICAgICAgICByZXR1cm4gJGh0dHAucG9zdCgnaHR0cDovL2NvdW5jaWxzLWFwcC5oZXJva3VhcHAuY29tL2FwaS9wdXNoJywge1xuICAgICAgICAgICAgICAgIG1lc3NhZ2U6IG1lc3NhZ2UsXG4gICAgICAgICAgICAgICAgdG9rZW5zOiB0b2tlbnNcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfTtcbn0pXG5cbi5mYWN0b3J5KCdVc2VyJywgZnVuY3Rpb24gKCRmaXJlYmFzZU9iamVjdCwgJHEpIHtcbiAgICB2YXIgdXNlciA9IHt9O1xuICAgIHZhciB1bml0ID0gbnVsbDtcbiAgICB2YXIgZGVmZXJyZWQgPSAkcS5kZWZlcigpO1xuICAgIHJldHVybiB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkgeyBcbiAgICAgICAgICAgIHJldHVybiBkZWZlcnJlZC5wcm9taXNlXG4gICAgICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdXNlcjtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgc2V0OiBmdW5jdGlvbiAodWlkKSB7IFxuICAgICAgICAgICAgdmFyIHJlZiA9IG5ldyBGaXJlYmFzZSgnaHR0cHM6Ly9jb3VuY2lsc2FwcC5maXJlYmFzZWlvLmNvbS91c2Vycy8nICsgdWlkKTtcbiAgICAgICAgICAgIHJldHVybiAkZmlyZWJhc2VPYmplY3QocmVmKS4kbG9hZGVkKClcbiAgICAgICAgICAgICAgICAudGhlbihmdW5jdGlvbiAoaG9tZSkge1xuICAgICAgICAgICAgICAgICAgICB1bml0ID0gaG9tZS4kdmFsdWU7XG4gICAgICAgICAgICAgICAgICAgIGFuZ3VsYXIubW9kdWxlKCdjb3VuY2lsc0FwcCcpLnZhbHVlKCdVTklUTlVNQkVSJywgdW5pdCk7XG4gICAgICAgICAgICAgICAgICAgIGhvbWUuJGRlc3Ryb3koKTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHJlZjIgPSBuZXcgRmlyZWJhc2UoJ2h0dHBzOi8vY291bmNpbHNhcHAuZmlyZWJhc2Vpby5jb20vJyt1bml0KycvdXNlcnMvJyArIHVpZCk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAkZmlyZWJhc2VPYmplY3QocmVmMikuJGxvYWRlZCgpO1xuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24gKHJlZikge1xuICAgICAgICAgICAgICAgICAgICB1c2VyID0gcmVmO1xuICAgICAgICAgICAgICAgICAgICBkZWZlcnJlZC5yZXNvbHZlKHVzZXIpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdXNlcjtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0VW5pdDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIHVuaXQ7XG4gICAgICAgIH1cbiAgICB9O1xufSlcblxuLmZhY3RvcnkoJ0F1dGgnLCBmdW5jdGlvbiAoJGZpcmViYXNlQXV0aCkge1xuICAgIHZhciByZWYgPSBuZXcgRmlyZWJhc2UoJ2h0dHBzOi8vY291bmNpbHNhcHAuZmlyZWJhc2Vpby5jb20nKTtcbiAgICByZXR1cm4gJGZpcmViYXNlQXV0aChyZWYpO1xufSlcblxuLmZhY3RvcnkoJ21lJywgZnVuY3Rpb24gKCkge1xuICAgIHZhciBtZSA9IHt9O1xuICAgIHJldHVybiB7XG4gICAgICAgIGdldFVuaXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG1lLmhvbWVVbml0TmJyOyB9LFxuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG1lOyB9LFxuICAgICAgICBzZXQ6IGZ1bmN0aW9uIChfbWUpIHsgXG4gICAgICAgICAgICBtZSA9IF9tZTtcbiAgICAgICAgICAgIG1lLmZuYW1lID0gX21lLmZuYW1lIHx8IF9tZS5wcmVmZXJyZWROYW1lLnNwbGl0KCcsICcpWzFdO1xuICAgICAgICAgICAgbWUubG5hbWUgPSBfbWUubG5hbWUgfHwgX21lLnN1cm5hbWU7XG4gICAgICAgICAgICBtZS5lbWFpbCA9IF9tZS5lbWFpbDtcbiAgICAgICAgfVxuICAgIH07XG59KVxuXG4uZmFjdG9yeShcIk1lbWJlclNlcnZpY2VcIiwgZnVuY3Rpb24oJGZpcmViYXNlQXJyYXksIFVzZXIpIHtcblxuICByZXR1cm4ge1xuICAgIGdldE1lbWJlcnMgOiBmdW5jdGlvbigpIHsgXG4gICAgICAgIHJldHVybiBVc2VyLmdldCgpXG4gICAgICAgICAgICAudGhlbihmdW5jdGlvbiAodXNlcikge1xuICAgICAgICAgICAgICAgIHJldHVybiB1c2VyLmhvbWVVbml0TmJyO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uICh1bml0KSB7XG4gICAgICAgICAgICAgICAgdmFyIHJlZiA9IG5ldyBGaXJlYmFzZSgnaHR0cHM6Ly9jb3VuY2lsc2FwcC5maXJlYmFzZWlvLmNvbS8nK3VuaXQrJy91c2VycycpO1xuICAgICAgICAgICAgICAgIHZhciB1c2VycyA9ICRmaXJlYmFzZUFycmF5KHJlZik7XG4gICAgICAgICAgICAgICAgcmV0dXJuICRmaXJlYmFzZUFycmF5KHJlZikuJGxvYWRlZCgpOyBcbiAgICAgICAgICAgIH0pO1xuICAgIH1cbiAgfVxufSlcblxuLmZhY3RvcnkoXCJNZW1iZXJzTW9kYWxcIiwgWydNZW1iZXJTZXJ2aWNlJywgJyRxJywgJ01PREFMUycsICckaW9uaWNNb2RhbCcsICckcm9vdFNjb3BlJywgZnVuY3Rpb24oTWVtYmVyU2VydmljZSwgJHEsIE1PREFMUywgJGlvbmljTW9kYWwsICRyb290U2NvcGUpIHtcblxuICAkbW9kYWxTY29wZSA9ICRyb290U2NvcGUuJG5ldygpO1xuXG4gIHZhciB0eXBlID0gXCJtZW1iZXJzXCI7XG4gIHZhciB1c2VyTW9kYWw7XG4gIHZhciBtYXhTZWxlY3RlZCA9IG51bGw7XG4gICRtb2RhbFNjb3BlLnNlYXJjaCA9IHt9O1xuICAkbW9kYWxTY29wZS5zZWxlY3Rpb24gPSB7fTtcbiAgJG1vZGFsU2NvcGUuc2VhcmNoLlRlcm0gPSBcIlwiO1xuICAkbW9kYWxTY29wZS5zZWFyY2guUmVzdWx0cyA9IHt9O1xuICAkbW9kYWxTY29wZS5zZWxlY3Rpb24udXNlcnMgPSBbXTtcblxuICB2YXIgb3Blbk1vZGFsID0gZnVuY3Rpb24oIG1heCwgc2VsZWN0ZWQgKSB7XG4gICAgdmFyIGRlZmVycmVkID0gJHEuZGVmZXIoKTtcblxuICAgIGlmIChzZWxlY3RlZCkge1xuICAgICAgJG1vZGFsU2NvcGUuc2VsZWN0aW9uLnVzZXJzID0gbWF4ID09PSAxID8gW3NlbGVjdGVkXSA6IHNlbGVjdGVkO1xuICAgIH1cblxuICAgIG1heFNlbGVjdGVkID0gbWF4IHx8IE51bWJlci5NQVhfVkFMVUU7XG4gICAgJGlvbmljTW9kYWwuZnJvbVRlbXBsYXRlVXJsKE1PREFMU1t0eXBlXSwge1xuICAgICAgYW5pbWF0aW9uOiAnc2xpZGUtaW4tdXAnLFxuICAgICAgc2NvcGU6ICRtb2RhbFNjb3BlXG4gICAgfSlcbiAgICAudGhlbihmdW5jdGlvbihtb2RhbCkge1xuICAgICAgJG1vZGFsU2NvcGUuc2VhcmNoLlRlcm0gPSBcIlwiO1xuICAgICAgdXNlck1vZGFsID0gbW9kYWw7XG5cbiAgICAgICRtb2RhbFNjb3BlLmNsb3NlTW9kYWwgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgZGVmZXJyZWQucmVzb2x2ZSgkbW9kYWxTY29wZS5zZWxlY3Rpb24udXNlcnMuc2xpY2UoKSk7XG4gICAgICAgICRtb2RhbFNjb3BlLnNlbGVjdGlvbi51c2Vycy5zcGxpY2UoMCwkbW9kYWxTY29wZS5zZWxlY3Rpb24udXNlcnMubGVuZ3RoKTtcbiAgICAgICAgdXNlck1vZGFsLnJlbW92ZSgpO1xuICAgICAgfVxuXG4gICAgICB1c2VyTW9kYWwuc2hvdygpO1xuICAgIH0pXG5cbiAgICByZXR1cm4gZGVmZXJyZWQucHJvbWlzZTtcbiAgfVxuXG4gICRtb2RhbFNjb3BlLnNlbGVjdGlvbi50b2dnbGUgPSBmdW5jdGlvbihtZW0pIHtcblxuICAgIGlmKCRtb2RhbFNjb3BlLnNlbGVjdGlvbi51c2Vycy5jb250YWlucyhtZW0pKSB7XG4gICAgICAkbW9kYWxTY29wZS5zZWxlY3Rpb24udXNlcnMucmVtb3ZlKG1lbSk7XG4gICAgfVxuXG4gICAgZWxzZSBpZiAoJG1vZGFsU2NvcGUuc2VsZWN0aW9uLnVzZXJzLmxlbmd0aCA8PSAxICYmIG1heFNlbGVjdGVkID09PSAxKSB7XG4gICAgICAkbW9kYWxTY29wZS5zZWxlY3Rpb24udXNlcnMuc3BsaWNlKDAsMSk7XG4gICAgICAkbW9kYWxTY29wZS5zZWxlY3Rpb24udXNlcnMucHVzaFVuaXF1ZShtZW0pO1xuICAgICAgJG1vZGFsU2NvcGUuY2xvc2VNb2RhbCgpXG4gICAgfVxuXG4gICAgZWxzZSBpZiAoJG1vZGFsU2NvcGUuc2VsZWN0aW9uLnVzZXJzLmxlbmd0aCA8IG1heFNlbGVjdGVkKSB7XG4gICAgICAkbW9kYWxTY29wZS5zZWxlY3Rpb24udXNlcnMucHVzaFVuaXF1ZShtZW0pO1xuICAgIH1cbiAgICAvLyBPdGhlcndpc2UgaWdub3JlIGNsaWNrLCBhcyB0aGVyZSdkIGJlIHRvbyBtYW55XG4gIH1cblxuICAkbW9kYWxTY29wZS4kd2F0Y2goICdzZWFyY2guVGVybScsIHNlYXJjaCApO1xuXG4gIGZ1bmN0aW9uIHNlYXJjaChfbmV3KSB7XG4gICAgaWYgKF9uZXcubGVuZ3RoKSB7XG4gICAgICAgICRtb2RhbFNjb3BlLnNlYXJjaC5SZXN1bHRzID0gd2FyZE1lbWJlcnMuZmlsdGVyKGZ1bmN0aW9uKG0pIHsgdmFyIG5hbWUgPSBtLmZuYW1lICsgJyAnICsgbS5sbmFtZTsgcmV0dXJuIG5hbWUudG9Mb3dlckNhc2UoKS5pbmRleE9mKCRtb2RhbFNjb3BlLnNlYXJjaC5UZXJtLnRvTG93ZXJDYXNlKCkpID49IDB9KVxuICAgIH0gZWxzZSB7XG4gICAgICAgICRtb2RhbFNjb3BlLnNlYXJjaC5SZXN1bHRzID0gd2FyZE1lbWJlcnM7XG4gICAgfVxuICB9XG5cbiAgdmFyIHdhcmRNZW1iZXJzID0gW107XG4gIE1lbWJlclNlcnZpY2UuZ2V0TWVtYmVycygpICAgIFxuICAgIC50aGVuKGZ1bmN0aW9uIChtZW1iZXJzKSB7XG4gICAgICAgICRtb2RhbFNjb3BlLnNlYXJjaC5SZXN1bHRzID0gd2FyZE1lbWJlcnMgPSBtZW1iZXJzO1xuICAgIH0pO1xuXG4gIHJldHVybiB7XG4gICAgb3Blbk1vZGFsOiBvcGVuTW9kYWxcbiAgfVxufV0pXG5cbi5mYWN0b3J5KFwiQ291bmNpbHNTZXJ2aWNlXCIsIFsnJHNjb3BlJywgZnVuY3Rpb24oKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHt9XG59XSlcblxuLmZhY3RvcnkoXCJIeW1uU2VydmljZVwiLCBmdW5jdGlvbiggKSB7XG4gIHZhciBoeW1ucyA9IFtcbiAgICBcIlRoZSBNb3JuaW5nIEJyZWFrc1wiLFxuICAgIFwiVGhlIFNwaXJpdCBvZiBHb2RcIixcbiAgICBcIk5vdyBMZXQgVXMgUmVqb2ljZVwiLFxuICAgIFwiVHJ1dGggRXRlcm5hbFwiLFxuICAgIFwiSGlnaCBvbiB0aGUgTW91bnRhaW4gVG9wXCIsXG4gICAgXCJSZWRlZW1lciBvZiBJc3JhZWxcIixcbiAgICBcIklzcmFlbCwgSXNyYWVsLCBHb2QgSXMgQ2FsbGluZ1wiLFxuICAgIFwiQXdha2UgYW5kIEFyaXNlXCIsXG4gICAgXCJDb21lLCBSZWpvaWNlXCIsXG4gICAgXCJDb21lLCBTaW5nIHRvIHRoZSBMb3JkXCIsXG4gICAgXCJXaGF0IFdhcyBXaXRuZXNzZWQgaW4gdGhlIEhlYXZlbnM/XCIsXG4gICAgXCInVHdhcyBXaXRuZXNzZWQgaW4gdGhlIE1vcm5pbmcgU2t5XCIsXG4gICAgXCJBbiBBbmdlbCBmcm9tIG9uIEhpZ2hcIixcbiAgICBcIlN3ZWV0IElzIHRoZSBQZWFjZSB0aGUgR29zcGVsIEJyaW5nc1wiLFxuICAgIFwiSSBTYXcgYSBNaWdodHkgQW5nZWwgRmx5XCIsXG4gICAgXCJXaGF0IEdsb3Jpb3VzIFNjZW5lcyBNaW5lIEV5ZXMgQmVob2xkXCIsXG4gICAgXCJBd2FrZSwgWWUgU2FpbnRzIG9mIEdvZCwgQXdha2UhXCIsXG4gICAgXCJUaGUgVm9pY2Ugb2YgR29kIEFnYWluIElzIEhlYXJkXCIsXG4gICAgXCJXZSBUaGFuayBUaGVlLCBPIEdvZCwgZm9yIGEgUHJvcGhldFwiLFxuICAgIFwiR29kIG9mIFBvd2VyLCBHb2Qgb2YgUmlnaHRcIixcbiAgICBcIkNvbWUsIExpc3RlbiB0byBhIFByb3BoZXQncyBWb2ljZVwiLFxuICAgIFwiV2UgTGlzdGVuIHRvIGEgUHJvcGhldCdzIFZvaWNlXCIsXG4gICAgXCJXZSBFdmVyIFByYXkgZm9yIFRoZWVcIixcbiAgICBcIkdvZCBCbGVzcyBPdXIgUHJvcGhldCBEZWFyXCIsXG4gICAgXCJOb3cgV2UnbGwgU2luZyB3aXRoIE9uZSBBY2NvcmRcIixcbiAgICBcIkpvc2VwaCBTbWl0aCdzIEZpcnN0IFByYXllclwiLFxuICAgIFwiUHJhaXNlIHRvIHRoZSBNYW5cIixcbiAgICBcIlNhaW50cywgQmVob2xkIEhvdyBHcmVhdCBKZWhvdmFoXCIsXG4gICAgXCJBIFBvb3IgV2F5ZmFyaW5nIE1hbiBvZiBHcmllZlwiLFxuICAgIFwiQ29tZSwgQ29tZSwgWWUgU2FpbnRzXCIsXG4gICAgXCJPIEdvZCwgT3VyIEhlbHAgaW4gQWdlcyBQYXN0XCIsXG4gICAgXCJUaGUgSGFwcHkgRGF5IGF0IExhc3QgSGFzIENvbWVcIixcbiAgICBcIk91ciBNb3VudGFpbiBIb21lIFNvIERlYXJcIixcbiAgICBcIk8gWWUgTW91bnRhaW5zIEhpZ2hcIixcbiAgICBcIkZvciB0aGUgU3RyZW5ndGggb2YgdGhlIEhpbGxzXCIsXG4gICAgXCJUaGV5LCB0aGUgQnVpbGRlcnMgb2YgdGhlIE5hdGlvblwiLFxuICAgIFwiVGhlIFdpbnRyeSBEYXksIERlc2NlbmRpbmcgdG8gSXRzIENsb3NlXCIsXG4gICAgXCJDb21lLCBBbGwgWWUgU2FpbnRzIG9mIFppb25cIixcbiAgICBcIk8gU2FpbnRzIG9mIFppb25cIixcbiAgICBcIkFyaXNlLCBPIEdsb3Jpb3VzIFppb25cIixcbiAgICBcIkxldCBaaW9uIGluIEhlciBCZWF1dHkgUmlzZVwiLFxuICAgIFwiSGFpbCB0byB0aGUgQnJpZ2h0bmVzcyBvZiBaaW9uJ3MgR2xhZCBNb3JuaW5nIVwiLFxuICAgIFwiWmlvbiBTdGFuZHMgd2l0aCBIaWxscyBTdXJyb3VuZGVkXCIsXG4gICAgXCJCZWF1dGlmdWwgWmlvbiwgQnVpbHQgQWJvdmVcIixcbiAgICBcIkxlYWQgTWUgaW50byBMaWZlIEV0ZXJuYWxcIixcbiAgICBcIkdsb3Jpb3VzIFRoaW5ncyBvZiBUaGVlIEFyZSBTcG9rZW5cIixcbiAgICBcIldlIFdpbGwgU2luZyBvZiBaaW9uXCIsXG4gICAgXCJHbG9yaW91cyBUaGluZ3MgQXJlIFN1bmcgb2YgWmlvblwiLFxuICAgIFwiQWRhbS1vbmRpLUFobWFuXCIsXG4gICAgXCJDb21lLCBUaG91IEdsb3Jpb3VzIERheSBvZiBQcm9taXNlXCIsXG4gICAgXCJTb25zIG9mIE1pY2hhZWwsIEhlIEFwcHJvYWNoZXNcIixcbiAgICBcIlRoZSBEYXkgRGF3biBJcyBCcmVha2luZ1wiLFxuICAgIFwiTGV0IEVhcnRoJ3MgSW5oYWJpdGFudHMgUmVqb2ljZVwiLFxuICAgIFwiQmVob2xkLCB0aGUgTW91bnRhaW4gb2YgdGhlIExvcmRcIixcbiAgICBcIkxvLCB0aGUgTWlnaHR5IEdvZCBBcHBlYXJpbmchXCIsXG4gICAgXCJTb2Z0bHkgQmVhbXMgdGhlIFNhY3JlZCBEYXduaW5nXCIsXG4gICAgXCJXZSdyZSBOb3QgQXNoYW1lZCB0byBPd24gT3VyIExvcmRcIixcbiAgICBcIkNvbWUsIFllIENoaWxkcmVuIG9mIHRoZSBMb3JkXCIsXG4gICAgXCJDb21lLCBPIFRob3UgS2luZyBvZiBLaW5nc1wiLFxuICAgIFwiQmF0dGxlIEh5bW4gb2YgdGhlIFJlcHVibGljXCIsXG4gICAgXCJSYWlzZSBZb3VyIFZvaWNlcyB0byB0aGUgTG9yZFwiLFxuICAgIFwiQWxsIENyZWF0dXJlcyBvZiBPdXIgR29kIGFuZCBLaW5nXCIsXG4gICAgXCJHcmVhdCBLaW5nIG9mIEhlYXZlblwiLFxuICAgIFwiT24gVGhpcyBEYXkgb2YgSm95IGFuZCBHbGFkbmVzc1wiLFxuICAgIFwiQ29tZSwgQWxsIFllIFNhaW50cyBXaG8gRHdlbGwgb24gRWFydGhcIixcbiAgICBcIlJlam9pY2UsIHRoZSBMb3JkIElzIEtpbmchXCIsXG4gICAgXCJHbG9yeSB0byBHb2Qgb24gSGlnaFwiLFxuICAgIFwiQSBNaWdodHkgRm9ydHJlc3MgSXMgT3VyIEdvZFwiLFxuICAgIFwiQWxsIEdsb3J5LCBMYXVkLCBhbmQgSG9ub3JcIixcbiAgICBcIlNpbmcgUHJhaXNlIHRvIEhpbVwiLFxuICAgIFwiV2l0aCBTb25ncyBvZiBQcmFpc2VcIixcbiAgICBcIlByYWlzZSB0byB0aGUgTG9yZCwgdGhlIEFsbWlnaHR5XCIsXG4gICAgXCJQcmFpc2UgdGhlIExvcmQgd2l0aCBIZWFydCBhbmQgVm9pY2VcIixcbiAgICBcIlByYWlzZSBZZSB0aGUgTG9yZFwiLFxuICAgIFwiSW4gSHltbnMgb2YgUHJhaXNlXCIsXG4gICAgXCJHb2Qgb2YgT3VyIEZhdGhlcnMsIFdlIENvbWUgdW50byBUaGVlXCIsXG4gICAgXCJHcmVhdCBJcyB0aGUgTG9yZFwiLFxuICAgIFwiR29kIG9mIE91ciBGYXRoZXJzLCBXaG9zZSBBbG1pZ2h0eSBIYW5kXCIsXG4gICAgXCJXaXRoIEFsbCB0aGUgUG93ZXIgb2YgSGVhcnQgYW5kIFRvbmd1ZVwiLFxuICAgIFwiR29kIG9mIE91ciBGYXRoZXJzLCBLbm93biBvZiBPbGRcIixcbiAgICBcIlByZXNzIEZvcndhcmQsIFNhaW50c1wiLFxuICAgIFwiRm9yIEFsbCB0aGUgU2FpbnRzXCIsXG4gICAgXCJHdWlkZSBVcywgTyBUaG91IEdyZWF0IEplaG92YWhcIixcbiAgICBcIkZhaXRoIG9mIE91ciBGYXRoZXJzXCIsXG4gICAgXCJIb3cgRmlybSBhIEZvdW5kYXRpb25cIixcbiAgICBcIkhvdyBHcmVhdCBUaG91IEFydFwiLFxuICAgIFwiR29kIElzIExvdmVcIixcbiAgICBcIkdyZWF0IEdvZCwgQXR0ZW5kIFdoaWxlIFppb24gU2luZ3NcIixcbiAgICBcIlRoZSBMb3JkIElzIE15IExpZ2h0XCIsXG4gICAgXCJGcm9tIEFsbCBUaGF0IER3ZWxsIGJlbG93IHRoZSBTa2llc1wiLFxuICAgIFwiRmF0aGVyLCBUaHkgQ2hpbGRyZW4gdG8gVGhlZSBOb3cgUmFpc2VcIixcbiAgICBcIkZvciB0aGUgQmVhdXR5IG9mIHRoZSBFYXJ0aFwiLFxuICAgIFwiUHJheWVyIG9mIFRoYW5rc2dpdmluZ1wiLFxuICAgIFwiQ29tZSwgWWUgVGhhbmtmdWwgUGVvcGxlXCIsXG4gICAgXCJOb3cgVGhhbmsgV2UgQWxsIE91ciBHb2RcIixcbiAgICBcIkRlYXJlc3QgQ2hpbGRyZW4sIEdvZCBJcyBOZWFyIFlvdVwiLFxuICAgIFwiTGVhZCwgS2luZGx5IExpZ2h0XCIsXG4gICAgXCJJIE5lZWQgVGhlZSBFdmVyeSBIb3VyXCIsXG4gICAgXCJOZWFyZXIsIERlYXIgU2F2aW9yLCB0byBUaGVlXCIsXG4gICAgXCJOZWFyZXIsIE15IEdvZCwgdG8gVGhlZVwiLFxuICAgIFwiR3VpZGUgTWUgdG8gVGhlZVwiLFxuICAgIFwiSmVzdXMsIExvdmVyIG9mIE15IFNvdWxcIixcbiAgICBcIlByZWNpb3VzIFNhdmlvciwgRGVhciBSZWRlZW1lclwiLFxuICAgIFwiSmVzdXMsIFNhdmlvciwgUGlsb3QgTWVcIixcbiAgICBcIk1hc3RlciwgdGhlIFRlbXBlc3QgSXMgUmFnaW5nXCIsXG4gICAgXCJHb2QgU3BlZWQgdGhlIFJpZ2h0XCIsXG4gICAgXCJMb3JkLCBBY2NlcHQgT3VyIFRydWUgRGV2b3Rpb25cIixcbiAgICBcIlRoZSBMb3JkIElzIE15IFNoZXBoZXJkXCIsXG4gICAgXCJUaGUgTG9yZCBNeSBQYXN0dXJlIFdpbGwgUHJlcGFyZVwiLFxuICAgIFwiQ2FzdCBUaHkgQnVyZGVuIHVwb24gdGhlIExvcmRcIixcbiAgICBcIlJvY2sgb2YgQWdlc1wiLFxuICAgIFwiU2F2aW9yLCBSZWRlZW1lciBvZiBNeSBTb3VsXCIsXG4gICAgXCJPdXIgU2F2aW9yJ3MgTG92ZVwiLFxuICAgIFwiQ29tZSB1bnRvIEhpbVwiLFxuICAgIFwiQ29tZSwgWWUgRGlzY29uc29sYXRlXCIsXG4gICAgXCJDb21lLCBGb2xsb3cgTWVcIixcbiAgICBcIkNvbWUgdW50byBKZXN1c1wiLFxuICAgIFwiWWUgU2ltcGxlIFNvdWxzIFdobyBTdHJheVwiLFxuICAgIFwiQ29tZSwgV2UgVGhhdCBMb3ZlIHRoZSBMb3JkXCIsXG4gICAgXCJMZWFuIG9uIE15IEFtcGxlIEFybVwiLFxuICAgIFwiSSdtIGEgUGlsZ3JpbSwgSSdtIGEgU3RyYW5nZXJcIixcbiAgICBcIlRob3VnaCBEZWVwZW5pbmcgVHJpYWxzXCIsXG4gICAgXCJPaCwgTWF5IE15IFNvdWwgQ29tbXVuZSB3aXRoIFRoZWVcIixcbiAgICBcIkJlIFN0aWxsLCBNeSBTb3VsXCIsXG4gICAgXCJIb3cgR2VudGxlIEdvZCdzIENvbW1hbmRzXCIsXG4gICAgXCJIb3cgTG9uZywgTyBMb3JkIE1vc3QgSG9seSBhbmQgVHJ1ZVwiLFxuICAgIFwiRG9lcyB0aGUgSm91cm5leSBTZWVtIExvbmc/XCIsXG4gICAgXCJXaGVuIEZhaXRoIEVuZHVyZXNcIixcbiAgICBcIldoZXJlIENhbiBJIFR1cm4gZm9yIFBlYWNlP1wiLFxuICAgIFwiQmUgVGhvdSBIdW1ibGVcIixcbiAgICBcIk1vcmUgSG9saW5lc3MgR2l2ZSBNZVwiLFxuICAgIFwiR29kIElzIGluIEhpcyBIb2x5IFRlbXBsZVwiLFxuICAgIFwiRmF0aGVyIGluIEhlYXZlblwiLFxuICAgIFwiSSBCZWxpZXZlIGluIENocmlzdFwiLFxuICAgIFwiTXkgUmVkZWVtZXIgTGl2ZXNcIixcbiAgICBcIkkgS25vdyBUaGF0IE15IFJlZGVlbWVyIExpdmVzXCIsXG4gICAgXCJUZXN0aW1vbnlcIixcbiAgICBcIkJsZXNzIE91ciBGYXN0LCBXZSBQcmF5XCIsXG4gICAgXCJJbiBGYXN0aW5nIFdlIEFwcHJvYWNoIFRoZWVcIixcbiAgICBcIkRpZCBZb3UgVGhpbmsgdG8gUHJheT9cIixcbiAgICBcIkplc3VzLCB0aGUgVmVyeSBUaG91Z2h0IG9mIFRoZWVcIixcbiAgICBcIlN3ZWV0IEhvdXIgb2YgUHJheWVyXCIsXG4gICAgXCJMZXQgdGhlIEhvbHkgU3Bpcml0IEd1aWRlXCIsXG4gICAgXCJTZWNyZXQgUHJheWVyXCIsXG4gICAgXCJQcmF5ZXIgSXMgdGhlIFNvdWwncyBTaW5jZXJlIERlc2lyZVwiLFxuICAgIFwiR2VudGx5IFJhaXNlIHRoZSBTYWNyZWQgU3RyYWluXCIsXG4gICAgXCJTd2VldCBJcyB0aGUgV29ya1wiLFxuICAgIFwiU2FiYmF0aCBEYXlcIixcbiAgICBcIkFzIHRoZSBEZXcgZnJvbSBIZWF2ZW4gRGlzdGlsbGluZ1wiLFxuICAgIFwiTyBUaG91IEtpbmQgYW5kIEdyYWNpb3VzIEZhdGhlclwiLFxuICAgIFwiV2UgTWVldCwgRGVhciBMb3JkXCIsXG4gICAgXCJHb2QgQmUgd2l0aCBZb3UgVGlsbCBXZSBNZWV0IEFnYWluXCIsXG4gICAgXCJMb3JkLCBXZSBBc2sgVGhlZSBFcmUgV2UgUGFydFwiLFxuICAgIFwiRmF0aGVyLCBUaGlzIEhvdXIgSGFzIEJlZW4gT25lIG9mIEpveVwiLFxuICAgIFwiV2UgSGF2ZSBQYXJ0YWtlbiBvZiBUaHkgTG92ZVwiLFxuICAgIFwiU2luZyBXZSBOb3cgYXQgUGFydGluZ1wiLFxuICAgIFwiVGh5IFNwaXJpdCwgTG9yZCwgSGFzIFN0aXJyZWQgT3VyIFNvdWxzXCIsXG4gICAgXCJCZWZvcmUgVGhlZSwgTG9yZCwgSSBCb3cgTXkgSGVhZFwiLFxuICAgIFwiTm93IHRoZSBEYXkgSXMgT3ZlclwiLFxuICAgIFwiU29mdGx5IE5vdyB0aGUgTGlnaHQgb2YgRGF5XCIsXG4gICAgXCJUaGUgTG9yZCBCZSB3aXRoIFVzXCIsXG4gICAgXCJMb3JkLCBXZSBDb21lIGJlZm9yZSBUaGVlIE5vd1wiLFxuICAgIFwiTG9yZCwgRGlzbWlzcyBVcyB3aXRoIFRoeSBCbGVzc2luZ1wiLFxuICAgIFwiR3JlYXQgR29kLCB0byBUaGVlIE15IEV2ZW5pbmcgU29uZ1wiLFxuICAgIFwiQWJpZGUgd2l0aCBNZTsgJ1RpcyBFdmVudGlkZVwiLFxuICAgIFwiQWJpZGUgd2l0aCBNZSFcIixcbiAgICBcIkNvbWUsIExldCBVcyBTaW5nIGFuIEV2ZW5pbmcgSHltblwiLFxuICAgIFwiQXMgdGhlIFNoYWRvd3MgRmFsbFwiLFxuICAgIFwiQXMgTm93IFdlIFRha2UgdGhlIFNhY3JhbWVudFwiLFxuICAgIFwiR29kLCBPdXIgRmF0aGVyLCBIZWFyIFVzIFByYXlcIixcbiAgICBcIldpdGggSHVtYmxlIEhlYXJ0XCIsXG4gICAgXCJJbiBIdW1pbGl0eSwgT3VyIFNhdmlvclwiLFxuICAgIFwiV2hpbGUgb2YgVGhlc2UgRW1ibGVtcyBXZSBQYXJ0YWtlXCIsXG4gICAgXCJXaGlsZSBvZiBUaGVzZSBFbWJsZW1zIFdlIFBhcnRha2VcIixcbiAgICBcIk8gR29kLCB0aGUgRXRlcm5hbCBGYXRoZXJcIixcbiAgICBcIidUaXMgU3dlZXQgdG8gU2luZyB0aGUgTWF0Y2hsZXNzIExvdmVcIixcbiAgICBcIidUaXMgU3dlZXQgVG8gU2luZyB0aGUgTWF0Y2hsZXNzIExvdmVcIixcbiAgICBcIk8gTG9yZCBvZiBIb3N0c1wiLFxuICAgIFwiQWdhaW4sIE91ciBEZWFyIFJlZGVlbWluZyBMb3JkXCIsXG4gICAgXCJGYXRoZXIgaW4gSGVhdmVuLCBXZSBEbyBCZWxpZXZlXCIsXG4gICAgXCJKZXN1cyBvZiBOYXphcmV0aCwgU2F2aW9yIGFuZCBLaW5nXCIsXG4gICAgXCJXZSdsbCBTaW5nIEFsbCBIYWlsIHRvIEplc3VzJyBOYW1lXCIsXG4gICAgXCJJbiBSZW1lbWJyYW5jZSBvZiBUaHkgU3VmZmVyaW5nXCIsXG4gICAgXCJVcG9uIHRoZSBDcm9zcyBvZiBDYWx2YXJ5XCIsXG4gICAgXCJSZXZlcmVudGx5IGFuZCBNZWVrbHkgTm93XCIsXG4gICAgXCJBZ2FpbiBXZSBNZWV0IGFyb3VuZCB0aGUgQm9hcmRcIixcbiAgICBcIkdvZCBMb3ZlZCBVcywgU28gSGUgU2VudCBIaXMgU29uXCIsXG4gICAgXCJUaHkgV2lsbCwgTyBMb3JkLCBCZSBEb25lXCIsXG4gICAgXCJPIFRob3UsIEJlZm9yZSB0aGUgV29ybGQgQmVnYW5cIixcbiAgICBcIkluIE1lbW9yeSBvZiB0aGUgQ3J1Y2lmaWVkXCIsXG4gICAgXCJCZWhvbGQgdGhlIEdyZWF0IFJlZGVlbWVyIERpZVwiLFxuICAgIFwiSGUgRGllZCEgVGhlIEdyZWF0IFJlZGVlbWVyIERpZWRcIixcbiAgICBcIkkgU3RhbmQgQWxsIEFtYXplZFwiLFxuICAgIFwiVGhlcmUgSXMgYSBHcmVlbiBIaWxsIEZhciBBd2F5XCIsXG4gICAgXCJIb3cgR3JlYXQgdGhlIFdpc2RvbSBhbmQgdGhlIExvdmVcIixcbiAgICBcIkplc3VzLCBPbmNlIG9mIEh1bWJsZSBCaXJ0aFwiLFxuICAgIFwiTyBTYXZpb3IsIFRob3UgV2hvIFdlYXJlc3QgYSBDcm93blwiLFxuICAgIFwiVGhhdCBFYXN0ZXIgTW9yblwiLFxuICAgIFwiSGUgSXMgUmlzZW4hXCIsXG4gICAgXCJDaHJpc3QgdGhlIExvcmQgSXMgUmlzZW4gVG9kYXlcIixcbiAgICBcIkpveSB0byB0aGUgV29ybGRcIixcbiAgICBcIk9oLCBDb21lLCBBbGwgWWUgRmFpdGhmdWxcIixcbiAgICBcIkFuZ2VscyBXZSBIYXZlIEhlYXJkIG9uIEhpZ2hcIixcbiAgICBcIlNpbGVudCBOaWdodFwiLFxuICAgIFwiT25jZSBpbiBSb3lhbCBEYXZpZCdzIENpdHlcIixcbiAgICBcIkF3YXkgaW4gYSBNYW5nZXJcIixcbiAgICBcIkl0IENhbWUgdXBvbiB0aGUgTWlkbmlnaHQgQ2xlYXJcIixcbiAgICBcIk8gTGl0dGxlIFRvd24gb2YgQmV0aGxlaGVtXCIsXG4gICAgXCJIYXJrISBUaGUgSGVyYWxkIEFuZ2VscyBTaW5nXCIsXG4gICAgXCJXaXRoIFdvbmRlcmluZyBBd2VcIixcbiAgICBcIldoaWxlIFNoZXBoZXJkcyBXYXRjaGVkIFRoZWlyIEZsb2Nrc1wiLFxuICAgIFwiRmFyLCBGYXIgQXdheSBvbiBKdWRlYSdzIFBsYWluc1wiLFxuICAgIFwiVGhlIEZpcnN0IE5vZWxcIixcbiAgICBcIkkgSGVhcmQgdGhlIEJlbGxzIG9uIENocmlzdG1hcyBEYXlcIixcbiAgICBcIlJpbmcgT3V0LCBXaWxkIEJlbGxzXCIsXG4gICAgXCJXZSBBcmUgU293aW5nXCIsXG4gICAgXCJDb21lLCBMZXQgVXMgQW5ld1wiLFxuICAgIFwiV2UgR2l2ZSBUaGVlIEJ1dCBUaGluZSBPd25cIixcbiAgICBcIkJlY2F1c2UgSSBIYXZlIEJlZW4gR2l2ZW4gTXVjaFwiLFxuICAgIFwiTG9yZCwgSSBXb3VsZCBGb2xsb3cgVGhlZVwiLFxuICAgIFwiRGVhciB0byB0aGUgSGVhcnQgb2YgdGhlIFNoZXBoZXJkXCIsXG4gICAgXCJIZWFyIFRob3UgT3VyIEh5bW4sIE8gTG9yZFwiLFxuICAgIFwiSGF2ZSBJIERvbmUgQW55IEdvb2Q/XCIsXG4gICAgXCJJIEhhdmUgV29yayBFbm91Z2ggdG8gRG9cIixcbiAgICBcIldlIEFyZSBNYXJjaGluZyBPbiB0byBHbG9yeVwiLFxuICAgIFwiSW1wcm92ZSB0aGUgU2hpbmluZyBNb21lbnRzXCIsXG4gICAgXCJUaGVyZSBJcyBTdW5zaGluZSBpbiBNeSBTb3VsIFRvZGF5XCIsXG4gICAgXCJZb3UgQ2FuIE1ha2UgdGhlIFBhdGh3YXkgQnJpZ2h0XCIsXG4gICAgXCJUb2RheSwgV2hpbGUgdGhlIFN1biBTaGluZXNcIixcbiAgICBcIlNjYXR0ZXIgU3Vuc2hpbmVcIixcbiAgICBcIkZhdGhlciwgQ2hlZXIgT3VyIFNvdWxzIFRvbmlnaHRcIixcbiAgICBcIkxldCBVcyBPZnQgU3BlYWsgS2luZCBXb3Jkc1wiLFxuICAgIFwiTmF5LCBTcGVhayBObyBJbGxcIixcbiAgICBcIkplc3VzLCBNaWdodHkgS2luZyBpbiBaaW9uXCIsXG4gICAgXCJTaG91bGQgWW91IEZlZWwgSW5jbGluZWQgdG8gQ2Vuc3VyZVwiLFxuICAgIFwiTG9yZCwgQWNjZXB0IGludG8gVGh5IEtpbmdkb21cIixcbiAgICBcIkRvIFdoYXQgSXMgUmlnaHRcIixcbiAgICBcIkJlaG9sZCBUaHkgU29ucyBhbmQgRGF1Z2h0ZXJzLCBMb3JkXCIsXG4gICAgXCJDaG9vc2UgdGhlIFJpZ2h0XCIsXG4gICAgXCJLbm93IFRoaXMsIFRoYXQgRXZlcnkgU291bCBJcyBGcmVlXCIsXG4gICAgXCJDb3VudCBZb3VyIEJsZXNzaW5nc1wiLFxuICAgIFwiUHJhaXNlIEdvZCwgZnJvbSBXaG9tIEFsbCBCbGVzc2luZ3MgRmxvd1wiLFxuICAgIFwiTGV0IFVzIEFsbCBQcmVzcyBPblwiLFxuICAgIFwiQ29tZSBBbG9uZywgQ29tZSBBbG9uZ1wiLFxuICAgIFwiVGhpcyBIb3VzZSBXZSBEZWRpY2F0ZSB0byBUaGVlXCIsXG4gICAgXCJPbndhcmQsIENocmlzdGlhbiBTb2xkaWVyc1wiLFxuICAgIFwiV2UgTG92ZSBUaHkgSG91c2UsIE8gR29kXCIsXG4gICAgXCJVcCwgQXdha2UsIFllIERlZmVuZGVycyBvZiBaaW9uXCIsXG4gICAgXCJDYWxsZWQgdG8gU2VydmVcIixcbiAgICBcIldlIEFyZSBBbGwgRW5saXN0ZWRcIixcbiAgICBcIkJlaG9sZCEgQSBSb3lhbCBBcm15XCIsXG4gICAgXCJQdXQgWW91ciBTaG91bGRlciB0byB0aGUgV2hlZWxcIixcbiAgICBcIkxpa2UgVGVuIFRob3VzYW5kIExlZ2lvbnMgTWFyY2hpbmdcIixcbiAgICBcIlRydWUgdG8gdGhlIEZhaXRoXCIsXG4gICAgXCJDYXJyeSBPblwiLFxuICAgIFwiQXMgWmlvbidzIFlvdXRoIGluIExhdHRlciBEYXlzXCIsXG4gICAgXCJSZWpvaWNlISBBIEdsb3Jpb3VzIFNvdW5kIElzIEhlYXJkXCIsXG4gICAgXCJPIFRob3UgUm9jayBvZiBPdXIgU2FsdmF0aW9uXCIsXG4gICAgXCJIb3BlIG9mIElzcmFlbFwiLFxuICAgIFwiV2hvJ3Mgb24gdGhlIExvcmQncyBTaWRlP1wiLFxuICAgIFwiVGh5IFNlcnZhbnRzIEFyZSBQcmVwYXJlZFwiLFxuICAgIFwiR28sIFllIE1lc3NlbmdlcnMgb2YgR2xvcnlcIixcbiAgICBcIkdvIEZvcnRoIHdpdGggRmFpdGhcIixcbiAgICBcIkhhcmssIEFsbCBZZSBOYXRpb25zIVwiLFxuICAgIFwiQXJpc2UsIE8gR29kLCBhbmQgU2hpbmVcIixcbiAgICBcIlRoZSBUaW1lIElzIEZhciBTcGVudFwiLFxuICAgIFwiSG93IFdvbmRyb3VzIGFuZCBHcmVhdFwiLFxuICAgIFwiQ29tZSwgQWxsIFdob3NlIFNvdWxzIEFyZSBMaWdodGVkXCIsXG4gICAgXCJKZWhvdmFoLCBMb3JkIG9mIEhlYXZlbiBhbmQgRWFydGhcIixcbiAgICBcIkknbGwgR28gV2hlcmUgWW91IFdhbnQgTWUgdG8gR29cIixcbiAgICBcIk9oLCBIb2x5IFdvcmRzIG9mIFRydXRoIGFuZCBMb3ZlXCIsXG4gICAgXCJPaCBTYXksIFdoYXQgSXMgVHJ1dGg/XCIsXG4gICAgXCJUcnV0aCBSZWZsZWN0cyB1cG9uIE91ciBTZW5zZXNcIixcbiAgICBcIlRoZSBJcm9uIFJvZFwiLFxuICAgIFwiTWVuIEFyZSBUaGF0IFRoZXkgTWlnaHQgSGF2ZSBKb3lcIixcbiAgICBcIkNvbWUgQXdheSB0byB0aGUgU3VuZGF5IFNjaG9vbFwiLFxuICAgIFwiQXMgSSBTZWFyY2ggdGhlIEhvbHkgU2NyaXB0dXJlc1wiLFxuICAgIFwiVGhhbmtzIGZvciB0aGUgU2FiYmF0aCBTY2hvb2xcIixcbiAgICBcIlRoeSBIb2x5IFdvcmRcIixcbiAgICBcIldlbGNvbWUsIFdlbGNvbWUsIFNhYmJhdGggTW9ybmluZ1wiLFxuICAgIFwiSGVscCBNZSBUZWFjaCB3aXRoIEluc3BpcmF0aW9uXCIsXG4gICAgXCJXZSBNZWV0IEFnYWluIGluIFNhYmJhdGggU2Nob29sXCIsXG4gICAgXCJUaGUgR2xvcmlvdXMgR29zcGVsIExpZ2h0IEhhcyBTaG9uZVwiLFxuICAgIFwiSWYgWW91IENvdWxkIEhpZSB0byBLb2xvYlwiLFxuICAgIFwiR29kIE1vdmVzIGluIGEgTXlzdGVyaW91cyBXYXlcIixcbiAgICBcIk9oLCBXaGF0IFNvbmdzIG9mIHRoZSBIZWFydFwiLFxuICAgIFwiUmlzZSwgWWUgU2FpbnRzLCBhbmQgVGVtcGxlcyBFbnRlclwiLFxuICAgIFwiSG93IEJlYXV0aWZ1bCBUaHkgVGVtcGxlcywgTG9yZFwiLFxuICAgIFwiSG9seSBUZW1wbGVzIG9uIE1vdW50IFppb25cIixcbiAgICBcIlJlam9pY2UsIFllIFNhaW50cyBvZiBMYXR0ZXIgRGF5c1wiLFxuICAgIFwiVHVybiBZb3VyIEhlYXJ0c1wiLFxuICAgIFwiTyBNeSBGYXRoZXJcIixcbiAgICBcIkVhY2ggTGlmZSBUaGF0IFRvdWNoZXMgT3VycyBmb3IgR29vZFwiLFxuICAgIFwiTG92ZSBhdCBIb21lXCIsXG4gICAgXCJPIExvdmUgVGhhdCBHbG9yaWZpZXMgdGhlIFNvblwiLFxuICAgIFwiT3VyIEZhdGhlciwgYnkgV2hvc2UgTmFtZVwiLFxuICAgIFwiRnJvbSBIb21lcyBvZiBTYWludHMgR2xhZCBTb25ncyBBcmlzZVwiLFxuICAgIFwiSG9tZSBDYW4gQmUgYSBIZWF2ZW4gb24gRWFydGhcIixcbiAgICBcIkNoaWxkcmVuIG9mIE91ciBIZWF2ZW5seSBGYXRoZXJcIixcbiAgICBcIkZhbWlsaWVzIENhbiBCZSBUb2dldGhlciBGb3JldmVyXCIsXG4gICAgXCJJIEFtIGEgQ2hpbGQgb2YgR29kXCIsXG4gICAgXCJJIEtub3cgTXkgRmF0aGVyIExpdmVzXCIsXG4gICAgXCJLZWVwIHRoZSBDb21tYW5kbWVudHNcIixcbiAgICBcIlRlYWNoIE1lIHRvIFdhbGsgaW4gdGhlIExpZ2h0XCIsXG4gICAgXCJUaGUgTGlnaHQgRGl2aW5lXCIsXG4gICAgXCJHb2QncyBEYWlseSBDYXJlXCIsXG4gICAgXCJJbiBPdXIgTG92ZWx5IERlc2VyZXRcIixcbiAgICBcIkxvdmUgT25lIEFub3RoZXJcIixcbiAgICBcIkFzIFNpc3RlcnMgaW4gWmlvbiAoV29tZW4pXCIsXG4gICAgXCJBIEtleSBXYXMgVHVybmVkIGluIExhdHRlciBEYXlzIChXb21lbilcIixcbiAgICBcIldlIE1lZXQgQWdhaW4gYXMgU2lzdGVycyAoV29tZW4pXCIsXG4gICAgXCJXZSBFdmVyIFByYXkgZm9yIFRoZWUgKFdvbWVuKVwiLFxuICAgIFwiR29kIElzIExvdmUgKFdvbWVuKVwiLFxuICAgIFwiSG93IEdlbnRsZSBHb2QncyBDb21tYW5kcyAoV29tZW4pXCIsXG4gICAgXCJKZXN1cywgdGhlIFZlcnkgVGhvdWdodCBvZiBUaGVlIChXb21lbilcIixcbiAgICBcIlRoZSBMb3JkIElzIE15IFNoZXBoZXJkIChXb21lbilcIixcbiAgICBcIlN3ZWV0IElzIHRoZSBXb3JrIChXb21lbilcIixcbiAgICBcIkxvdmUgYXQgSG9tZSAoV29tZW4pXCIsXG4gICAgXCJZZSBFbGRlcnMgb2YgSXNyYWVsIChNZW4pXCIsXG4gICAgXCJUaGUgUHJpZXN0aG9vZCBvZiBPdXIgTG9yZCAoTWVuKVwiLFxuICAgIFwiWWUgV2hvIEFyZSBDYWxsZWQgdG8gTGFib3IgKE1lbilcIixcbiAgICBcIkNvbWUsIEFsbCBZZSBTb25zIG9mIEdvZCAoTWVuKVwiLFxuICAgIFwiUmlzZSBVcCwgTyBNZW4gb2YgR29kIChNZW4ncyBDaG9pcilcIixcbiAgICBcIlJpc2UgVXAsIE8gTWVuIG9mIEdvZCAoTWVuKVwiLFxuICAgIFwiU2VlIHRoZSBNaWdodHkgUHJpZXN0aG9vZCBHYXRoZXJlZCAoTWVuJ3MgQ2hvaXIpXCIsXG4gICAgXCJDb21lLCBDb21lLCBZZSBTYWludHMgKE1lbidzIENob2lyKVwiLFxuICAgIFwiR28sIFllIE1lc3NlbmdlcnMgb2YgSGVhdmVuIChNZW4ncyBDaG9pcilcIixcbiAgICBcIkFuIEFuZ2VsIGZyb20gb24gSGlnaFwiLFxuICAgIFwiVGh5IFNlcnZhbnRzIEFyZSBQcmVwYXJlZCAoTWVuJ3MgQ2hvaXIpXCIsXG4gICAgXCJTZWUsIHRoZSBNaWdodHkgQW5nZWwgRmx5aW5nIChNZW4ncyBDaG9pcilcIixcbiAgICBcIk9oIFNheSwgV2hhdCBJcyBUcnV0aD8gKE1lbidzIENob2lyKVwiLFxuICAgIFwiQ29tZSwgTyBUaG91IEtpbmcgb2YgS2luZ3MgKE1lbidzIENob2lyKVwiLFxuICAgIFwiSGlnaCBvbiB0aGUgTW91bnRhaW4gVG9wIChNZW4ncyBDaG9pcilcIixcbiAgICBcIkkgTmVlZCBUaGVlIEV2ZXJ5IEhvdXIgKE1lbidzIENob2lyKVwiLFxuICAgIFwiQnJpZ2h0bHkgQmVhbXMgT3VyIEZhdGhlcidzIE1lcmN5IChNZW4ncyBDaG9pcilcIixcbiAgICBcIlNjaG9vbCBUaHkgRmVlbGluZ3MgKE1lbidzIENob2lyKVwiLFxuICAgIFwiTyBIb21lIEJlbG92ZWQgKE1lbidzIENob2lyKVwiLFxuICAgIFwiQW1lcmljYSB0aGUgQmVhdXRpZnVsXCIsXG4gICAgXCJNeSBDb3VudHJ5LCAnVGlzIG9mIFRoZWVcIixcbiAgICBcIlRoZSBTdGFyLVNwYW5nbGVkIEJhbm5lclwiLFxuICAgIFwiR29kIFNhdmUgdGhlIEtpbmdcIlxuICBdO1xuXG4gIHJldHVybiB7XG4gICAgZ2V0TGlzdDogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gaHltbnM7XG4gICAgfSxcbiAgICBnZXRIeW1uOiBmdW5jdGlvbihpZCkge1xuICAgICAgaWYoaWQgPiAzNDEgfHwgaWQgPCAxKVxuICAgICAgICByZXR1cm4gXCJJbnZhbGlkIEh5bW4gTnVtYmVyIChcIiArIGlkICsgXCIpXCI7XG4gICAgICByZXR1cm4gaHltbnNbaWQtMV07XG4gICAgfVxuICB9XG59KVxuXG4uZmFjdG9yeSgnJGxvY2Fsc3RvcmFnZScsIFsnJHdpbmRvdycsIGZ1bmN0aW9uKCR3aW5kb3cpIHtcbiAgcmV0dXJuIHtcbiAgICBzZXQ6IGZ1bmN0aW9uKGtleSwgdmFsdWUpIHtcbiAgICAgICR3aW5kb3cubG9jYWxTdG9yYWdlW2tleV0gPSB2YWx1ZTtcbiAgICB9LFxuICAgIGdldDogZnVuY3Rpb24oa2V5LCBkZWZhdWx0VmFsdWUpIHtcbiAgICAgIHJldHVybiAkd2luZG93LmxvY2FsU3RvcmFnZVtrZXldIHx8IGRlZmF1bHRWYWx1ZTtcbiAgICB9LFxuICAgIHNldE9iamVjdDogZnVuY3Rpb24oa2V5LCB2YWx1ZSkge1xuICAgICAgJHdpbmRvdy5sb2NhbFN0b3JhZ2Vba2V5XSA9IEpTT04uc3RyaW5naWZ5KHZhbHVlKTtcbiAgICB9LFxuICAgIGdldE9iamVjdDogZnVuY3Rpb24oa2V5KSB7XG4gICAgICByZXR1cm4gSlNPTi5wYXJzZSgkd2luZG93LmxvY2FsU3RvcmFnZVtrZXldIHx8ICd7fScpO1xuICAgIH1cbiAgfVxufV0pO1xuXG4vLyBGaWx0ZXJzIGZvciBDb3VuY2lsc0FwcFxuYW5ndWxhci5tb2R1bGUoJ2NvdW5jaWxzQXBwJylcblxuLmZpbHRlcignd2Vla0RhdGUnLCBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoaW5wdXQpIHtcbiAgICByZXR1cm4gbW9tZW50KCkuaXNvV2VlaygraW5wdXQpLmRheSgwKS5mb3JtYXQoJ01NTSBEJyk7XG4gIH07XG59KVxuXG4uZmlsdGVyKCdmdWxsTmFtZScsIGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIChpbnB1dCwgb3RoZXIpIHtcbiAgICBpZiAoaW5wdXQgJiYgaW5wdXQuZm5hbWUgJiYgaW5wdXQubG5hbWUpIHtcbiAgICAgIHJldHVybiBpbnB1dC5mbmFtZSArICcgJyArIGlucHV0LmxuYW1lO1xuICAgIH1cbiAgICByZXR1cm4gb3RoZXI7XG4gIH0gXG59KVxuXG4vLyBEaXJlY3RpdmVzIGZvciBDb3VuY2lsc0FwcFxuYW5ndWxhci5tb2R1bGUoJ2NvdW5jaWxzQXBwJylcblxuLmRpcmVjdGl2ZShcImF1dG9SZXNpemVcIiwgZnVuY3Rpb24oKSB7XG4gIHJldHVybiBmdW5jdGlvbihzY29wZSwgZWxlbWVudCkge1xuICAgIGF1dG9zaXplKGVsZW1lbnQpO1xuICB9XG59KVxuXG4uZGlyZWN0aXZlKFwiY3VzdG9tUGxhY2Vob2xkZXJcIiwgZnVuY3Rpb24oKSB7XG4gIHJldHVybiBmdW5jdGlvbihzY29wZSwgZWxlbWVudCkge1xuICAgIHZhciBkZWZhdWx0VmFsdWUgPSBlbGVtZW50WzBdLmdldEF0dHJpYnV0ZSgnY3VzdG9tLXBsYWNlaG9sZGVyJylcbiAgICBlbGVtZW50WzBdLmN1c3RvbVBsYWNlaG9sZGVyKCBkZWZhdWx0VmFsdWUgKTtcbiAgfVxufSlcblxuXG4vLyBUaGlzIGFsbG93cyB5b3UgdG8gZGlzYWJsZSBhIHVpLXNyZWYgY29uZGl0aW9uYWxseSBieSBhZGRpbmcgYW4gYXR0cmlidXRlXG4vLyBvbiB0aGUgZWxlbWVudCBlLmcuIHVpLXNyZWYtZGlzYWJsZT0nIXVzZXIubG9nZ2VkSW4oKSdcbi5kaXJlY3RpdmUoJ3VpU3JlZkRpc2FibGUnLCBbJyRwYXJzZScsICckcm9vdFNjb3BlJyxcbiAgZnVuY3Rpb24oJHBhcnNlLCAkcm9vdFNjb3BlKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIC8vIHRoaXMgZW5zdXJlIHVpU3JlZkRpc2FibGUgYmUgY29tcGlsZWQgYmVmb3JlIG5nQ2xpY2tcbiAgICAgIHByaW9yaXR5OiAxMDAsXG4gICAgICByZXN0cmljdDogJ0EnLFxuICAgICAgY29tcGlsZTogZnVuY3Rpb24oJGVsZW1lbnQsIGF0dHIpIHtcbiAgICAgICAgdmFyIGZuID0gJHBhcnNlKGF0dHIudWlTcmVmRGlzYWJsZSk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgcHJlOiBmdW5jdGlvbiBsaW5rKHNjb3BlLCBlbGVtZW50KSB7XG4gICAgICAgICAgICB2YXIgZXZlbnROYW1lID0gJ2NsaWNrJztcbiAgICAgICAgICAgIGVsZW1lbnQub24oZXZlbnROYW1lLCBmdW5jdGlvbihldmVudCkge1xuICAgICAgICAgICAgICB2YXIgY2FsbGJhY2sgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICBpZiAoZm4oc2NvcGUsIHskZXZlbnQ6IGV2ZW50fSkpIHtcbiAgICAgICAgICAgICAgICAgIC8vIHByZXZlbnRzIG5nLWNsaWNrIHRvIGJlIGV4ZWN1dGVkXG4gICAgICAgICAgICAgICAgICBldmVudC5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICAgICAgICAgIC8vIHByZXZlbnRzIGhyZWZcbiAgICAgICAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICBpZiAoJHJvb3RTY29wZS4kJHBoYXNlKSB7XG4gICAgICAgICAgICAgICAgc2NvcGUuJGV2YWxBc3luYyhjYWxsYmFjayk7XG4gICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgc2NvcGUuJGFwcGx5KGNhbGxiYWNrKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBwb3N0OiBmdW5jdGlvbigpIHt9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbl0pO1xuXG4vLyBDb25zdGFudHMgZm9yIENvdW5jaWxzQXBwXG5hbmd1bGFyLm1vZHVsZSgnY291bmNpbHNBcHAnKVxuXG4uY29uc3RhbnQoJ01PREFMUycsIHtcbiAgY29ubmVjdGlvbkVycm9yOiBcInZpZXdzL21vZGFscy9ub19pbnRlcm5ldC5odG1sXCIsXG4gIHBlcm1pc3Npb25FcnJvcjogXCJ2aWV3cy9tb2RhbHMvbm9fcGVybWlzc2lvbi5odG1sXCIsXG4gIGZlZWRiYWNrOiBcInZpZXdzL21vZGFscy9mZWVkYmFjay5odG1sXCIsXG4gIG1lbWJlcnM6IFwidmlld3MvbW9kYWxzL21lbWJlcnMuaHRtbFwiLFxuICBjcmVhdGVEaXNjdXNzaW9uOiAndmlld3MvY291bmNpbC9kaXNjdXNzaW9uX25ldy5odG1sJyxcbiAgY3JlYXRlQXNzaWdubWVudDogJ3ZpZXdzL2NvdW5jaWwvYXNzaWdubWVudF9uZXcuaHRtbCdcbn0pXG5cbi5jb25zdGFudCgnQUdFTkRBUycsIHtcbiAgXCJzdGFrZVwiIDoge1xuICAgIFwiMFwiIDogXCJQcmVzaWRlbmN5XCIsXG4gICAgXCIxXCIgOiBcIkhpZ2ggQ291bmNpbFwiLFxuICAgIFwiMlwiIDogXCJCaXNob3BzXCIsXG4gICAgXCIzXCIgOiBcIlN0YWtlIENvdW5jaWxcIixcbiAgICBcIjRcIiA6IFwiQmlzaG9wcyBXZWxmYXJlXCJcbiAgfSxcbiAgXCJ3YXJkXCIgOiB7XG4gICAgXCI1XCIgOiBcIkJpc2hvcHJpY1wiLFxuICAgIFwiNlwiIDogXCJQRUNcIixcbiAgICBcIjdcIiA6IFwiV2FyZCBDb3VuY2lsXCJcbiAgfVxufSlcblxuLmNvbnN0YW50KCdDT1VOQ0lMUycsIHtcbiAgXCJzdGFrZVwiIDoge1xuICAgIFwiMFwiIDogXCJTdGFrZSBQcmVzaWRlbmN5XCIsXG4gICAgXCIxXCIgOiBcIkhpZ2ggQ291bmNpbFwiLFxuICAgIFwiMlwiIDogXCJQYXRyaWFyY2hcIixcbiAgICBcIjNcIiA6IFwiQmlzaG9wc1wiLFxuICAgIFwiNFwiIDogXCJSZWxpZWYgU29jaWV0eVwiLFxuICAgIFwiNVwiIDogXCJZb3VuZyBNZW5cIixcbiAgICBcIjZcIiA6IFwiWW91bmcgV29tZW5cIixcbiAgICBcIjdcIiA6IFwiU3VuZGF5IFNjaG9vbFwiLFxuICAgIFwiOFwiIDogXCJQcmltYXJ5XCIsXG4gICAgXCI5XCIgOiBcIk1pc3Npb25hcnlcIixcbiAgICBcIjEwXCIgOiBcIkF1ZGl0aW5nXCJcbiAgfSxcbiAgXCJ3YXJkXCIgOiB7XG4gICAgXCIxMVwiIDogXCJCaXNob3ByaWNcIixcbiAgICBcIjEyXCIgOiBcIldhcmQgQ291bmNpbFwiLFxuICAgIFwiMTNcIiA6IFwiU2FjcmFtZW50XCIsXG4gICAgXCIxNFwiIDogXCJJbnRlcnZpZXdzXCIsXG4gICAgXCIxNVwiIDogXCJQRUNcIixcbiAgICBcIjE2XCIgOiBcIkhpZ2ggUHJpZXN0XCIsXG4gICAgXCIxN1wiIDogXCJFbGRlcnNcIixcbiAgICBcIjE4XCIgOiBcIlJlbGllZiBTb2NpZXR5XCIsXG4gICAgXCIxOVwiIDogXCJZb3VuZyBNZW5cIixcbiAgICBcIjIwXCIgOiBcIllvdW5nIFdvbWVuXCIsXG4gICAgXCIyMVwiIDogXCJTdW5kYXkgU2Nob29sXCIsXG4gICAgXCIyMlwiIDogXCJQcmltYXJ5XCJcbiAgfVxufSlcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
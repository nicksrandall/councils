angular.module("councilsApp",["ngAnimate","monospaced.elastic","firebase","ionic","ionic.service.core","ionic.service.deploy","ionic.service.analytics","angularMoment","ionic.service.push","ngCordova","ionic-datepicker"]).config(["$cordovaInAppBrowserProvider",function(e){var o={location:"no",clearcache:"no",toolbar:"yes"};e.setDefaultOptions(o)}]).run(["$ionicPlatform","$rootScope","$state","$cordovaStatusbar","$timeout","Auth","User","$ionicUser","$ionicPush","$ionicDeploy","$ionicAnalytics",function(e,o,n,t,i,r,a,s,l,c,u){function h(){setTimeout(function(){l.register({canShowAlert:!0,canSetBadge:!0,canPlaySound:!0,canRunActionsOnWake:!0,onNotification:function(e){return console.log(e),!0}})},1e3)}e.ready(function(){ionic.Platform.device();u.register(),window.cordova&&window.cordova.plugins.Keyboard&&cordova.plugins.Keyboard.hideKeyboardAccessoryBar(!0),function(){store.verbosity=store.INFO,store.register({id:"subscription1",alias:"subscription1",type:store.PAID_SUBSCRIPTION}),store.ready(function(){console.log("\\o/ STORE READY \\o/")}),store.refresh()}(),r.$onAuth(function(e){e?(console.log("Logged in as:",e.uid),a.set(e.uid).then(function(e){var o=s.get();o.user_id||(o.user_id=e.$id),angular.extend(o,{fname:e.fname,lname:e.lname,homeUnitNbr:e.homeUnitNbr,individualId:e.individualId,email:e.email}),s.identify(o).then(function(){window.plugins&&window.plugins.pushNotification&&h()})})):console.log("Logged out")})}),o.$on("$cordovaPush:tokenReceived",function(e,o){a.get().then(function(e){return e.$ref().child("tokens").child(ionic.Platform.device().uuid).set(o)})}),o.$on("$stateChangeError",function(e,o,t,i,r,a){"AUTH_REQUIRED"===a&&n.go("simple.welcome")})}]),Array.prototype.contains=function(e){return-1!=this.indexOf(e)},Array.prototype.pushUnique=function(e){this.contains(e)||this.push(e)},Array.prototype.remove=function(e){if(this.contains(e)){var o=this.indexOf(e);this.splice(o,1)}},Date.prototype.addDays=function(e){var o=new Date(this.valueOf());return o.setDate(o.getDate()+e),o},Date.prototype.getMonthString=function(){var e=["January","February","March","April","May","June","July","August","September","October","November","December"];return e[this.getMonth()]},Date.prototype.getOrdinalSuffix=function(){switch(this.getDate()){case 1:case 21:case 31:suffix="st";break;case 2:case 22:suffix="nd";break;case 3:case 23:suffix="rd";break;default:suffix="th"}return suffix},function(){HTMLSelectElement.prototype.customPlaceholder=function(e){var o=document.createElement("option");o.value="",o.innerText=e,o.setAttribute("disabled",!0),o.setAttribute("selected",!0),o.style.display="none";var n=this.children[0];console.log(n),console.log(this.children),this.insertBefore(o,n)}}(),function(){HTMLTextAreaElement.prototype.autoResize=function(){var e=document.createElement("div"),o=["padding","padding-top","padding-bottom","padding-left","padding-right","font-family","font-size","line-height","font","width","min-height","word-wrap","white-space"],n=window.getComputedStyle(this,null);for(var t in o){var i=n.getPropertyValue([o[t]]);e.style[o[t]]=i}e.style.display="block",e.style.position="absolute",e.style.zIndex="-10",e.style.top="0",e.style.color="transparent",this.parentNode.appendChild(e);var r=function(){e.innerText=this.value;var o=parseInt(window.getComputedStyle(e,null).getPropertyValue("height"));o+=parseInt(e.style.lineHeight),this.style.height=o+"px"};this.addEventListener("keyup",r),r.apply(this)}}(),angular.module("councilsApp").config(["$stateProvider","$urlRouterProvider","$ionicConfigProvider",function(e,o,n){n.views.maxCache(0),o.otherwise("/menu/home");var t="views/";e.state("menu.home",{cache:!1,url:"/home",views:{menuContent:{templateUrl:t+"home.html",controller:"HomeController",resolve:{currentAuth:["Auth",function(e){return e.$requireAuth()}]}}}}),e.state("simple",{"abstract":!0,url:"/simple",views:{mainContent:{templateUrl:t+"/layouts/no_sidebar.html"}}}),e.state("menu",{"abstract":!0,url:"/menu",views:{mainContent:{templateUrl:t+"/layouts/no_sidebar.html"}}}),e.state("simple.welcome",{url:"/welcome",views:{menuContent:{templateUrl:t+"welcome.html"}}}),e.state("simple.onboarding",{url:"/onboarding",views:{menuContent:{templateUrl:t+"onboarding.html"}}}),e.state("simple.setup",{url:"/setup",views:{menuContent:{templateUrl:t+"setup.html",controller:"SetupController",resolve:{currentAuth:["Auth",function(e){return e.$waitForAuth()}]}}}}),e.state("simple.create",{url:"/create",views:{menuContent:{templateUrl:t+"create.html",controller:"CreateController",resolve:{currentAuth:["Auth",function(e){return e.$waitForAuth()}]}}}}),e.state("simple.login",{url:"/login",views:{menuContent:{templateUrl:t+"login.html",controller:"LoginController",resolve:{currentAuth:["Auth",function(e){return e.$waitForAuth()}]}}}}),e.state("menu.directory",{url:"/directory",views:{menuContent:{templateUrl:t+"/directory.html",controller:"DirectoryController",resolve:{currentAuth:["Auth",function(e){return e.$waitForAuth(e.$requireAuth)}]}}}}),e.state("menu.council",{"abstract":!0,url:"/council",params:{council:null},views:{menuContent:{templateUrl:t+"/council/tabbed_layout.html",controller:"CouncilController",resolve:{currentAuth:["Auth",function(e){e.$waitForAuth(e.$requireAuth)}]}}}}),e.state("menu.council.discussion",{url:"/discussion",params:{currentCouncilTab:"discussions"},views:{tab:{templateUrl:t+"/council/discussion_list.html",controller:"CouncilDiscussionController"}}}),e.state("menu.council.assignment",{url:"/assignment",params:{currentCouncilTab:"assignments"},views:{tab:{templateUrl:t+"/council/assignment_list.html",controller:"CouncilAssignmentController"}}}),e.state("menu.council.agenda",{url:"/agenda",params:{currentCouncilTab:"agendas",week:{value:moment().isoWeek()}},views:{tab:{templateUrl:t+"/council/agenda.html",controller:"AgendaDetailController"}}}),e.state("menu.council.discussion.new",{url:"/new",views:{modal:{templateUrl:t+"/council/discussion_new.html"}}}),e.state("menu.council.assignment.new",{url:"/new",views:{modal:{templateUrl:t+"/council/assignment_new.html"}}}),e.state("menu.council.edit",{url:"/edit",views:{councilContent:{templateUrl:t+"/council/edit.html"}}}),e.state("menu.comments",{url:"/comments/:topic",params:{title:null},views:{menuContent:{templateUrl:t+"comments.html",controller:"CommentController",resolve:{currentAuth:["Auth",function(e){return e.$requireAuth()}]}}}})}]),angular.module("councilsApp").controller("ApplicationController",["MODALS","$ionicHistory","$scope","$ionicModal","$ionicSideMenuDelegate","Auth","$state",function(e,o,n,t,i,r,a){n.template=null,n.slider=function(e){n.template=e,angular.element(".login-slider").toggleClass("open"),angular.element(".make-small").toggleClass("small")};var s=n.$on("template:change",function(e,o){n.template=o});n.$on("$destroy",s),n.logout=function(){return r.$unauth(),a.go("simple.welcome")},n.back=function(){console.log(o.viewHistory()),o.goBack(-1)}}]).controller("LoginController",["$scope","Auth","$state","$localstorage",function(e,o,n,t){e.credentials={email:t.get("email")},e.login=function(){o.$authWithPassword({email:e.credentials.email,password:e.credentials.password}).then(function(o){t.set("email",e.credentials.email),n.go("menu.home")})["catch"](function(e){console.error("Authentication failed:",e)})}}]).controller("SetupController",["$scope","$http","me","$state","$cordovaInAppBrowser",function(e,o,n,t,i){e.credentials={},e.loading=!1,e.ldsLogin=function(){e.loading=!0,o.post("https://councils-app.herokuapp.com/api/me",e.credentials).then(function(o){n.set(o.data),e.$emit("template:change","create"),e.loading=!1})},e.createLDSAccount=function(){return console.log("opening browser!"),i.open("https://ldsaccount.lds.org/register","_blank")}}]).controller("CreateController",["$scope","me","Auth","$firebaseObject","$state","$ionicPopup",function(e,o,n,t,i,r){var a=new Firebase("https://councilsapp.firebaseio.com/users"),s=t(a);e.me=o.get(),e.createAccount=function(){var a,l;n.$createUser({email:e.me.email,password:e.me.pass}).then(function(e){return l=e.uid,s[l]=a=o.get().homeUnitNbr,s.$save()}).then(function(){var e=new Firebase("https://councilsapp.firebaseio.com/"+a+"/users"),n=t(e);return n[l]=o.get(),n[l].pass=null,n.$save()}).then(function(){return n.$authWithPassword({email:e.me.email,password:e.me.pass})}).then(function(e){i.go("menu.home")})["catch"](function(o){var n=r.alert({title:"Error",template:o});n.then(function(o){e.me.pass=""})})}}]).controller("HomeController",["$scope","Auth","$state","User","currentAuth","$firebaseObject","$firebaseArray","$cordovaImagePicker","$ionicActionSheet","$cordovaCamera","$cordovaFileTransfer",function(e,o,n,t,i,r,a,s,l,c,u){function h(e){u.upload("https://councils-app.herokuapp.com/api/upload/3744678537",e,{},!0).then(function(e){console.log("result",e)},function(e){console.warn(e)},function(e){console.log("progress",e)})}e.myAssignments=[],e.delegatedAssignments=[],e.discussions=[],e.logout=function(){o.$unauth(),n.go("simple.welcome")},e.update=function(e){e._completed?e._cancel=setTimeout(function(){e.completed=!0,e.$save()},15e3):clearTimeout(e._cancel)},e.imagePicker=function(){function e(){var e={maximumImagesCount:1,width:250,height:250,quality:80};s.getPictures(e).then(function(e){for(var o=0;o<e.length;o++)console.log("Image URI: "+e[o]),h(e[o])},function(e){console.warn(e)})}function o(){var e={destinationType:Camera.DestinationType.FILE_URI,sourceType:Camera.PictureSourceType.CAMERA,encodingType:Camera.EncodingType.JPEG,allowEdit:!0,targetWidth:250,targetHeight:250,saveToPhotoAlbum:!0};c.getPicture(e).then(function(e){console.log(e),h(e)},function(e){console.warn(e)})}l.show({buttons:[{text:"Photo Library"},{text:"Take Photo"}],titleText:"Pick a new profile picture",cancelText:"Cancel",cancel:function(){},buttonClicked:function(n){return console.log(n),0===n?e():o(),!0}})},e.councils=["Bishopric","Ward Council"],t.set(i.uid).then(function(o){return o.$bindTo(e,"user")}).then(function(){var o=new Firebase("https://councilsapp.firebaseio.com/"+e.user.homeUnitNbr+"/assignments"),n=new Firebase("https://councilsapp.firebaseio.com/"+e.user.homeUnitNbr+"/discussions");o.orderByChild("assignedTo").equalTo(e.user.$id).on("child_added",function(o){e.myAssignments.push(r(o.ref()))}),o.orderByChild("assignedBy").equalTo(e.user.$id).on("child_added",function(o){e.delegatedAssignments.push(r(o.ref()))}),_.forEach(e.user.discussions,function(o){var t=n.child(o);e.discussions.push(r(t))})})}]).controller("AgendaDetailController",["$scope","$firebaseObject","$firebaseArray","$stateParams","$timeout","AGENDAS","$state","MembersModal",function(e,o,n,t,i,r,a,s){if(e.council=t.council||"Bishopric",e.week=parseInt(t.week),e.currentWeek=moment().isoWeek(),e.council){var l=new Firebase("https://councilsapp.firebaseio.com/538469/agendas").child(e.council);e.availableAgendas=n(l),e.openMembersModal=function(o,n){s.openModal(n,e.data[o]).then(function(t){e.data[o]=1===n?_.pick(t[0],["fname","lname"]):t.map(function(e){return _.pick(e,["fname","lname"])})})};var l=new Firebase("https://councilsapp.firebaseio.com/538469/agendas").child(e.council).child(e.week),c=o(l);c.$bindTo(e,"data").then(function(){i(function(){angular.element("[auto-resize]").each(function(){autosize(this)})})})}else a.go("menu.agenda.list")}]).controller("AgendaController",["$scope","HymnService","AGENDAS","MemberService",function(e,o,n,t){e.members=t.getMembers(),e.hymns=o.getList(),e.agendas=n,e.agendaAccess={5:!0,6:!0,7:!0}}]).controller("CouncilDiscussionController",["$scope","$stateParams","$state","$firebaseArray","User","MembersModal","$ionicModal","MODALS","Notify",function(e,o,n,t,i,r,a,s,l){if(e.council=o.council||"Bishopric",e.council){a.fromTemplateUrl(s.createDiscussion,{scope:e,animation:"slide-in-up"}).then(function(o){e.modal=o}),e.openModal=function(){console.log("open modal"),e.modal.show()},e.closeModal=function(){e.modal.hide()},e.$on("$destroy",function(){e.modal.remove()}),e.openMembersModal=function(o,n){r.openModal(n,e.data[o]).then(function(t){e.data[o]=1===n?_.pick(t[0],["fname","lname","profileImage","$id","tokens"]):t.map(function(e){return _.pick(e,["fname","lname","profileImage","$id","tokens"])})})};var c=i.get().then(function(o){var n=new Firebase("https://councilsapp.firebaseio.com/").child(o.homeUnitNbr).child("discussions").orderByChild("council").equalTo(e.council);return e.discussions=t(n),o});e.data={content:""},e.createDiscussion=function(){var o,n,t=[];c.then(function(t){return o=t,n={council:e.council,content:e.data.content,createdBy:t.$id,createdDate:(new Date).getTime(),userAvatar:t.profileImage,userName:t.fname+" "+t.lname},e.discussions.$add(n)}).then(function(n){var t=n.key(),i=new Firebase("https://councilsapp.firebaseio.com/"+o.homeUnitNbr+"/users/");i.child(o.$id+"/discussions").push(t),e.modal.hide()}).then(function(){return l.send(o.fname+" "+o.lname+" just added you to a discussion for "+e.council,t)})}}else n.go("menu.council.list")}]).controller("CouncilAssignmentController",["$scope","$stateParams","$state","MembersModal","$firebaseArray","User","$ionicModal","MODALS","Notify",function(e,o,n,t,i,r,a,s,l){if(e.council=o.council||"Bishopric",e.update=function(o){return e.assignments.$save(o.$id)},e.council){a.fromTemplateUrl(s.createAssignment,{scope:e,animation:"slide-in-up"}).then(function(o){e.modal=o}),e.openModal=function(){e.modal.show()},e.closeModal=function(){e.modal.hide()},e.$on("$destroy",function(){e.modal.remove()}),e.datePickerCallback=angular.noop,e.openMembersModal=function(o,n){t.openModal(n,e.data[o]).then(function(t){e.data[o]=1===n?_.pick(t[0],["fname","lname","$id","tokens"]):t.map(function(e){return _.pick(e,["fname","lname","$id","tokens"])})})},e.data={dueDate:new Date,assignmentAssignee:null,content:""};var c=r.get().then(function(o){var n=new Firebase("https://councilsapp.firebaseio.com/").child(o.homeUnitNbr).child("assignments").orderByChild("council").equalTo(e.council);return e.assignments=i(n),o});e.createAssignment=function(){var o,n,t=[];c.then(function(t){return o=t,n={assignedBy:o.$id,assignedByName:t.fname+" "+t.lname,assignedTo:e.data.assignmentAssignee.$id,assignedToName:e.data.assignmentAssignee.fname+" "+e.data.assignmentAssignee.lname,council:e.council,dueDate:e.data.dueDate.getTime(),content:e.data.content,completed:!1},e.assignments.$add(n)}).then(function(n){var i=n.key(),r=new Firebase("https://councilsapp.firebaseio.com/"+o.homeUnitNbr+"/users/");r.child(e.data.assignmentAssignee.$id+"/assignments").push({council:e.council,key:i}),e.data.assignmentAssignee.tokens&&_.forEach(e.data.assignmentAssignee.tokens,function(e){t.push(e.token)})}).then(function(){e.modal.hide()}).then(function(){return l.send(o.fname+" "+o.lname+" just added you to a task for "+e.council,t)})}}else n.go("menu.council.list")}]).controller("CouncilController",["MemberService","COUNCILS","$scope","$stateParams","$state",function(e,o,n,t,i){n.active=i.current.name,n.council=t.council||"Bishopric",e.getMembers().then(function(e){n.members=e}),n.councilList=o,n.councilAccess={11:{assignmentCount:3,commentCount:4},12:{assignmentCount:0,commentCount:2}}}]).controller("CommentController",["$scope","$firebaseArray","User","$ionicScrollDelegate","$firebaseObject","$stateParams","$timeout","$state",function(e,o,n,t,i,r,a,s){var l=n.get(),c=t.$getByHandle("thread");e.input={},e.title=r.title,r.topic||s.go("menu.home"),l.then(function(n){var t=new Firebase("https://councilsapp.firebaseio.com").child(n.homeUnitNbr+"/comments").child(r.topic).orderByChild("date");e.comments=o(t)}),e.$watch("comments.length",function(e,o){e!==o&&(console.log("scoll to bottom!"),a(function(){c.resize(),c.scrollBottom(!0)},100))}),e.sendComment=function(o){var n;return l.then(function(o){n=o;var t={author:o.fname+" "+o.lname,profileImage:o.profileImage,message:e.input.message,date:(new Date).getTime()};return e.comments.$add(t)}).then(function(){new Firebase("https://councilsapp.firebaseio.com").child(n.homeUnitNbr+"/commentCount").child(r.topic).transaction(function(e){return console.log("current",e),(e||0)+1});e.input.message=null})}}]),angular.module("councilsApp").factory("Notify",["$http",function(e){return{send:function(o,n){return e.post("https://councils-app.herokuapp.com/api/push",{message:o,tokens:n})}}}]).factory("User",["$firebaseObject","$q",function(e,o){var n={},t=null,i=o.defer();return{get:function(){return i.promise.then(function(){return n})},set:function(o){var r=new Firebase("https://councilsapp.firebaseio.com/users/"+o);return e(r).$loaded().then(function(n){t=n.$value,angular.module("councilsApp").value("UNITNUMBER",t),n.$destroy();var i=new Firebase("https://councilsapp.firebaseio.com/"+t+"/users/"+o);return e(i).$loaded()}).then(function(e){return n=e,i.resolve(n),n})},getUnit:function(){return t}}}]).factory("Auth",["$firebaseAuth",function(e){var o=new Firebase("https://councilsapp.firebaseio.com");return e(o)}]).factory("me",function(){var e={};return{getUnit:function(){return e.homeUnitNbr},get:function(){return e},set:function(o){e=o,e.fname=o.fname||o.preferredName.split(", ")[1],e.lname=o.lname||o.surname,e.email=o.email}}}).factory("MemberService",["$firebaseArray","User",function(e,o){return{getMembers:function(){return o.get().then(function(e){return e.homeUnitNbr}).then(function(o){{var n=new Firebase("https://councilsapp.firebaseio.com/"+o+"/users");e(n)}return e(n).$loaded()})}}}]).factory("MembersModal",["MemberService","$q","MODALS","$ionicModal","$rootScope",function(e,o,n,t,i){function r(e){$modalScope.search.Results=e.length?u.filter(function(e){var o=e.fname+" "+e.lname;return o.toLowerCase().indexOf($modalScope.search.Term.toLowerCase())>=0}):u}$modalScope=i.$new();var a,s="members",l=null;$modalScope.search={},$modalScope.selection={},$modalScope.search.Term="",$modalScope.search.Results={},$modalScope.selection.users=[];var c=function(e,i){var r=o.defer();return i&&($modalScope.selection.users=1===e?[i]:i),l=e||Number.MAX_VALUE,t.fromTemplateUrl(n[s],{animation:"slide-in-up",scope:$modalScope}).then(function(e){$modalScope.search.Term="",a=e,$modalScope.closeModal=function(){r.resolve($modalScope.selection.users.slice()),$modalScope.selection.users.splice(0,$modalScope.selection.users.length),a.remove()},a.show()}),r.promise};$modalScope.selection.toggle=function(e){$modalScope.selection.users.contains(e)?$modalScope.selection.users.remove(e):$modalScope.selection.users.length<=1&&1===l?($modalScope.selection.users.splice(0,1),$modalScope.selection.users.pushUnique(e),$modalScope.closeModal()):$modalScope.selection.users.length<l&&$modalScope.selection.users.pushUnique(e)},$modalScope.$watch("search.Term",r);var u=[];return e.getMembers().then(function(e){$modalScope.search.Results=u=e}),{openModal:c}}]).factory("CouncilsService",["$scope",function(){return function(){}}]).factory("HymnService",function(){var e=["The Morning Breaks","The Spirit of God","Now Let Us Rejoice","Truth Eternal","High on the Mountain Top","Redeemer of Israel","Israel, Israel, God Is Calling","Awake and Arise","Come, Rejoice","Come, Sing to the Lord","What Was Witnessed in the Heavens?","'Twas Witnessed in the Morning Sky","An Angel from on High","Sweet Is the Peace the Gospel Brings","I Saw a Mighty Angel Fly","What Glorious Scenes Mine Eyes Behold","Awake, Ye Saints of God, Awake!","The Voice of God Again Is Heard","We Thank Thee, O God, for a Prophet","God of Power, God of Right","Come, Listen to a Prophet's Voice","We Listen to a Prophet's Voice","We Ever Pray for Thee","God Bless Our Prophet Dear","Now We'll Sing with One Accord","Joseph Smith's First Prayer","Praise to the Man","Saints, Behold How Great Jehovah","A Poor Wayfaring Man of Grief","Come, Come, Ye Saints","O God, Our Help in Ages Past","The Happy Day at Last Has Come","Our Mountain Home So Dear","O Ye Mountains High","For the Strength of the Hills","They, the Builders of the Nation","The Wintry Day, Descending to Its Close","Come, All Ye Saints of Zion","O Saints of Zion","Arise, O Glorious Zion","Let Zion in Her Beauty Rise","Hail to the Brightness of Zion's Glad Morning!","Zion Stands with Hills Surrounded","Beautiful Zion, Built Above","Lead Me into Life Eternal","Glorious Things of Thee Are Spoken","We Will Sing of Zion","Glorious Things Are Sung of Zion","Adam-ondi-Ahman","Come, Thou Glorious Day of Promise","Sons of Michael, He Approaches","The Day Dawn Is Breaking","Let Earth's Inhabitants Rejoice","Behold, the Mountain of the Lord","Lo, the Mighty God Appearing!","Softly Beams the Sacred Dawning","We're Not Ashamed to Own Our Lord","Come, Ye Children of the Lord","Come, O Thou King of Kings","Battle Hymn of the Republic","Raise Your Voices to the Lord","All Creatures of Our God and King","Great King of Heaven","On This Day of Joy and Gladness","Come, All Ye Saints Who Dwell on Earth","Rejoice, the Lord Is King!","Glory to God on High","A Mighty Fortress Is Our God","All Glory, Laud, and Honor","Sing Praise to Him","With Songs of Praise","Praise to the Lord, the Almighty","Praise the Lord with Heart and Voice","Praise Ye the Lord","In Hymns of Praise","God of Our Fathers, We Come unto Thee","Great Is the Lord","God of Our Fathers, Whose Almighty Hand","With All the Power of Heart and Tongue","God of Our Fathers, Known of Old","Press Forward, Saints","For All the Saints","Guide Us, O Thou Great Jehovah","Faith of Our Fathers","How Firm a Foundation","How Great Thou Art","God Is Love","Great God, Attend While Zion Sings","The Lord Is My Light","From All That Dwell below the Skies","Father, Thy Children to Thee Now Raise","For the Beauty of the Earth","Prayer of Thanksgiving","Come, Ye Thankful People","Now Thank We All Our God","Dearest Children, God Is Near You","Lead, Kindly Light","I Need Thee Every Hour","Nearer, Dear Savior, to Thee","Nearer, My God, to Thee","Guide Me to Thee","Jesus, Lover of My Soul","Precious Savior, Dear Redeemer","Jesus, Savior, Pilot Me","Master, the Tempest Is Raging","God Speed the Right","Lord, Accept Our True Devotion","The Lord Is My Shepherd","The Lord My Pasture Will Prepare","Cast Thy Burden upon the Lord","Rock of Ages","Savior, Redeemer of My Soul","Our Savior's Love","Come unto Him","Come, Ye Disconsolate","Come, Follow Me","Come unto Jesus","Ye Simple Souls Who Stray","Come, We That Love the Lord","Lean on My Ample Arm","I'm a Pilgrim, I'm a Stranger","Though Deepening Trials","Oh, May My Soul Commune with Thee","Be Still, My Soul","How Gentle God's Commands","How Long, O Lord Most Holy and True","Does the Journey Seem Long?","When Faith Endures","Where Can I Turn for Peace?","Be Thou Humble","More Holiness Give Me","God Is in His Holy Temple","Father in Heaven","I Believe in Christ","My Redeemer Lives","I Know That My Redeemer Lives","Testimony","Bless Our Fast, We Pray","In Fasting We Approach Thee","Did You Think to Pray?","Jesus, the Very Thought of Thee","Sweet Hour of Prayer","Let the Holy Spirit Guide","Secret Prayer","Prayer Is the Soul's Sincere Desire","Gently Raise the Sacred Strain","Sweet Is the Work","Sabbath Day","As the Dew from Heaven Distilling","O Thou Kind and Gracious Father","We Meet, Dear Lord","God Be with You Till We Meet Again","Lord, We Ask Thee Ere We Part","Father, This Hour Has Been One of Joy","We Have Partaken of Thy Love","Sing We Now at Parting","Thy Spirit, Lord, Has Stirred Our Souls","Before Thee, Lord, I Bow My Head","Now the Day Is Over","Softly Now the Light of Day","The Lord Be with Us","Lord, We Come before Thee Now","Lord, Dismiss Us with Thy Blessing","Great God, to Thee My Evening Song","Abide with Me; 'Tis Eventide","Abide with Me!","Come, Let Us Sing an Evening Hymn","As the Shadows Fall","As Now We Take the Sacrament","God, Our Father, Hear Us Pray","With Humble Heart","In Humility, Our Savior","While of These Emblems We Partake","While of These Emblems We Partake","O God, the Eternal Father","'Tis Sweet to Sing the Matchless Love","'Tis Sweet To Sing the Matchless Love","O Lord of Hosts","Again, Our Dear Redeeming Lord","Father in Heaven, We Do Believe","Jesus of Nazareth, Savior and King","We'll Sing All Hail to Jesus' Name","In Remembrance of Thy Suffering","Upon the Cross of Calvary","Reverently and Meekly Now","Again We Meet around the Board","God Loved Us, So He Sent His Son","Thy Will, O Lord, Be Done","O Thou, Before the World Began","In Memory of the Crucified","Behold the Great Redeemer Die","He Died! The Great Redeemer Died","I Stand All Amazed","There Is a Green Hill Far Away","How Great the Wisdom and the Love","Jesus, Once of Humble Birth","O Savior, Thou Who Wearest a Crown","That Easter Morn","He Is Risen!","Christ the Lord Is Risen Today","Joy to the World","Oh, Come, All Ye Faithful","Angels We Have Heard on High","Silent Night","Once in Royal David's City","Away in a Manger","It Came upon the Midnight Clear","O Little Town of Bethlehem","Hark! The Herald Angels Sing","With Wondering Awe","While Shepherds Watched Their Flocks","Far, Far Away on Judea's Plains","The First Noel","I Heard the Bells on Christmas Day","Ring Out, Wild Bells","We Are Sowing","Come, Let Us Anew","We Give Thee But Thine Own","Because I Have Been Given Much","Lord, I Would Follow Thee","Dear to the Heart of the Shepherd","Hear Thou Our Hymn, O Lord","Have I Done Any Good?","I Have Work Enough to Do","We Are Marching On to Glory","Improve the Shining Moments","There Is Sunshine in My Soul Today","You Can Make the Pathway Bright","Today, While the Sun Shines","Scatter Sunshine","Father, Cheer Our Souls Tonight","Let Us Oft Speak Kind Words","Nay, Speak No Ill","Jesus, Mighty King in Zion","Should You Feel Inclined to Censure","Lord, Accept into Thy Kingdom","Do What Is Right","Behold Thy Sons and Daughters, Lord","Choose the Right","Know This, That Every Soul Is Free","Count Your Blessings","Praise God, from Whom All Blessings Flow","Let Us All Press On","Come Along, Come Along","This House We Dedicate to Thee","Onward, Christian Soldiers","We Love Thy House, O God","Up, Awake, Ye Defenders of Zion","Called to Serve","We Are All Enlisted","Behold! A Royal Army","Put Your Shoulder to the Wheel","Like Ten Thousand Legions Marching","True to the Faith","Carry On","As Zion's Youth in Latter Days","Rejoice! A Glorious Sound Is Heard","O Thou Rock of Our Salvation","Hope of Israel","Who's on the Lord's Side?","Thy Servants Are Prepared","Go, Ye Messengers of Glory","Go Forth with Faith","Hark, All Ye Nations!","Arise, O God, and Shine","The Time Is Far Spent","How Wondrous and Great","Come, All Whose Souls Are Lighted","Jehovah, Lord of Heaven and Earth","I'll Go Where You Want Me to Go","Oh, Holy Words of Truth and Love","Oh Say, What Is Truth?","Truth Reflects upon Our Senses","The Iron Rod","Men Are That They Might Have Joy","Come Away to the Sunday School","As I Search the Holy Scriptures","Thanks for the Sabbath School","Thy Holy Word","Welcome, Welcome, Sabbath Morning","Help Me Teach with Inspiration","We Meet Again in Sabbath School","The Glorious Gospel Light Has Shone","If You Could Hie to Kolob","God Moves in a Mysterious Way","Oh, What Songs of the Heart","Rise, Ye Saints, and Temples Enter","How Beautiful Thy Temples, Lord","Holy Temples on Mount Zion","Rejoice, Ye Saints of Latter Days","Turn Your Hearts","O My Father","Each Life That Touches Ours for Good","Love at Home","O Love That Glorifies the Son","Our Father, by Whose Name","From Homes of Saints Glad Songs Arise","Home Can Be a Heaven on Earth","Children of Our Heavenly Father","Families Can Be Together Forever","I Am a Child of God","I Know My Father Lives","Keep the Commandments","Teach Me to Walk in the Light","The Light Divine","God's Daily Care","In Our Lovely Deseret","Love One Another","As Sisters in Zion (Women)","A Key Was Turned in Latter Days (Women)","We Meet Again as Sisters (Women)","We Ever Pray for Thee (Women)","God Is Love (Women)","How Gentle God's Commands (Women)","Jesus, the Very Thought of Thee (Women)","The Lord Is My Shepherd (Women)","Sweet Is the Work (Women)","Love at Home (Women)","Ye Elders of Israel (Men)","The Priesthood of Our Lord (Men)","Ye Who Are Called to Labor (Men)","Come, All Ye Sons of God (Men)","Rise Up, O Men of God (Men's Choir)","Rise Up, O Men of God (Men)","See the Mighty Priesthood Gathered (Men's Choir)","Come, Come, Ye Saints (Men's Choir)","Go, Ye Messengers of Heaven (Men's Choir)","An Angel from on High","Thy Servants Are Prepared (Men's Choir)","See, the Mighty Angel Flying (Men's Choir)","Oh Say, What Is Truth? (Men's Choir)","Come, O Thou King of Kings (Men's Choir)","High on the Mountain Top (Men's Choir)","I Need Thee Every Hour (Men's Choir)","Brightly Beams Our Father's Mercy (Men's Choir)","School Thy Feelings (Men's Choir)","O Home Beloved (Men's Choir)","America the Beautiful","My Country, 'Tis of Thee","The Star-Spangled Banner","God Save the King"];return{getList:function(){return e},getHymn:function(o){return o>341||1>o?"Invalid Hymn Number ("+o+")":e[o-1]}}}).factory("$localstorage",["$window",function(e){return{set:function(o,n){e.localStorage[o]=n},get:function(o,n){return e.localStorage[o]||n},setObject:function(o,n){e.localStorage[o]=JSON.stringify(n)},getObject:function(o){return JSON.parse(e.localStorage[o]||"{}")}}}]),angular.module("councilsApp").filter("weekDate",function(){return function(e){return moment().isoWeek(+e).day(0).format("MMM D")}}).filter("fullName",function(){return function(e,o){return e&&e.fname&&e.lname?e.fname+" "+e.lname:o}}),angular.module("councilsApp").directive("customPlaceholder",function(){return function(e,o){var n=o[0].getAttribute("custom-placeholder");o[0].customPlaceholder(n)}}).directive("commentCount",["$firebaseObject","User",function(e,o){var n=o.get();return{restrict:"A",template:"{{count.$value || 0}}",scope:{commentCount:"="},link:function(o,t,i){n.then(function(n){var t=new Firebase("https://councilsapp.firebaseio.com").child(n.homeUnitNbr+"/commentCount").child(o.commentCount);o.count=e(t)})}}}]).directive("uiSrefDisable",["$parse","$rootScope",function(e,o){return{priority:100,restrict:"A",compile:function(n,t){var i=e(t.uiSrefDisable);return{pre:function(e,n){var t="click";n.on(t,function(n){var t=function(){return i(e,{$event:n})?(n.stopImmediatePropagation(),n.preventDefault(),!1):void 0};o.$$phase?e.$evalAsync(t):e.$apply(t)})},post:function(){}}}}}]),angular.module("councilsApp").constant("MODALS",{connectionError:"views/modals/no_internet.html",permissionError:"views/modals/no_permission.html",feedback:"views/modals/feedback.html",members:"views/modals/members.html",createDiscussion:"views/council/discussion_new.html",createAssignment:"views/council/assignment_new.html"}).constant("AGENDAS",{stake:{0:"Presidency",1:"High Council",2:"Bishops",3:"Stake Council",4:"Bishops Welfare"},ward:{5:"Bishopric",6:"PEC",7:"Ward Council"}}).constant("COUNCILS",{stake:{0:"Stake Presidency",1:"High Council",2:"Patriarch",3:"Bishops",4:"Relief Society",5:"Young Men",6:"Young Women",7:"Sunday School",8:"Primary",9:"Missionary",10:"Auditing"},ward:{11:"Bishopric",12:"Ward Council",13:"Sacrament",14:"Interviews",15:"PEC",16:"High Priest",17:"Elders",18:"Relief Society",19:"Young Men",20:"Young Women",21:"Sunday School",22:"Primary"}});
//# sourceMappingURL=data:application/json;base64,
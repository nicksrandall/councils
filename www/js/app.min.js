angular.module("councilsApp",["firebase","ionic","ionic.service.core","ionic.service.analytics","ionic.service.push","ngCordova","ionic-datepicker"]).run(["$ionicPlatform","$rootScope","$state","$cordovaStatusbar","$timeout","Auth","User","$ionicUser","$ionicPush","$ionicAnalytics",function(e,o,t,n,r,a,i,s,l,u){e.ready(function(){u.register(),window.cordova&&window.cordova.plugins.Keyboard&&cordova.plugins.Keyboard.hideKeyboardAccessoryBar(!0),r(function(){window.StatusBar&&(window.StatusBar.overlaysWebView(!0),window.StatusBar.hide())},3e3),a.$onAuth(function(e){e?(console.log("Logged in as:",e.uid),i.set(e.uid).then(function(e){console.log("Ionic User: Identifying with Ionic User service");var o=s.get();o.user_id||(o.user_id=e.$id),angular.extend(o,{fname:e.fname,lname:e.lname,homeUnitNbr:e.homeUnitNbr,individualId:e.individualId,email:e.email}),s.identify(o).then(function(){alert("Identified user "+o.name+"\n ID "+o.user_id),window.plugins&&l.register({canShowAlert:!0,canSetBadge:!0,canPlaySound:!0,canRunActionsOnWake:!0,onNotification:function(e){return alert(e),!0}})})})):console.log("Logged out")})}),o.$on("$cordovaPush:tokenReceived",function(e,o){alert("Successfully registered token "+o.token),console.log("Ionic Push: Got token ",o.token,o.platform),i.get().then(function(e){return e.$ref().child("tokens").push(o)})}),o.$on("$stateChangeError",function(e,o,n,r,a,i){"AUTH_REQUIRED"===i&&t.go("simple.welcome")})}]),Array.prototype.contains=function(e){return-1!=this.indexOf(e)},Array.prototype.pushUnique=function(e){this.contains(e)||this.push(e)},Array.prototype.remove=function(e){if(this.contains(e)){var o=this.indexOf(e);this.splice(o,1)}},Date.prototype.addDays=function(e){var o=new Date(this.valueOf());return o.setDate(o.getDate()+e),o},Date.prototype.getMonthString=function(){var e=["January","February","March","April","May","June","July","August","September","October","November","December"];return e[this.getMonth()]},Date.prototype.getOrdinalSuffix=function(){switch(this.getDate()){case 1:case 21:case 31:suffix="st";break;case 2:case 22:suffix="nd";break;case 3:case 23:suffix="rd";break;default:suffix="th"}return suffix},function(){HTMLSelectElement.prototype.customPlaceholder=function(e){var o=document.createElement("option");o.value="",o.innerText=e,o.setAttribute("disabled",!0),o.setAttribute("selected",!0),o.style.display="none";var t=this.children[0];console.log(t),console.log(this.children),this.insertBefore(o,t)}}(),function(){HTMLTextAreaElement.prototype.autoResize=function(){var e=document.createElement("div"),o=["padding","padding-top","padding-bottom","padding-left","padding-right","font-family","font-size","line-height","font","width","min-height","word-wrap","white-space"],t=window.getComputedStyle(this,null);for(var n in o){var r=t.getPropertyValue([o[n]]);e.style[o[n]]=r}e.style.display="block",e.style.position="absolute",e.style.zIndex="-10",e.style.top="0",e.style.color="transparent",this.parentNode.appendChild(e);var a=function(){e.innerText=this.value;var o=parseInt(window.getComputedStyle(e,null).getPropertyValue("height"));o+=parseInt(e.style.lineHeight),this.style.height=o+"px"};this.addEventListener("keyup",a),a.apply(this)}}(),angular.module("councilsApp").config(["$stateProvider","$urlRouterProvider",function(e,o){o.otherwise("/menu/home");var t="views/";e.state("menu.home",{url:"/home",views:{menuContent:{templateUrl:t+"home.html",controller:"HomeController",resolve:{currentAuth:["Auth",function(e){return e.$requireAuth()}]}}}}),e.state("simple",{"abstract":!0,url:"/simple",views:{mainContent:{templateUrl:t+"/layouts/no_sidebar.html"}}}),e.state("menu",{"abstract":!0,url:"/menu",views:{mainContent:{templateUrl:t+"/layouts/sidebar.html"}}}),e.state("simple.welcome",{url:"/welcome",templateUrl:t+"welcome.html"}),e.state("simple.onboarding",{url:"/onboarding",templateUrl:t+"onboarding.html"}),e.state("simple.setup",{url:"/setup",templateUrl:t+"setup.html",controller:"SetupController",resolve:{currentAuth:["Auth",function(e){return e.$waitForAuth()}]}}),e.state("simple.create",{url:"/create",templateUrl:t+"create.html",controller:"CreateController",resolve:{currentAuth:["Auth",function(e){return e.$waitForAuth()}]}}),e.state("simple.login",{url:"/login",templateUrl:t+"login.html",controller:"LoginController",resolve:{currentAuth:["Auth",function(e){return e.$waitForAuth()}]}}),e.state("navigations",{url:"/navigation",templateUrl:t+"navigation.html"}),e.state("menu.profile",{url:"/profile",views:{menuContent:{templateUrl:t+"/profile.html"}}}),e.state("menu.council",{"abstract":!0,url:"/council",views:{menuContent:{templateUrl:t+"/council/wrapper.html",controller:"CouncilController",resolve:{currentAuth:["Auth",function(e){return e.$requireAuth()}]}}}}),e.state("menu.council.list",{url:"/list",views:{councilContent:{templateUrl:t+"/council/list.html"}}}),e.state("menu.council.tab",{"abstract":!0,url:"/tab",views:{councilContent:{templateUrl:t+"/council/tabbed_layout.html"}}}),e.state("menu.council.tab.discussion",{url:"/discussion",params:{currentCouncilTab:"discussions"},views:{tab:{templateUrl:t+"/council/discussion_list.html"}}}),e.state("menu.council.tab.assignment",{url:"/assignment",params:{currentCouncilTab:"assignments"},views:{tab:{templateUrl:t+"/council/assignment_list.html"}}}),e.state("menu.council.discussion_new",{url:"/discussion/new",views:{councilContent:{templateUrl:t+"/council/discussion_new.html"}}}),e.state("menu.council.assignment_new",{url:"/assignment/new",views:{councilContent:{templateUrl:t+"/council/assignment_new.html"}}}),e.state("menu.council.edit",{url:"edit",views:{councilContent:{templateUrl:t+"/council/edit.html"}}}),e.state("menu.agenda",{"abstract":!0,url:"/agenda",views:{menuContent:{templateUrl:t+"/agenda/wrapper.html",controller:"AgendaController"}}}),e.state("menu.agenda.list",{url:"/list",views:{agendaContent:{templateUrl:t+"/agenda/list.html"}}}),e.state("menu.agenda.detail",{url:"/detail",params:{agendaId:{value:-1},agendaGroupId:{value:"ward"}},views:{agendaContent:{templateUrl:t+"/agenda/detail.html"}}})}]),angular.module("councilsApp").controller("ApplicationController",["MODALS","$rootScope","$ionicHistory","$scope","$ionicModal","$ionicSideMenuDelegate",function(e,o,t,n,r,a){n.modal={},o.viewConfig={currentCouncilId:0,currentCouncilTab:"discussion"},o.back=function(){t.goBack()}}]).controller("LoginController",["$scope","Auth","$state","$localstorage",function(e,o,t,n){e.credentials={email:n.get("email")},e.login=function(){o.$authWithPassword({email:e.credentials.email,password:e.credentials.password}).then(function(o){n.set("email",e.credentials.email),console.log("Logged in as:",o.uid),t.go("menu.home")})["catch"](function(e){console.error("Authentication failed:",e)})}}]).controller("SetupController",["$scope","$http","me","$state","$q",function(e,o,t,n,r){e.credentials={},e.ldsLogin=function(){o.post("http://councils-app.herokuapp.com/api/me",e.credentials).then(function(e){t.set(e.data),n.go("simple.create")})}}]).controller("CreateController",["$scope","me","Auth","$firebaseObject","$state",function(e,o,t,n,r){var a=new Firebase("https://councilsapp.firebaseio.com/users"),i=n(a);e.me=o.get(),e.createAccount=function(){var a,s;t.$createUser({email:e.me.email,password:e.me.pass}).then(function(e){return s=e.uid,i[s]=a=o.get().homeUnitNbr,i.$save()}).then(function(){var e=new Firebase("https://councilsapp.firebaseio.com/"+a+"/users"),t=n(e);return t[s]=o.get(),t.$save()}).then(function(){return t.$authWithPassword({email:e.me.email,password:e.me.pass})}).then(function(e){r.go("menu.home")})["catch"](function(e){console.warn(e)})}}]).controller("HomeController",["$scope","User","currentAuth","$firebaseObject",function(e,o,t,n){e.assignments=[],e.discussions=[],o.set(t.uid).then(function(o){return o.$bindTo(e,"user")}).then(function(){var o=new Firebase("https://councilsapp.firebaseio.com/"+e.user.homeUnitNbr+"/assignments"),t=new Firebase("https://councilsapp.firebaseio.com/"+e.user.homeUnitNbr+"/discussions");console.log(e.user),_.forEach(e.user.assignments,function(t){var r=o.child(t);e.assignments.push(n(r))}),_.forEach(e.user.discussions,function(o){var r=t.child(o);e.discussions.push(n(r))})})}]).controller("AgendaController",["MemberService","$scope","$ionicHistory","HymnService","$stateParams","AGENDAS","MembersModal",function(e,o,t,n,r,a,i){o.members=e.getMembers(),o.openMembersModal=function(e,t){i.openModal(t,o.data[e]).then(function(t){o.data[e]=t})},o.$on("$stateChangeSuccess",function(e,t,n){"menu.agenda.detail"==t.name&&(o.agendaId=n.agendaId,o.agendaGroup=n.agendaGroupId)}),o.data={date:"",openingHymn:"",openingPrayer:"",spiritualThought:"",highCounselor:"",callings:"",spiritualWelfare:"",temporalWelfare:"",fellowship:"",missionary:"",events:"",closingPrayer:""},o.hymns=n.getList(),o.agendas=a,o.agendaAccess={2:!0,3:!0}}]).controller("CouncilDetailController",["$scope","$stateParams",function(e,o){e.tab=o.currentCouncilTab,e.$emit("councilDetailTabChanged",e.tab)}]).controller("CouncilController",["MemberService","MembersModal","COUNCILS","$scope","$stateParams","$rootScope","User","$firebaseArray",function(e,o,t,n,r,a,i,s){e.getMembers().then(function(e){n.members=e}),n.currentDate=new Date,n.title="Custom Title",n.datePickerCallback=function(e){"undefined"==typeof e?console.log("Date not selected"):console.log("Selected date is : ",e)},n.openMembersModal=function(e,t){o.openModal(t,n.data[e]).then(function(o){n.data[e]=1===t?o[0]:o,console.log("result",o,e)})},n.createAssignment=function(){console.log("assignments");var e,o;i.get().then(function(t){e=t;var r=new Firebase("https://councilsapp.firebaseio.com/"+t.homeUnitNbr+"/assignments"),a=s(r);return o={createdBy:t.$id,assignedTo:n.data.assignmentAssignee,dueDate:n.currentDate.toISOString(),content:n.data.content,completed:!1,participants:n.data.assignmentParticipants},a.$add(o)}).then(function(t){var n=t.key(),r=new Firebase("https://councilsapp.firebaseio.com/"+e.homeUnitNbr+"/users/");r.child(e.$id+"/assignments").push(n),o.participants.forEach(function(e){r.child(e+"/assignments").push(e)})}).then(function(){n.back()})},n.data={participants:[],discussionParticipants:[],assignmentParticipants:[],assignmentAssignee:null,content:""},n.$on("councilDetailTabChanged",function(e,o){console.log(o)}),n.councilList=t,n.councilAccess={1:{assignmentCount:3,commentCount:4},2:{assignmentCount:0,commentCount:2}},n.discussions=[{id:1,userAvatar:"headshot.png",userName:"David Ricardo",content:"Do we have any volunteers to provide refreshments for the Jack Welch fireside?",comments:[{},{},{},{}],createdDate:"2015-06-18T11:30:00"},{id:2,userAvatar:"headshot.png",userName:"David Ricardo",content:"Do we have any volunteers to provide refreshments for the Jack Welch fireside?",comments:[],createdDate:"2015-06-17T11:30:00"},{id:3,userAvatar:"headshot.png",userName:"David Ricardo",content:"Do we have any volunteers to provide refreshments for the Jack Welch fireside?",comments:[],createdDate:"2015-06-16T11:30:00"}],n.assignments=[{id:1,userName:"John Say",content:"Visit Juliet Schumpeter who just moved into the ward.",comments:[],dueDate:"2015-06-18T11:30:00",completed:!1},{id:2,userName:"Adelle Smith",content:"Fiona Hayek just had a baby. Assign sister to bring Dinner.",comments:[],dueDate:"2015-06-17T11:30:00",completed:!1},{id:3,userName:"David Ricardo",content:"Fill the Family History Consultant calling.",comments:[{},{}],dueDate:"2015-06-16T11:30:00",completed:!1}]}]),angular.module("councilsApp").factory("User",["$firebaseObject","$q",function(e,o){var t={},n=o.defer();return{get:function(){return n.promise.then(function(){return t})},set:function(o){var r=new Firebase("https://councilsapp.firebaseio.com/users/"+o);return e(r).$loaded().then(function(t){unit=t.$value,t.$destroy();var n=new Firebase("https://councilsapp.firebaseio.com/"+unit+"/users/"+o);return e(n).$loaded()}).then(function(e){return t=e,n.resolve(t),t})}}}]).factory("Auth",["$firebaseAuth",function(e){var o=new Firebase("https://councilsapp.firebaseio.com");return e(o)}]).factory("me",function(){var e={};return{getUnit:function(){return e.homeUnitNbr},get:function(){return e},set:function(o){e=o,e.fname=o.fname||o.preferredName.split(", ")[1],e.lname=o.lname||o.surname,e.email=o.email}}}).factory("MemberService",["$firebaseArray","User",function(e,o){return{getMembers:function(){return o.get().then(function(e){return e.homeUnitNbr}).then(function(o){{var t=new Firebase("https://councilsapp.firebaseio.com/"+o+"/users");e(t)}return e(t).$loaded()})}}}]).factory("MembersModal",["MemberService","$q","MODALS","$ionicModal","$rootScope",function(e,o,t,n,r){function a(e){$modalScope.search.Results=e.length?c.filter(function(e){var o=e.fname+" "+e.lname;return o.toLowerCase().indexOf($modalScope.search.Term.toLowerCase())>=0}):c}$modalScope=r.$new();var i,s="members",l=null;$modalScope.search={},$modalScope.selection={},$modalScope.search.Term="",$modalScope.search.Results={},$modalScope.selection.users=[];var u=function(e,r){var a=o.defer();return r&&($modalScope.selection.users=1===e?[r]:r),l=e||Number.MAX_VALUE,n.fromTemplateUrl(t[s],{animation:"slide-in-up",scope:$modalScope}).then(function(e){$modalScope.search.Term="",i=e,$modalScope.closeModal=function(){a.resolve($modalScope.selection.users.slice()),$modalScope.selection.users.splice(0,$modalScope.selection.users.length),i.remove()},i.show()}),a.promise};$modalScope.selection.toggle=function(e){$modalScope.selection.users.contains(e)?$modalScope.selection.users.remove(e):$modalScope.selection.users.length<=1&&1===l?($modalScope.selection.users.splice(0,1),$modalScope.selection.users.pushUnique(e),$modalScope.closeModal()):$modalScope.selection.users.length<l&&$modalScope.selection.users.pushUnique(e)},$modalScope.$watch("search.Term",a);var c=[];return e.getMembers().then(function(e){$modalScope.search.Results=c=e}),{openModal:u}}]).factory("CouncilsService",["$scope",function(){return function(){}}]).factory("HymnService",function(){var e=["The Morning Breaks","The Spirit of God","Now Let Us Rejoice","Truth Eternal","High on the Mountain Top","Redeemer of Israel","Israel, Israel, God Is Calling","Awake and Arise","Come, Rejoice","Come, Sing to the Lord","What Was Witnessed in the Heavens?","'Twas Witnessed in the Morning Sky","An Angel from on High","Sweet Is the Peace the Gospel Brings","I Saw a Mighty Angel Fly","What Glorious Scenes Mine Eyes Behold","Awake, Ye Saints of God, Awake!","The Voice of God Again Is Heard","We Thank Thee, O God, for a Prophet","God of Power, God of Right","Come, Listen to a Prophet's Voice","We Listen to a Prophet's Voice","We Ever Pray for Thee","God Bless Our Prophet Dear","Now We'll Sing with One Accord","Joseph Smith's First Prayer","Praise to the Man","Saints, Behold How Great Jehovah","A Poor Wayfaring Man of Grief","Come, Come, Ye Saints","O God, Our Help in Ages Past","The Happy Day at Last Has Come","Our Mountain Home So Dear","O Ye Mountains High","For the Strength of the Hills","They, the Builders of the Nation","The Wintry Day, Descending to Its Close","Come, All Ye Saints of Zion","O Saints of Zion","Arise, O Glorious Zion","Let Zion in Her Beauty Rise","Hail to the Brightness of Zion's Glad Morning!","Zion Stands with Hills Surrounded","Beautiful Zion, Built Above","Lead Me into Life Eternal","Glorious Things of Thee Are Spoken","We Will Sing of Zion","Glorious Things Are Sung of Zion","Adam-ondi-Ahman","Come, Thou Glorious Day of Promise","Sons of Michael, He Approaches","The Day Dawn Is Breaking","Let Earth's Inhabitants Rejoice","Behold, the Mountain of the Lord","Lo, the Mighty God Appearing!","Softly Beams the Sacred Dawning","We're Not Ashamed to Own Our Lord","Come, Ye Children of the Lord","Come, O Thou King of Kings","Battle Hymn of the Republic","Raise Your Voices to the Lord","All Creatures of Our God and King","Great King of Heaven","On This Day of Joy and Gladness","Come, All Ye Saints Who Dwell on Earth","Rejoice, the Lord Is King!","Glory to God on High","A Mighty Fortress Is Our God","All Glory, Laud, and Honor","Sing Praise to Him","With Songs of Praise","Praise to the Lord, the Almighty","Praise the Lord with Heart and Voice","Praise Ye the Lord","In Hymns of Praise","God of Our Fathers, We Come unto Thee","Great Is the Lord","God of Our Fathers, Whose Almighty Hand","With All the Power of Heart and Tongue","God of Our Fathers, Known of Old","Press Forward, Saints","For All the Saints","Guide Us, O Thou Great Jehovah","Faith of Our Fathers","How Firm a Foundation","How Great Thou Art","God Is Love","Great God, Attend While Zion Sings","The Lord Is My Light","From All That Dwell below the Skies","Father, Thy Children to Thee Now Raise","For the Beauty of the Earth","Prayer of Thanksgiving","Come, Ye Thankful People","Now Thank We All Our God","Dearest Children, God Is Near You","Lead, Kindly Light","I Need Thee Every Hour","Nearer, Dear Savior, to Thee","Nearer, My God, to Thee","Guide Me to Thee","Jesus, Lover of My Soul","Precious Savior, Dear Redeemer","Jesus, Savior, Pilot Me","Master, the Tempest Is Raging","God Speed the Right","Lord, Accept Our True Devotion","The Lord Is My Shepherd","The Lord My Pasture Will Prepare","Cast Thy Burden upon the Lord","Rock of Ages","Savior, Redeemer of My Soul","Our Savior's Love","Come unto Him","Come, Ye Disconsolate","Come, Follow Me","Come unto Jesus","Ye Simple Souls Who Stray","Come, We That Love the Lord","Lean on My Ample Arm","I'm a Pilgrim, I'm a Stranger","Though Deepening Trials","Oh, May My Soul Commune with Thee","Be Still, My Soul","How Gentle God's Commands","How Long, O Lord Most Holy and True","Does the Journey Seem Long?","When Faith Endures","Where Can I Turn for Peace?","Be Thou Humble","More Holiness Give Me","God Is in His Holy Temple","Father in Heaven","I Believe in Christ","My Redeemer Lives","I Know That My Redeemer Lives","Testimony","Bless Our Fast, We Pray","In Fasting We Approach Thee","Did You Think to Pray?","Jesus, the Very Thought of Thee","Sweet Hour of Prayer","Let the Holy Spirit Guide","Secret Prayer","Prayer Is the Soul's Sincere Desire","Gently Raise the Sacred Strain","Sweet Is the Work","Sabbath Day","As the Dew from Heaven Distilling","O Thou Kind and Gracious Father","We Meet, Dear Lord","God Be with You Till We Meet Again","Lord, We Ask Thee Ere We Part","Father, This Hour Has Been One of Joy","We Have Partaken of Thy Love","Sing We Now at Parting","Thy Spirit, Lord, Has Stirred Our Souls","Before Thee, Lord, I Bow My Head","Now the Day Is Over","Softly Now the Light of Day","The Lord Be with Us","Lord, We Come before Thee Now","Lord, Dismiss Us with Thy Blessing","Great God, to Thee My Evening Song","Abide with Me; 'Tis Eventide","Abide with Me!","Come, Let Us Sing an Evening Hymn","As the Shadows Fall","As Now We Take the Sacrament","God, Our Father, Hear Us Pray","With Humble Heart","In Humility, Our Savior","While of These Emblems We Partake","While of These Emblems We Partake","O God, the Eternal Father","'Tis Sweet to Sing the Matchless Love","'Tis Sweet To Sing the Matchless Love","O Lord of Hosts","Again, Our Dear Redeeming Lord","Father in Heaven, We Do Believe","Jesus of Nazareth, Savior and King","We'll Sing All Hail to Jesus' Name","In Remembrance of Thy Suffering","Upon the Cross of Calvary","Reverently and Meekly Now","Again We Meet around the Board","God Loved Us, So He Sent His Son","Thy Will, O Lord, Be Done","O Thou, Before the World Began","In Memory of the Crucified","Behold the Great Redeemer Die","He Died! The Great Redeemer Died","I Stand All Amazed","There Is a Green Hill Far Away","How Great the Wisdom and the Love","Jesus, Once of Humble Birth","O Savior, Thou Who Wearest a Crown","That Easter Morn","He Is Risen!","Christ the Lord Is Risen Today","Joy to the World","Oh, Come, All Ye Faithful","Angels We Have Heard on High","Silent Night","Once in Royal David's City","Away in a Manger","It Came upon the Midnight Clear","O Little Town of Bethlehem","Hark! The Herald Angels Sing","With Wondering Awe","While Shepherds Watched Their Flocks","Far, Far Away on Judea's Plains","The First Noel","I Heard the Bells on Christmas Day","Ring Out, Wild Bells","We Are Sowing","Come, Let Us Anew","We Give Thee But Thine Own","Because I Have Been Given Much","Lord, I Would Follow Thee","Dear to the Heart of the Shepherd","Hear Thou Our Hymn, O Lord","Have I Done Any Good?","I Have Work Enough to Do","We Are Marching On to Glory","Improve the Shining Moments","There Is Sunshine in My Soul Today","You Can Make the Pathway Bright","Today, While the Sun Shines","Scatter Sunshine","Father, Cheer Our Souls Tonight","Let Us Oft Speak Kind Words","Nay, Speak No Ill","Jesus, Mighty King in Zion","Should You Feel Inclined to Censure","Lord, Accept into Thy Kingdom","Do What Is Right","Behold Thy Sons and Daughters, Lord","Choose the Right","Know This, That Every Soul Is Free","Count Your Blessings","Praise God, from Whom All Blessings Flow","Let Us All Press On","Come Along, Come Along","This House We Dedicate to Thee","Onward, Christian Soldiers","We Love Thy House, O God","Up, Awake, Ye Defenders of Zion","Called to Serve","We Are All Enlisted","Behold! A Royal Army","Put Your Shoulder to the Wheel","Like Ten Thousand Legions Marching","True to the Faith","Carry On","As Zion's Youth in Latter Days","Rejoice! A Glorious Sound Is Heard","O Thou Rock of Our Salvation","Hope of Israel","Who's on the Lord's Side?","Thy Servants Are Prepared","Go, Ye Messengers of Glory","Go Forth with Faith","Hark, All Ye Nations!","Arise, O God, and Shine","The Time Is Far Spent","How Wondrous and Great","Come, All Whose Souls Are Lighted","Jehovah, Lord of Heaven and Earth","I'll Go Where You Want Me to Go","Oh, Holy Words of Truth and Love","Oh Say, What Is Truth?","Truth Reflects upon Our Senses","The Iron Rod","Men Are That They Might Have Joy","Come Away to the Sunday School","As I Search the Holy Scriptures","Thanks for the Sabbath School","Thy Holy Word","Welcome, Welcome, Sabbath Morning","Help Me Teach with Inspiration","We Meet Again in Sabbath School","The Glorious Gospel Light Has Shone","If You Could Hie to Kolob","God Moves in a Mysterious Way","Oh, What Songs of the Heart","Rise, Ye Saints, and Temples Enter","How Beautiful Thy Temples, Lord","Holy Temples on Mount Zion","Rejoice, Ye Saints of Latter Days","Turn Your Hearts","O My Father","Each Life That Touches Ours for Good","Love at Home","O Love That Glorifies the Son","Our Father, by Whose Name","From Homes of Saints Glad Songs Arise","Home Can Be a Heaven on Earth","Children of Our Heavenly Father","Families Can Be Together Forever","I Am a Child of God","I Know My Father Lives","Keep the Commandments","Teach Me to Walk in the Light","The Light Divine","God's Daily Care","In Our Lovely Deseret","Love One Another","As Sisters in Zion (Women)","A Key Was Turned in Latter Days (Women)","We Meet Again as Sisters (Women)","We Ever Pray for Thee (Women)","God Is Love (Women)","How Gentle God's Commands (Women)","Jesus, the Very Thought of Thee (Women)","The Lord Is My Shepherd (Women)","Sweet Is the Work (Women)","Love at Home (Women)","Ye Elders of Israel (Men)","The Priesthood of Our Lord (Men)","Ye Who Are Called to Labor (Men)","Come, All Ye Sons of God (Men)","Rise Up, O Men of God (Men's Choir)","Rise Up, O Men of God (Men)","See the Mighty Priesthood Gathered (Men's Choir)","Come, Come, Ye Saints (Men's Choir)","Go, Ye Messengers of Heaven (Men's Choir)","An Angel from on High","Thy Servants Are Prepared (Men's Choir)","See, the Mighty Angel Flying (Men's Choir)","Oh Say, What Is Truth? (Men's Choir)","Come, O Thou King of Kings (Men's Choir)","High on the Mountain Top (Men's Choir)","I Need Thee Every Hour (Men's Choir)","Brightly Beams Our Father's Mercy (Men's Choir)","School Thy Feelings (Men's Choir)","O Home Beloved (Men's Choir)","America the Beautiful","My Country, 'Tis of Thee","The Star-Spangled Banner","God Save the King"];return{getList:function(){return e},getHymn:function(o){return o>341||1>o?"Invalid Hymn Number ("+o+")":e[o-1]}}}).factory("$localstorage",["$window",function(e){return{set:function(o,t){e.localStorage[o]=t},get:function(o,t){return e.localStorage[o]||t},setObject:function(o,t){e.localStorage[o]=JSON.stringify(t)},getObject:function(o){return JSON.parse(e.localStorage[o]||"{}")}}}]),angular.module("councilsApp").filter("wordOrDate",function(){return function(e){var o=new Date(e),t=new Date,n=null,r=t.addDays(-1);return r.getYear()==o.getYear()&&r.getMonth()==o.getMonth()&&r.getDate()==o.getDate()&&(n="Yesterday"),r=t,r.getYear()==o.getYear()&&r.getMonth()==o.getMonth()&&r.getDate()==o.getDate()&&(n="Today"),r=t.addDays(1),r.getYear()==o.getYear()&&r.getMonth()==o.getMonth()&&r.getDate()==o.getDate()&&(n="Tomorrow"),output=n?n+" at "+o.getHours()%12+":"+o.getMinutes()+(o.getHours()>12?"PM":"AM"):o.getMonthString()+" "+o.getDate()+o.getOrdinalSuffix()+" at "+o.getHours()%12+":"+o.getMinutes()+(o.getHours()>12?"PM":"AM"),output}}).filter("fullName",function(){return function(e,o){return e&&e.fname&&e.lname?e.fname+" "+e.lname:o}}),angular.module("councilsApp").directive("autoResize",function(){return function(e,o){o[0].autoResize()}}).directive("customPlaceholder",function(){return function(e,o){var t=o[0].getAttribute("custom-placeholder");o[0].customPlaceholder(t)}}).directive("uiSrefDisable",["$parse","$rootScope",function(e,o){return{priority:100,restrict:"A",compile:function(t,n){var r=e(n.uiSrefDisable);return{pre:function(e,t){var n="click";t.on(n,function(t){var n=function(){return r(e,{$event:t})?(t.stopImmediatePropagation(),t.preventDefault(),!1):void 0};o.$$phase?e.$evalAsync(n):e.$apply(n)})},post:function(){}}}}}]),angular.module("councilsApp").constant("MODALS",{connectionError:"views/modals/no_internet.html",permissionError:"views/modals/no_permission.html",feedback:"views/modals/feedback.html",members:"views/modals/members.html"}).constant("AGENDAS",{stake:{0:"Presidency",1:"High Council",2:"Bishops",3:"Stake Council",4:"Bishops Welfare"},ward:{5:"Bishopric",6:"PEC",7:"Ward Council"}}).constant("COUNCILS",{stake:{0:"Stake Presidency",1:"High Council",2:"Patriarch",3:"Bishops",4:"Relief Society",5:"Young Men",6:"Young Women",7:"Sunday School",8:"Primary",9:"Missionary",10:"Auditing"},ward:{11:"Bishopric",12:"Ward Council",13:"Sacrament",14:"Interviews",15:"PEC",16:"High Priest",17:"Elders",18:"Relief Society",19:"Young Men",20:"Young Women",21:"Sunday School",22:"Primary"}});
//# sourceMappingURL=data:application/json;base64,